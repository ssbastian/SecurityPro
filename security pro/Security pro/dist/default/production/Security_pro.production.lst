

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Dec 13 23:39:52 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4550 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataBANK0
    94  001A52                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for _character4
    98  001A52  04                 	db	4
    99  001A53  15                 	db	21
   100  001A54  00                 	db	0
   101  001A55  0E                 	db	14
   102  001A56  0E                 	db	14
   103  001A57  0E                 	db	14
   104  001A58  00                 	db	0
   105  001A59  04                 	db	4
   106                           
   107                           ;initializer for _character3
   108  001A5A  00                 	db	0
   109  001A5B  04                 	db	4
   110  001A5C  04                 	db	4
   111  001A5D  04                 	db	4
   112  001A5E  1F                 	db	31
   113  001A5F  0E                 	db	14
   114  001A60  04                 	db	4
   115  001A61  00                 	db	0
   116                           
   117                           ;initializer for _character2
   118  001A62  00                 	db	0
   119  001A63  04                 	db	4
   120  001A64  0E                 	db	14
   121  001A65  1F                 	db	31
   122  001A66  04                 	db	4
   123  001A67  04                 	db	4
   124  001A68  04                 	db	4
   125  001A69  00                 	db	0
   126                           
   127                           ;initializer for _character1
   128  001A6A  01                 	db	1
   129  001A6B  00                 	db	0
   130  001A6C  1F                 	db	31
   131  001A6D  04                 	db	4
   132  001A6E  04                 	db	4
   133  001A6F  04                 	db	4
   134  001A70  04                 	db	4
   135  001A71  04                 	db	4
   136                           
   137                           ;initializer for main@F3747
   138  001A72  53                 	db	83
   139  001A73  4D                 	db	77
   140  001A74  54                 	db	84
   141  001A75  57                 	db	87
   142  001A76  74                 	db	116
   143  001A77  46                 	db	70
   144  001A78  73                 	db	115
   145                           
   146                           ;initializer for _estado_alarma
   147  001A79  0001               	dw	1
   148                           
   149                           ;initializer for _direccion3
   150  001A7B  03                 	db	3
   151                           
   152                           ;initializer for _direccion2
   153  001A7C  02                 	db	2
   154                           
   155                           ;initializer for _direccion1
   156  001A7D  01                 	db	1
   157                           
   158                           ;initializer for _clave3
   159  001A7E  33                 	db	51
   160                           
   161                           ;initializer for _clave2
   162  001A7F  32                 	db	50
   163                           
   164                           ;initializer for _clave1
   165  001A80  31                 	db	49
   166                           
   167                           	psect	idataBANK1
   168  001B96                     __pidataBANK1:
   169                           	callstack 0
   170                           
   171                           ;initializer for _buffer_TX
   172  001B96  64                 	db	100
   173  001B97  65                 	db	101
   174  001B98  74                 	db	116
   175  001B99  65                 	db	101
   176  001B9A  63                 	db	99
   177  001B9B  74                 	db	116
   178  001B9C  6F                 	db	111
   179  001B9D  20                 	db	32
   180  001B9E  75                 	db	117
   181  001B9F  6E                 	db	110
   182  001BA0  20                 	db	32
   183  001BA1  69                 	db	105
   184  001BA2  6E                 	db	110
   185  001BA3  74                 	db	116
   186  001BA4  72                 	db	114
   187  001BA5  75                 	db	117
   188  001BA6  73                 	db	115
   189  001BA7  6F                 	db	111
   190  001BA8  20                 	db	32
   191  001BA9  0D                 	db	13
   192  001BAA  00                 	db	0
   193  0000                     _TXREG	set	4013
   194  0000                     _PORTEbits	set	3972
   195  0000                     _PORTAbits	set	3968
   196  0000                     _LATA	set	3977
   197  0000                     _TRISAbits	set	3986
   198  0000                     _ADCON1bits	set	4033
   199  0000                     _SPBRG	set	4015
   200  0000                     _RCSTAbits	set	4011
   201  0000                     _BAUDCONbits	set	4024
   202  0000                     _TXSTAbits	set	4012
   203  0000                     _TRISCbits	set	3988
   204  0000                     _OSCCON	set	4051
   205  0000                     _SSPCON2bits	set	4037
   206  0000                     _SSPADD	set	4040
   207  0000                     _SSPCON2	set	4037
   208  0000                     _SSPCON1	set	4038
   209  0000                     _SSPSTAT	set	4039
   210  0000                     _SSPBUF	set	4041
   211  0000                     _SSPSTATbits	set	4039
   212  0000                     _LATD	set	3980
   213  0000                     _TRISD	set	3989
   214  0000                     _TRISE	set	3990
   215  0000                     _ADCON0bits	set	4034
   216  0000                     _ADRESL	set	4035
   217  0000                     _ADRESH	set	4036
   218  0000                     _ADCON2	set	4032
   219  0000                     _ADCON1	set	4033
   220  0000                     _ADCON0	set	4034
   221  0000                     _TRISA	set	3986
   222  0000                     _LATC2	set	31834
   223  0000                     _LATC1	set	31833
   224  0000                     _LATC0	set	31832
   225  0000                     _ACKEN	set	32300
   226  0000                     _ACKDT	set	32301
   227  0000                     _PEN	set	32298
   228  0000                     _RSEN	set	32297
   229  0000                     _ACKSTAT	set	32302
   230  0000                     _SSPIF	set	31987
   231  0000                     _SSPIE	set	31979
   232  0000                     _TRISB1	set	31897
   233  0000                     _TRISB0	set	31896
   234  0000                     _RCEN	set	32299
   235  0000                     _LATE2	set	31850
   236  0000                     _LATE1	set	31849
   237  0000                     _GO	set	32273
   238  0000                     _ADON	set	32272
   239                           
   240                           	psect	smallconst
   241  000800                     __psmallconst:
   242                           	callstack 0
   243  000800  00                 	db	0
   244  000801                     STR_4:
   245  000801  41                 	db	65	;'A'
   246  000802  4C                 	db	76	;'L'
   247  000803  41                 	db	65	;'A'
   248  000804  52                 	db	82	;'R'
   249  000805  4D                 	db	77	;'M'
   250  000806  41                 	db	65	;'A'
   251  000807  20                 	db	32
   252  000808  44                 	db	68	;'D'
   253  000809  45                 	db	69	;'E'
   254  00080A  53                 	db	83	;'S'
   255  00080B  41                 	db	65	;'A'
   256  00080C  43                 	db	67	;'C'
   257  00080D  54                 	db	84	;'T'
   258  00080E  49                 	db	73	;'I'
   259  00080F  56                 	db	86	;'V'
   260  000810  41                 	db	65	;'A'
   261  000811  44                 	db	68	;'D'
   262  000812  41                 	db	65	;'A'
   263  000813  00                 	db	0
   264  000814                     STR_5:
   265  000814  41                 	db	65	;'A'
   266  000815  4C                 	db	76	;'L'
   267  000816  41                 	db	65	;'A'
   268  000817  52                 	db	82	;'R'
   269  000818  4D                 	db	77	;'M'
   270  000819  41                 	db	65	;'A'
   271  00081A  20                 	db	32
   272  00081B  41                 	db	65	;'A'
   273  00081C  43                 	db	67	;'C'
   274  00081D  54                 	db	84	;'T'
   275  00081E  49                 	db	73	;'I'
   276  00081F  56                 	db	86	;'V'
   277  000820  41                 	db	65	;'A'
   278  000821  44                 	db	68	;'D'
   279  000822  41                 	db	65	;'A'
   280  000823  00                 	db	0
   281  000824                     STR_6:
   282  000824  41                 	db	65	;'A'
   283  000825  4C                 	db	76	;'L'
   284  000826  41                 	db	65	;'A'
   285  000827  52                 	db	82	;'R'
   286  000828  4D                 	db	77	;'M'
   287  000829  41                 	db	65	;'A'
   288  00082A  3A                 	db	58	;':'
   289  00082B  00                 	db	0
   290  00082C                     STR_14:
   291  00082C  53                 	db	83	;'S'
   292  00082D  46                 	db	70	;'F'
   293  00082E  3A                 	db	58	;':'
   294  00082F  20                 	db	32
   295  000830  00                 	db	0
   296  000831                     STR_8:
   297  000831  53                 	db	83	;'S'
   298  000832  49                 	db	73	;'I'
   299  000833  3A                 	db	58	;':'
   300  000834  20                 	db	32
   301  000835  00                 	db	0
   302  000836                     STR_11:
   303  000836  53                 	db	83	;'S'
   304  000837  54                 	db	84	;'T'
   305  000838  3A                 	db	58	;':'
   306  000839  20                 	db	32
   307  00083A  00                 	db	0
   308  00083B                     STR_9:
   309  00083B  4F                 	db	79	;'O'
   310  00083C  4E                 	db	78	;'N'
   311  00083D  20                 	db	32
   312  00083E  00                 	db	0
   313  00083F                     STR_1:
   314  00083F  25                 	db	37
   315  000840  78                 	db	120	;'x'
   316  000841  20                 	db	32
   317  000842  00                 	db	0
   318  000843                     STR_2:
   319  000843  25                 	db	37
   320  000844  78                 	db	120	;'x'
   321  000845  3A                 	db	58	;':'
   322  000846  00                 	db	0
   323  000847                     STR_10:
   324  000847  4F                 	db	79	;'O'
   325  000848  46                 	db	70	;'F'
   326  000849  46                 	db	70	;'F'
   327  00084A  00                 	db	0
   328  00084B                     STR_7:
   329  00084B  4F                 	db	79	;'O'
   330  00084C  4E                 	db	78	;'N'
   331  00084D  00                 	db	0
   332  00084E                     STR_3:
   333  00084E  25                 	db	37
   334  00084F  78                 	db	120	;'x'
   335  000850  00                 	db	0
   336  000851  00                 	db	0	; dummy byte at the end
   337  0000                     
   338                           ; #config settings
   339                           
   340                           	psect	cinit
   341  0015D6                     __pcinit:
   342                           	callstack 0
   343  0015D6                     start_initialization:
   344                           	callstack 0
   345  0015D6                     __initialization:
   346                           	callstack 0
   347                           
   348                           ; Initialize objects allocated to BANK1 (21 bytes)
   349                           ; load TBLPTR registers with __pidataBANK1
   350  0015D6  0E96               	movlw	low __pidataBANK1
   351  0015D8  6EF6               	movwf	tblptrl,c
   352  0015DA  0E1B               	movlw	high __pidataBANK1
   353  0015DC  6EF7               	movwf	tblptrh,c
   354  0015DE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   355  0015E0  6EF8               	movwf	tblptru,c
   356  0015E2  EE01  F020         	lfsr	0,__pdataBANK1
   357  0015E6  EE10 F015          	lfsr	1,21
   358  0015EA                     copy_data0:
   359  0015EA  0009               	tblrd		*+
   360  0015EC  CFF5 FFEE          	movff	tablat,postinc0
   361  0015F0  50E5               	movf	postdec1,w,c
   362  0015F2  50E1               	movf	fsr1l,w,c
   363  0015F4  E1FA               	bnz	copy_data0
   364                           
   365                           ; Initialize objects allocated to BANK0 (47 bytes)
   366                           ; load TBLPTR registers with __pidataBANK0
   367  0015F6  0E52               	movlw	low __pidataBANK0
   368  0015F8  6EF6               	movwf	tblptrl,c
   369  0015FA  0E1A               	movlw	high __pidataBANK0
   370  0015FC  6EF7               	movwf	tblptrh,c
   371  0015FE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   372  001600  6EF8               	movwf	tblptru,c
   373  001602  EE00  F099         	lfsr	0,__pdataBANK0
   374  001606  EE10 F02F          	lfsr	1,47
   375  00160A                     copy_data1:
   376  00160A  0009               	tblrd		*+
   377  00160C  CFF5 FFEE          	movff	tablat,postinc0
   378  001610  50E5               	movf	postdec1,w,c
   379  001612  50E1               	movf	fsr1l,w,c
   380  001614  E1FA               	bnz	copy_data1
   381                           
   382                           ; Clear objects allocated to BANK1 (32 bytes)
   383  001616  EE01  F000         	lfsr	0,__pbssBANK1
   384  00161A  0E20               	movlw	32
   385  00161C                     clear_0:
   386  00161C  6AEE               	clrf	postinc0,c
   387  00161E  06E8               	decf	wreg,f,c
   388  001620  E1FD               	bnz	clear_0
   389                           
   390                           ; Clear objects allocated to BANK0 (45 bytes)
   391  001622  EE00  F0C8         	lfsr	0,__pbssBANK0
   392  001626  0E2D               	movlw	45
   393  001628                     clear_1:
   394  001628  6AEE               	clrf	postinc0,c
   395  00162A  06E8               	decf	wreg,f,c
   396  00162C  E1FD               	bnz	clear_1
   397  00162E                     end_of_initialization:
   398                           	callstack 0
   399  00162E                     __end_of__initialization:
   400                           	callstack 0
   401  00162E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   402  001630  6EF8               	movwf	tblptru,c
   403  001632  0100               	movlb	0
   404  001634  EF96  F005         	goto	_main	;jump to C main() function
   405                           
   406                           	psect	bssBANK0
   407  0000C8                     __pbssBANK0:
   408                           	callstack 0
   409  0000C8                     _inclave:
   410                           	callstack 0
   411  0000C8                     	ds	5
   412  0000CD                     _nout:
   413                           	callstack 0
   414  0000CD                     	ds	2
   415  0000CF                     _width:
   416                           	callstack 0
   417  0000CF                     	ds	2
   418  0000D1                     _prec:
   419                           	callstack 0
   420  0000D1                     	ds	2
   421  0000D3                     _flags:
   422                           	callstack 0
   423  0000D3                     	ds	2
   424  0000D5                     _clavechecktotal:
   425                           	callstack 0
   426  0000D5                     	ds	2
   427  0000D7                     _clave3check:
   428                           	callstack 0
   429  0000D7                     	ds	2
   430  0000D9                     _clave2check:
   431                           	callstack 0
   432  0000D9                     	ds	2
   433  0000DB                     _clave1check:
   434                           	callstack 0
   435  0000DB                     	ds	2
   436  0000DD                     _Year:
   437                           	callstack 0
   438  0000DD                     	ds	2
   439  0000DF                     _Month:
   440                           	callstack 0
   441  0000DF                     	ds	2
   442  0000E1                     _Date:
   443                           	callstack 0
   444  0000E1                     	ds	2
   445  0000E3                     _Day:
   446                           	callstack 0
   447  0000E3                     	ds	2
   448  0000E5                     _hour:
   449                           	callstack 0
   450  0000E5                     	ds	2
   451  0000E7                     _min:
   452                           	callstack 0
   453  0000E7                     	ds	2
   454  0000E9                     _sec:
   455                           	callstack 0
   456  0000E9                     	ds	2
   457  0000EB                     	ds	1
   458  0000EC                     	ds	1
   459  0000ED                     	ds	1
   460  0000EE                     	ds	1
   461  0000EF                     	ds	1
   462  0000F0                     	ds	1
   463  0000F1                     	ds	1
   464  0000F2                     	ds	1
   465  0000F3                     _countinclave:
   466                           	callstack 0
   467  0000F3                     	ds	1
   468  0000F4                     _tecla:
   469                           	callstack 0
   470  0000F4                     	ds	1
   471                           
   472                           	psect	dataBANK0
   473  000099                     __pdataBANK0:
   474                           	callstack 0
   475  000099                     _character4:
   476                           	callstack 0
   477  000099                     	ds	8
   478  0000A1                     _character3:
   479                           	callstack 0
   480  0000A1                     	ds	8
   481  0000A9                     _character2:
   482                           	callstack 0
   483  0000A9                     	ds	8
   484  0000B1                     _character1:
   485                           	callstack 0
   486  0000B1                     	ds	8
   487  0000B9                     main@F3747:
   488                           	callstack 0
   489  0000B9                     	ds	7
   490  0000C0                     _estado_alarma:
   491                           	callstack 0
   492  0000C0                     	ds	2
   493  0000C2                     _direccion3:
   494                           	callstack 0
   495  0000C2                     	ds	1
   496  0000C3                     _direccion2:
   497                           	callstack 0
   498  0000C3                     	ds	1
   499  0000C4                     _direccion1:
   500                           	callstack 0
   501  0000C4                     	ds	1
   502  0000C5                     _clave3:
   503                           	callstack 0
   504  0000C5                     	ds	1
   505  0000C6                     _clave2:
   506                           	callstack 0
   507  0000C6                     	ds	1
   508  0000C7                     _clave1:
   509                           	callstack 0
   510  0000C7                     	ds	1
   511                           
   512                           	psect	bssBANK1
   513  000100                     __pbssBANK1:
   514                           	callstack 0
   515  000100                     _dbuf:
   516                           	callstack 0
   517  000100                     	ds	32
   518                           
   519                           	psect	dataBANK1
   520  000120                     __pdataBANK1:
   521                           	callstack 0
   522  000120                     _buffer_TX:
   523                           	callstack 0
   524  000120                     	ds	21
   525                           
   526                           	psect	cstackBANK0
   527  000060                     __pcstackBANK0:
   528                           	callstack 0
   529  000060                     ?_sprintf:
   530                           	callstack 0
   531  000060                     sprintf@s:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x0
   535  000060                     	ds	2
   536  000062                     sprintf@fmt:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x2
   540  000062                     	ds	6
   541  000068                     sprintf@ap:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x8
   545  000068                     	ds	2
   546  00006A                     sprintf@f:
   547                           	callstack 0
   548                           
   549                           ; 6 bytes @ 0xA
   550  00006A                     	ds	6
   551  000070                     main@secs:
   552                           	callstack 0
   553                           
   554                           ; 10 bytes @ 0x10
   555  000070                     	ds	10
   556  00007A                     main@mins:
   557                           	callstack 0
   558                           
   559                           ; 10 bytes @ 0x1A
   560  00007A                     	ds	10
   561  000084                     main@hours:
   562                           	callstack 0
   563                           
   564                           ; 10 bytes @ 0x24
   565  000084                     	ds	10
   566  00008E                     main@days:
   567                           	callstack 0
   568                           
   569                           ; 7 bytes @ 0x2E
   570  00008E                     	ds	8
   571  000096                     main@AM_PM:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x36
   575  000096                     	ds	1
   576  000097                     main@flag:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x37
   580  000097                     	ds	2
   581                           
   582                           	psect	cstackCOMRAM
   583  000001                     __pcstackCOMRAM:
   584                           	callstack 0
   585  000001                     ?_strlen:
   586                           	callstack 0
   587  000001                     ?_isupper:
   588                           	callstack 0
   589  000001                     ?_isalpha:
   590                           	callstack 0
   591  000001                     ?_islower:
   592                           	callstack 0
   593  000001                     I2C_Read@flag:
   594                           	callstack 0
   595  000001                     I2C_Write@data:
   596                           	callstack 0
   597  000001                     MSdelay@val:
   598                           	callstack 0
   599  000001                     isalpha@c:
   600                           	callstack 0
   601  000001                     isupper@c:
   602                           	callstack 0
   603  000001                     fputc@c:
   604                           	callstack 0
   605  000001                     strlen@s:
   606                           	callstack 0
   607  000001                     islower@c:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x0
   611  000001                     	ds	1
   612  000002                     I2C_Read@buffer:
   613                           	callstack 0
   614  000002                     I2C_Start@slave_write_address:
   615                           	callstack 0
   616  000002                     I2C_Repeated_Start@slave_read_address:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x1
   620  000002                     	ds	1
   621  000003                     ??_isupper:
   622  000003                     ??_isalpha:
   623  000003                     ??_islower:
   624  000003                     ??_RTC_Read_Clock:
   625  000003                     ??_RTC_Read_Calendar:
   626  000003                     MSdelay@i:
   627                           	callstack 0
   628  000003                     fputc@fp:
   629                           	callstack 0
   630  000003                     strlen@a:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x2
   634  000003                     	ds	1
   635  000004                     RTC_Read_Clock@read_clock_address:
   636                           	callstack 0
   637  000004                     RTC_Read_Calendar@read_calendar_address:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x3
   641  000004                     	ds	1
   642  000005                     ??_fputc:
   643  000005                     MSdelay@j:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x4
   647  000005                     	ds	2
   648  000007                     ?_toupper:
   649                           	callstack 0
   650  000007                     LCD_Command@cmd:
   651                           	callstack 0
   652  000007                     LCD_Char@char_data:
   653                           	callstack 0
   654  000007                     toupper@c:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x6
   658  000007                     	ds	1
   659  000008                     LCD_String@msg:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x7
   663  000008                     	ds	1
   664  000009                     ??_toupper:
   665                           
   666                           ; 1 bytes @ 0x8
   667  000009                     	ds	1
   668  00000A                     LCD_String_xy@pos:
   669                           	callstack 0
   670  00000A                     fputs@s:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x9
   674  00000A                     	ds	1
   675  00000B                     LCD_String_xy@str:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0xA
   679  00000B                     	ds	1
   680  00000C                     fputs@fp:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0xB
   684  00000C                     	ds	1
   685  00000D                     LCD_String_xy@row:
   686                           	callstack 0
   687  00000D                     _toupper$1593:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0xC
   691  00000D                     	ds	1
   692  00000E                     protocoloFDS@buffer_TX:
   693                           	callstack 0
   694  00000E                     protocoloNoche@buffer_TX:
   695                           	callstack 0
   696  00000E                     fputs@c:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0xD
   700  00000E                     	ds	1
   701  00000F                     protocoloFDS@buffer_TX_959:
   702                           	callstack 0
   703  00000F                     protocoloNoche@buffer_TX_984:
   704                           	callstack 0
   705  00000F                     fputs@i:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0xE
   709  00000F                     	ds	1
   710  000010                     protocoloFDS@i:
   711                           	callstack 0
   712  000010                     protocoloNoche@i:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0xF
   716  000010                     	ds	1
   717  000011                     ?_pad:
   718                           	callstack 0
   719  000011                     pad@fp:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x10
   723  000011                     	ds	2
   724  000013                     pad@buf:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x12
   728  000013                     	ds	2
   729  000015                     pad@p:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x14
   733  000015                     	ds	2
   734  000017                     ??_pad:
   735                           
   736                           ; 1 bytes @ 0x16
   737  000017                     	ds	1
   738  000018                     pad@i:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x17
   742  000018                     	ds	2
   743  00001A                     pad@w:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x19
   747  00001A                     	ds	2
   748  00001C                     ?_xtoa:
   749                           	callstack 0
   750  00001C                     xtoa@fp:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x1B
   754  00001C                     	ds	2
   755  00001E                     xtoa@d:
   756                           	callstack 0
   757                           
   758                           ; 8 bytes @ 0x1D
   759  00001E                     	ds	8
   760  000026                     xtoa@x:
   761                           	callstack 0
   762                           
   763                           ; 1 bytes @ 0x25
   764  000026                     	ds	1
   765  000027                     ??_xtoa:
   766                           
   767                           ; 1 bytes @ 0x26
   768  000027                     	ds	8
   769  00002F                     _xtoa$1510:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x2E
   773  00002F                     	ds	2
   774  000031                     _xtoa$1511:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x30
   778  000031                     	ds	2
   779  000033                     xtoa@p:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x32
   783  000033                     	ds	2
   784  000035                     xtoa@w:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x34
   788  000035                     	ds	2
   789  000037                     xtoa@n:
   790                           	callstack 0
   791                           
   792                           ; 8 bytes @ 0x36
   793  000037                     	ds	8
   794  00003F                     xtoa@i:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x3E
   798  00003F                     	ds	2
   799  000041                     xtoa@c:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x40
   803  000041                     	ds	2
   804  000043                     ?_vfpfcnvrt:
   805                           	callstack 0
   806  000043                     vfpfcnvrt@fp:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x42
   810  000043                     	ds	2
   811  000045                     vfpfcnvrt@fmt:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x44
   815  000045                     	ds	2
   816  000047                     vfpfcnvrt@ap:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x46
   820  000047                     	ds	2
   821  000049                     ??_vfpfcnvrt:
   822                           
   823                           ; 1 bytes @ 0x48
   824  000049                     	ds	4
   825  00004D                     vfpfcnvrt@llu:
   826                           	callstack 0
   827                           
   828                           ; 8 bytes @ 0x4C
   829  00004D                     	ds	8
   830  000055                     vfpfcnvrt@c:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x54
   834  000055                     	ds	1
   835  000056                     ?_vfprintf:
   836                           	callstack 0
   837  000056                     vfprintf@fp:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x55
   841  000056                     	ds	2
   842  000058                     vfprintf@fmt:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x57
   846  000058                     	ds	2
   847  00005A                     vfprintf@ap:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x59
   851  00005A                     	ds	2
   852  00005C                     vfprintf@cfmt:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x5B
   856  00005C                     	ds	2
   857  00005E                     ??_main:
   858                           
   859                           ; 1 bytes @ 0x5D
   860  00005E                     	ds	2
   861                           
   862 ;;
   863 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   864 ;;
   865 ;; *************** function _main *****************
   866 ;; Defined at:
   867 ;;		line 116 in file "Controler.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  hours          10   36[BANK0 ] unsigned char [10]
   872 ;;  mins           10   26[BANK0 ] unsigned char [10]
   873 ;;  secs           10   16[BANK0 ] unsigned char [10]
   874 ;;  year           10    0        unsigned char [10]
   875 ;;  month          10    0        unsigned char [10]
   876 ;;  date           10    0        unsigned char [10]
   877 ;;  days            7   46[BANK0 ] unsigned char [7]
   878 ;;  flag            2   55[BANK0 ] int 
   879 ;;  AM_PM           1   54[BANK0 ] unsigned char 
   880 ;;  Clock_type      1    0        unsigned char 
   881 ;;  i               1    0        unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   891 ;;      Params:         0       0       0       0       0       0       0       0       0
   892 ;;      Locals:         0      41       0       0       0       0       0       0       0
   893 ;;      Temps:          2       0       0       0       0       0       0       0       0
   894 ;;      Totals:         2      41       0       0       0       0       0       0       0
   895 ;;Total ram usage:       43 bytes
   896 ;; Hardware stack levels required when called:    8
   897 ;; This function calls:
   898 ;;		_ADC_Init
   899 ;;		_ActivateAlarm
   900 ;;		_I2C_Init
   901 ;;		_I2C_Stop
   902 ;;		_LCD_Clear
   903 ;;		_LCD_Init
   904 ;;		_MSdelay
   905 ;;		_RTC_Read_Calendar
   906 ;;		_RTC_Read_Clock
   907 ;;		_desactivarAlarm
   908 ;;		_protocoloFDS
   909 ;;		_protocoloNoche
   910 ;;		_protocoloProtocoloDia
   911 ;;		_sprintf
   912 ;; This function is called by:
   913 ;;		Startup code after reset
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text0
   918  000B2C                     __ptext0:
   919                           	callstack 0
   920  000B2C                     _main:
   921                           	callstack 23
   922  000B2C                     
   923                           ;Controler.c: 121:     char AM_PM = 0x05;
   924  000B2C  0E05               	movlw	5
   925  000B2E  0100               	movlb	0	; () banked
   926  000B30  6F96               	movwf	main@AM_PM& (0+255),b
   927  000B32                     
   928                           ; BSR set to: 0
   929                           ;Controler.c: 122:     char days[7] = {'S','M','T','W','t','F','s'};
   930  000B32  EE20  F0B9         	lfsr	2,main@F3747
   931  000B36  EE10  F08E         	lfsr	1,main@days
   932  000B3A  0E06               	movlw	6
   933  000B3C                     u2051:
   934  000B3C  CFDB FFE3          	movff	plusw2,plusw1
   935  000B40  06E8               	decf	wreg,f,c
   936  000B42  E2FC               	bc	u2051
   937  000B44                     
   938                           ; BSR set to: 0
   939                           ;Controler.c: 124:     char i;;Controler.c: 125:     OSCCON = 0x72;
   940  000B44  0E72               	movlw	114
   941  000B46  6ED3               	movwf	211,c	;volatile
   942  000B48                     
   943                           ; BSR set to: 0
   944                           ;Controler.c: 126:     LCD_Init();
   945  000B48  EC60  F00C         	call	_LCD_Init	;wreg free
   946  000B4C                     
   947                           ;Controler.c: 127:     ADC_Init();
   948  000B4C  ECBF  F00D         	call	_ADC_Init	;wreg free
   949  000B50                     
   950                           ;Controler.c: 130:     I2C_Init();
   951  000B50  ECB2  F00D         	call	_I2C_Init	;wreg free
   952  000B54                     
   953                           ;Controler.c: 135:     TRISCbits.RC6 = 0;
   954  000B54  9C94               	bcf	148,6,c	;volatile
   955  000B56                     
   956                           ;Controler.c: 136:     TXSTAbits.TX9 = 0;
   957  000B56  9CAC               	bcf	172,6,c	;volatile
   958  000B58                     
   959                           ;Controler.c: 137:     TXSTAbits.TXEN = 1;
   960  000B58  8AAC               	bsf	172,5,c	;volatile
   961  000B5A                     
   962                           ;Controler.c: 138:     TXSTAbits.SYNC = 0;
   963  000B5A  98AC               	bcf	172,4,c	;volatile
   964  000B5C                     
   965                           ;Controler.c: 139:     TXSTAbits.BRGH = 0;
   966  000B5C  94AC               	bcf	172,2,c	;volatile
   967  000B5E                     
   968                           ;Controler.c: 140:     BAUDCONbits.BRG16 = 0;
   969  000B5E  96B8               	bcf	184,3,c	;volatile
   970  000B60                     
   971                           ;Controler.c: 141:     RCSTAbits.SPEN = 1;
   972  000B60  8EAB               	bsf	171,7,c	;volatile
   973  000B62                     
   974                           ;Controler.c: 142:     SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
   975  000B62  0E0C               	movlw	12
   976  000B64  6EAF               	movwf	175,c	;volatile
   977  000B66                     
   978                           ;Controler.c: 155:          ADCON1bits.PCFG=0xff;
   979  000B66  0E0F               	movlw	15
   980  000B68  12C1               	iorwf	193,f,c	;volatile
   981  000B6A                     
   982                           ;Controler.c: 156:          TRISAbits.RA1 = 1;
   983  000B6A  8292               	bsf	146,1,c	;volatile
   984  000B6C                     
   985                           ;Controler.c: 157:          LATA=0X00;
   986  000B6C  0E00               	movlw	0
   987  000B6E  6E89               	movwf	137,c	;volatile
   988  000B70                     
   989                           ;Controler.c: 158:          TRISA=0X11;
   990  000B70  0E11               	movlw	17
   991  000B72  6E92               	movwf	146,c	;volatile
   992  000B74                     
   993                           ;Controler.c: 160:     int flag = PORTAbits.RA1;
   994  000B74  B280               	btfsc	128,1,c	;volatile
   995  000B76  EFBF  F005         	goto	u2061
   996  000B7A  EFC3  F005         	goto	u2060
   997  000B7E                     u2061:
   998  000B7E  6A5E               	clrf	??_main^0,c
   999  000B80  2A5E               	incf	??_main^0,f,c
  1000  000B82  EFC4  F005         	goto	u2068
  1001  000B86                     u2060:
  1002  000B86  6A5E               	clrf	??_main^0,c
  1003  000B88                     u2068:
  1004  000B88  505E               	movf	??_main^0,w,c
  1005  000B8A  0100               	movlb	0	; () banked
  1006  000B8C  6F97               	movwf	main@flag& (0+255),b
  1007  000B8E  6B98               	clrf	(main@flag+1)& (0+255),b
  1008  000B90                     l2862:
  1009                           
  1010                           ;Controler.c: 163:          ADCON1bits.PCFG=0xff;
  1011  000B90  0E0F               	movlw	15
  1012  000B92  12C1               	iorwf	193,f,c	;volatile
  1013  000B94                     
  1014                           ;Controler.c: 164:          TRISAbits.RA1 = 1;
  1015  000B94  8292               	bsf	146,1,c	;volatile
  1016  000B96                     
  1017                           ;Controler.c: 165:          LATA=0X00;
  1018  000B96  0E00               	movlw	0
  1019  000B98  6E89               	movwf	137,c	;volatile
  1020  000B9A                     
  1021                           ;Controler.c: 166:          TRISA=0X11;
  1022  000B9A  0E11               	movlw	17
  1023  000B9C  6E92               	movwf	146,c	;volatile
  1024  000B9E                     
  1025                           ;Controler.c: 169:         estado_alarma = PORTAbits.RA1;
  1026  000B9E  B280               	btfsc	128,1,c	;volatile
  1027  000BA0  EFD4  F005         	goto	u2071
  1028  000BA4  EFD8  F005         	goto	u2070
  1029  000BA8                     u2071:
  1030  000BA8  6A5E               	clrf	??_main^0,c
  1031  000BAA  2A5E               	incf	??_main^0,f,c
  1032  000BAC  EFD9  F005         	goto	u2078
  1033  000BB0                     u2070:
  1034  000BB0  6A5E               	clrf	??_main^0,c
  1035  000BB2                     u2078:
  1036  000BB2  505E               	movf	??_main^0,w,c
  1037  000BB4  0100               	movlb	0	; () banked
  1038  000BB6  6FC0               	movwf	_estado_alarma& (0+255),b
  1039  000BB8  6BC1               	clrf	(_estado_alarma+1)& (0+255),b
  1040  000BBA                     
  1041                           ; BSR set to: 0
  1042                           ;Controler.c: 171:              if(estado_alarma == 1){
  1043  000BBA  05C0               	decf	_estado_alarma& (0+255),w,b
  1044  000BBC  11C1               	iorwf	(_estado_alarma+1)& (0+255),w,b
  1045  000BBE  A4D8               	btfss	status,2,c
  1046  000BC0  EFE4  F005         	goto	u2081
  1047  000BC4  EFE6  F005         	goto	u2080
  1048  000BC8                     u2081:
  1049  000BC8  EFE6  F006         	goto	l2946
  1050  000BCC                     u2080:
  1051  000BCC                     
  1052                           ; BSR set to: 0
  1053                           ;Controler.c: 172:                  if(flag == 1)
  1054  000BCC  0597               	decf	main@flag& (0+255),w,b
  1055  000BCE  1198               	iorwf	(main@flag+1)& (0+255),w,b
  1056  000BD0  A4D8               	btfss	status,2,c
  1057  000BD2  EFED  F005         	goto	u2091
  1058  000BD6  EFEF  F005         	goto	u2090
  1059  000BDA                     u2091:
  1060  000BDA  EFF1  F005         	goto	l2878
  1061  000BDE                     u2090:
  1062  000BDE                     
  1063                           ; BSR set to: 0
  1064                           ;Controler.c: 173:                   ActivateAlarm();
  1065  000BDE  ECF7  F00B         	call	_ActivateAlarm	;wreg free
  1066  000BE2                     l2878:
  1067                           
  1068                           ;Controler.c: 174:                   flag = 0;
  1069  000BE2  0E00               	movlw	0
  1070  000BE4  0100               	movlb	0	; () banked
  1071  000BE6  6F98               	movwf	(main@flag+1)& (0+255),b
  1072  000BE8  0E00               	movlw	0
  1073  000BEA  6F97               	movwf	main@flag& (0+255),b
  1074  000BEC                     
  1075                           ; BSR set to: 0
  1076                           ;Controler.c: 178:            RTC_Read_Clock(0);
  1077  000BEC  0E00               	movlw	0
  1078  000BEE  EC1B  F00C         	call	_RTC_Read_Clock
  1079  000BF2                     
  1080                           ;Controler.c: 179:         I2C_Stop();
  1081  000BF2  ECD6  F00D         	call	_I2C_Stop	;wreg free
  1082  000BF6                     
  1083                           ;Controler.c: 180:         MSdelay(500);
  1084  000BF6  0E01               	movlw	1
  1085  000BF8  6E02               	movwf	(MSdelay@val+1)^0,c
  1086  000BFA  0EF4               	movlw	244
  1087  000BFC  6E01               	movwf	MSdelay@val^0,c
  1088  000BFE  ECD2  F00B         	call	_MSdelay	;wreg free
  1089  000C02                     
  1090                           ;Controler.c: 183:             hour = hour & (0x3f);
  1091  000C02  0E3F               	movlw	63
  1092  000C04  0100               	movlb	0	; () banked
  1093  000C06  15E5               	andwf	_hour& (0+255),w,b
  1094  000C08  6FE5               	movwf	_hour& (0+255),b
  1095  000C0A  6BE6               	clrf	(_hour+1)& (0+255),b
  1096  000C0C                     
  1097                           ; BSR set to: 0
  1098                           ;Controler.c: 184:             sprintf(secs,"%x ",sec);
  1099  000C0C  0E70               	movlw	low main@secs
  1100  000C0E  6F60               	movwf	sprintf@s& (0+255),b
  1101  000C10  0E00               	movlw	high main@secs
  1102  000C12  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1103  000C14  0E3F               	movlw	low STR_1
  1104  000C16  6F62               	movwf	sprintf@fmt& (0+255),b
  1105  000C18  0E08               	movlw	high STR_1
  1106  000C1A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1107  000C1C  C0E9  F064         	movff	_sec,?_sprintf+4
  1108  000C20  C0EA  F065         	movff	_sec+1,?_sprintf+5
  1109  000C24  ECA9  F00B         	call	_sprintf	;wreg free
  1110  000C28                     
  1111                           ;Controler.c: 185:             sprintf(mins,"%x:",min);
  1112  000C28  0E7A               	movlw	low main@mins
  1113  000C2A  0100               	movlb	0	; () banked
  1114  000C2C  6F60               	movwf	sprintf@s& (0+255),b
  1115  000C2E  0E00               	movlw	high main@mins
  1116  000C30  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1117  000C32  0E43               	movlw	low STR_2
  1118  000C34  6F62               	movwf	sprintf@fmt& (0+255),b
  1119  000C36  0E08               	movlw	high STR_2
  1120  000C38  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1121  000C3A  C0E7  F064         	movff	_min,?_sprintf+4
  1122  000C3E  C0E8  F065         	movff	_min+1,?_sprintf+5
  1123  000C42  ECA9  F00B         	call	_sprintf	;wreg free
  1124  000C46                     
  1125                           ;Controler.c: 186:             sprintf(hours,"%x",hour);
  1126  000C46  0E84               	movlw	low main@hours
  1127  000C48  0100               	movlb	0	; () banked
  1128  000C4A  6F60               	movwf	sprintf@s& (0+255),b
  1129  000C4C  0E00               	movlw	high main@hours
  1130  000C4E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1131  000C50  0E4E               	movlw	low STR_3
  1132  000C52  6F62               	movwf	sprintf@fmt& (0+255),b
  1133  000C54  0E08               	movlw	high STR_3
  1134  000C56  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1135  000C58  C0E5  F064         	movff	_hour,?_sprintf+4
  1136  000C5C  C0E6  F065         	movff	_hour+1,?_sprintf+5
  1137  000C60  ECA9  F00B         	call	_sprintf	;wreg free
  1138  000C64                     
  1139                           ;Controler.c: 190:             RTC_Read_Calendar(3);
  1140  000C64  0E03               	movlw	3
  1141  000C66  EC7C  F00B         	call	_RTC_Read_Calendar
  1142  000C6A                     
  1143                           ;Controler.c: 191:             I2C_Stop();
  1144  000C6A  ECD6  F00D         	call	_I2C_Stop	;wreg free
  1145                           
  1146                           ;Controler.c: 194:         switch(days[Day])
  1147  000C6E  EFB6  F006         	goto	l2944
  1148  000C72                     l2898:
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;Controler.c: 198:                         protocoloFDS();
  1152  000C72  EC9D  F008         	call	_protocoloFDS	;wreg free
  1153                           
  1154                           ;Controler.c: 199:                        break;
  1155  000C76  EFC8  F005         	goto	l2862
  1156  000C7A                     l2900:
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;Controler.c: 202:                 if(hour >= 0 && hour <= 19){
  1160  000C7A  BFE6               	btfsc	(_hour+1)& (0+255),7,b
  1161  000C7C  EF42  F006         	goto	u2101
  1162  000C80  EF44  F006         	goto	u2100
  1163  000C84                     u2101:
  1164  000C84  EF56  F006         	goto	l2906
  1165  000C88                     u2100:
  1166  000C88                     
  1167                           ; BSR set to: 0
  1168  000C88  BFE6               	btfsc	(_hour+1)& (0+255),7,b
  1169  000C8A  EF52  F006         	goto	u2110
  1170  000C8E  51E6               	movf	(_hour+1)& (0+255),w,b
  1171  000C90  E107               	bnz	u2111
  1172  000C92  0E14               	movlw	20
  1173  000C94  5DE5               	subwf	_hour& (0+255),w,b
  1174  000C96  B0D8               	btfsc	status,0,c
  1175  000C98  EF50  F006         	goto	u2111
  1176  000C9C  EF52  F006         	goto	u2110
  1177  000CA0                     u2111:
  1178  000CA0  EF56  F006         	goto	l2906
  1179  000CA4                     u2110:
  1180  000CA4                     l2904:
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;Controler.c: 205:                     protocoloProtocoloDia();
  1184  000CA4  EC5D  F009         	call	_protocoloProtocoloDia	;wreg free
  1185                           
  1186                           ;Controler.c: 206:                 }else{
  1187  000CA8  EFC8  F005         	goto	l2862
  1188  000CAC                     l2906:
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;Controler.c: 208:                     protocoloNoche();
  1192  000CAC  ECDD  F007         	call	_protocoloNoche	;wreg free
  1193  000CB0  EFC8  F005         	goto	l2862
  1194  000CB4                     l2908:
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;Controler.c: 213:                 if(hour >= 0 && hour <= 19){
  1198  000CB4  BFE6               	btfsc	(_hour+1)& (0+255),7,b
  1199  000CB6  EF5F  F006         	goto	u2121
  1200  000CBA  EF61  F006         	goto	u2120
  1201  000CBE                     u2121:
  1202  000CBE  EF56  F006         	goto	l2906
  1203  000CC2                     u2120:
  1204  000CC2                     
  1205                           ; BSR set to: 0
  1206  000CC2  BFE6               	btfsc	(_hour+1)& (0+255),7,b
  1207  000CC4  EF6F  F006         	goto	u2130
  1208  000CC8  51E6               	movf	(_hour+1)& (0+255),w,b
  1209  000CCA  E107               	bnz	u2131
  1210  000CCC  0E14               	movlw	20
  1211  000CCE  5DE5               	subwf	_hour& (0+255),w,b
  1212  000CD0  B0D8               	btfsc	status,0,c
  1213  000CD2  EF6D  F006         	goto	u2131
  1214  000CD6  EF6F  F006         	goto	u2130
  1215  000CDA                     u2131:
  1216  000CDA  EF56  F006         	goto	l2906
  1217  000CDE                     u2130:
  1218  000CDE  EF52  F006         	goto	l2904
  1219  000CE2                     l2916:
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;Controler.c: 224:                 if(hour >= 0 && hour <= 19){
  1223  000CE2  BFE6               	btfsc	(_hour+1)& (0+255),7,b
  1224  000CE4  EF76  F006         	goto	u2141
  1225  000CE8  EF78  F006         	goto	u2140
  1226  000CEC                     u2141:
  1227  000CEC  EF56  F006         	goto	l2906
  1228  000CF0                     u2140:
  1229  000CF0                     
  1230                           ; BSR set to: 0
  1231  000CF0  BFE6               	btfsc	(_hour+1)& (0+255),7,b
  1232  000CF2  EF86  F006         	goto	u2150
  1233  000CF6  51E6               	movf	(_hour+1)& (0+255),w,b
  1234  000CF8  E107               	bnz	u2151
  1235  000CFA  0E14               	movlw	20
  1236  000CFC  5DE5               	subwf	_hour& (0+255),w,b
  1237  000CFE  B0D8               	btfsc	status,0,c
  1238  000D00  EF84  F006         	goto	u2151
  1239  000D04  EF86  F006         	goto	u2150
  1240  000D08                     u2151:
  1241  000D08  EF56  F006         	goto	l2906
  1242  000D0C                     u2150:
  1243  000D0C  EF52  F006         	goto	l2904
  1244  000D10                     l2924:
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;Controler.c: 235:                 if(hour >= 0 && hour <= 19){
  1248  000D10  BFE6               	btfsc	(_hour+1)& (0+255),7,b
  1249  000D12  EF8D  F006         	goto	u2161
  1250  000D16  EF8F  F006         	goto	u2160
  1251  000D1A                     u2161:
  1252  000D1A  EF56  F006         	goto	l2906
  1253  000D1E                     u2160:
  1254  000D1E                     
  1255                           ; BSR set to: 0
  1256  000D1E  BFE6               	btfsc	(_hour+1)& (0+255),7,b
  1257  000D20  EF9D  F006         	goto	u2170
  1258  000D24  51E6               	movf	(_hour+1)& (0+255),w,b
  1259  000D26  E107               	bnz	u2171
  1260  000D28  0E14               	movlw	20
  1261  000D2A  5DE5               	subwf	_hour& (0+255),w,b
  1262  000D2C  B0D8               	btfsc	status,0,c
  1263  000D2E  EF9B  F006         	goto	u2171
  1264  000D32  EF9D  F006         	goto	u2170
  1265  000D36                     u2171:
  1266  000D36  EF56  F006         	goto	l2906
  1267  000D3A                     u2170:
  1268  000D3A  EF52  F006         	goto	l2904
  1269  000D3E                     l2932:
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;Controler.c: 246:                 if(hour >= 0 && hour <= 19){
  1273  000D3E  BFE6               	btfsc	(_hour+1)& (0+255),7,b
  1274  000D40  EFA4  F006         	goto	u2181
  1275  000D44  EFA6  F006         	goto	u2180
  1276  000D48                     u2181:
  1277  000D48  EF56  F006         	goto	l2906
  1278  000D4C                     u2180:
  1279  000D4C                     
  1280                           ; BSR set to: 0
  1281  000D4C  BFE6               	btfsc	(_hour+1)& (0+255),7,b
  1282  000D4E  EFB4  F006         	goto	u2190
  1283  000D52  51E6               	movf	(_hour+1)& (0+255),w,b
  1284  000D54  E107               	bnz	u2191
  1285  000D56  0E14               	movlw	20
  1286  000D58  5DE5               	subwf	_hour& (0+255),w,b
  1287  000D5A  B0D8               	btfsc	status,0,c
  1288  000D5C  EFB2  F006         	goto	u2191
  1289  000D60  EFB4  F006         	goto	u2190
  1290  000D64                     u2191:
  1291  000D64  EF56  F006         	goto	l2906
  1292  000D68                     u2190:
  1293  000D68  EF52  F006         	goto	l2904
  1294  000D6C                     l2944:
  1295  000D6C  0E8E               	movlw	low main@days
  1296  000D6E  0100               	movlb	0	; () banked
  1297  000D70  25E3               	addwf	_Day& (0+255),w,b
  1298  000D72  6ED9               	movwf	fsr2l,c
  1299  000D74  0E00               	movlw	high main@days
  1300  000D76  21E4               	addwfc	(_Day+1)& (0+255),w,b
  1301  000D78  6EDA               	movwf	fsr2h,c
  1302  000D7A  50DF               	movf	indf2,w,c
  1303  000D7C  6E5E               	movwf	??_main^0,c
  1304  000D7E  6A5F               	clrf	(??_main+1)^0,c
  1305                           
  1306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1307                           ; Switch size 1, requested type "simple"
  1308                           ; Number of cases is 1, Range of values is 0 to 0
  1309                           ; switch strategies available:
  1310                           ; Name         Instructions Cycles
  1311                           ; simple_byte            4     3 (average)
  1312                           ;	Chosen strategy is simple_byte
  1313  000D80  505F               	movf	(??_main+1)^0,w,c
  1314  000D82  0A00               	xorlw	0	; case 0
  1315  000D84  B4D8               	btfsc	status,2,c
  1316  000D86  EFC7  F006         	goto	l3128
  1317  000D8A  EFF1  F006         	goto	l341
  1318  000D8E                     l3128:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ; Switch size 1, requested type "simple"
  1322                           ; Number of cases is 7, Range of values is 70 to 116
  1323                           ; switch strategies available:
  1324                           ; Name         Instructions Cycles
  1325                           ; simple_byte           22    12 (average)
  1326                           ;	Chosen strategy is simple_byte
  1327  000D8E  505E               	movf	??_main^0,w,c
  1328  000D90  0A46               	xorlw	70	; case 70
  1329  000D92  B4D8               	btfsc	status,2,c
  1330  000D94  EF9F  F006         	goto	l2932
  1331  000D98  0A0B               	xorlw	11	; case 77
  1332  000D9A  B4D8               	btfsc	status,2,c
  1333  000D9C  EF3D  F006         	goto	l2900
  1334  000DA0  0A1E               	xorlw	30	; case 83
  1335  000DA2  B4D8               	btfsc	status,2,c
  1336  000DA4  EF39  F006         	goto	l2898
  1337  000DA8  0A07               	xorlw	7	; case 84
  1338  000DAA  B4D8               	btfsc	status,2,c
  1339  000DAC  EF5A  F006         	goto	l2908
  1340  000DB0  0A03               	xorlw	3	; case 87
  1341  000DB2  B4D8               	btfsc	status,2,c
  1342  000DB4  EF71  F006         	goto	l2916
  1343  000DB8  0A24               	xorlw	36	; case 115
  1344  000DBA  B4D8               	btfsc	status,2,c
  1345  000DBC  EF39  F006         	goto	l2898
  1346  000DC0  0A07               	xorlw	7	; case 116
  1347  000DC2  B4D8               	btfsc	status,2,c
  1348  000DC4  EF88  F006         	goto	l2924
  1349  000DC8  EFF1  F006         	goto	l341
  1350  000DCC                     l2946:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;Controler.c: 265:           desactivarAlarm();
  1354  000DCC  EC6F  F00D         	call	_desactivarAlarm	;wreg free
  1355  000DD0                     
  1356                           ;Controler.c: 267:            LCD_Clear();
  1357  000DD0  ECF4  F00D         	call	_LCD_Clear	;wreg free
  1358  000DD4                     
  1359                           ;Controler.c: 268:            flag = 1;
  1360  000DD4  0E00               	movlw	0
  1361  000DD6  0100               	movlb	0	; () banked
  1362  000DD8  6F98               	movwf	(main@flag+1)& (0+255),b
  1363  000DDA  0E01               	movlw	1
  1364  000DDC  6F97               	movwf	main@flag& (0+255),b
  1365  000DDE  EFC8  F005         	goto	l2862
  1366  000DE2                     l341:
  1367                           
  1368                           ; BSR set to: 0
  1369  000DE2  EFC8  F005         	goto	l2862
  1370  000DE6  EF00  F000         	goto	start
  1371  000DEA                     __end_of_main:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _sprintf *****************
  1375 ;; Defined at:
  1376 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1379 ;;		 -> main@hours(10), main@mins(10), main@secs(10), 
  1380 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1381 ;;		 -> STR_3(3), STR_2(4), STR_1(4), 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  f               6   10[BANK0 ] struct _IO_FILE
  1384 ;;  ap              2    8[BANK0 ] PTR void [1]
  1385 ;;		 -> ?_sprintf(2), 
  1386 ;;  ret             2    0        int 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  2    0[BANK0 ] int 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1396 ;;      Params:         0       6       0       0       0       0       0       0       0
  1397 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1399 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1400 ;;Total ram usage:       16 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    7
  1403 ;; This function calls:
  1404 ;;		_vfprintf
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text1
  1411  001752                     __ptext1:
  1412                           	callstack 0
  1413  001752                     _sprintf:
  1414                           	callstack 23
  1415  001752  0E64               	movlw	low (?_sprintf+4)
  1416  001754  0100               	movlb	0	; () banked
  1417  001756  6F68               	movwf	sprintf@ap& (0+255),b
  1418  001758  0E00               	movlw	high (?_sprintf+4)
  1419  00175A  6F69               	movwf	(sprintf@ap+1)& (0+255),b
  1420  00175C  C060  F06A         	movff	sprintf@s,sprintf@f
  1421  001760  C061  F06B         	movff	sprintf@s+1,sprintf@f+1
  1422  001764                     
  1423                           ; BSR set to: 0
  1424  001764  0E00               	movlw	0
  1425  001766  6F6D               	movwf	(sprintf@f+3)& (0+255),b
  1426  001768  0E00               	movlw	0
  1427  00176A  6F6C               	movwf	(sprintf@f+2)& (0+255),b
  1428  00176C                     
  1429                           ; BSR set to: 0
  1430  00176C  0E00               	movlw	0
  1431  00176E  6F6F               	movwf	(sprintf@f+5)& (0+255),b
  1432  001770  0E00               	movlw	0
  1433  001772  6F6E               	movwf	(sprintf@f+4)& (0+255),b
  1434  001774                     
  1435                           ; BSR set to: 0
  1436  001774  0E6A               	movlw	low sprintf@f
  1437  001776  6E56               	movwf	vfprintf@fp^0,c
  1438  001778  0E00               	movlw	high sprintf@f
  1439  00177A  6E57               	movwf	(vfprintf@fp+1)^0,c
  1440  00177C  C062  F058         	movff	sprintf@fmt,vfprintf@fmt
  1441  001780  C063  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1442  001784  0E68               	movlw	low sprintf@ap
  1443  001786  6E5A               	movwf	vfprintf@ap^0,c
  1444  001788  0E00               	movlw	high sprintf@ap
  1445  00178A  6E5B               	movwf	(vfprintf@ap+1)^0,c
  1446  00178C  EC1C  F00B         	call	_vfprintf	;wreg free
  1447  001790  0100               	movlb	0	; () banked
  1448  001792  516C               	movf	(sprintf@f+2)& (0+255),w,b
  1449  001794  2560               	addwf	sprintf@s& (0+255),w,b
  1450  001796  6ED9               	movwf	fsr2l,c
  1451  001798  516D               	movf	(sprintf@f+3)& (0+255),w,b
  1452  00179A  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1453  00179C  6EDA               	movwf	fsr2h,c
  1454  00179E  0E00               	movlw	0
  1455  0017A0  6EDF               	movwf	indf2,c
  1456  0017A2                     
  1457                           ; BSR set to: 0
  1458  0017A2  0012               	return		;funcret
  1459  0017A4                     __end_of_sprintf:
  1460                           	callstack 0
  1461                           
  1462 ;; *************** function _vfprintf *****************
  1463 ;; Defined at:
  1464 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1467 ;;		 -> sprintf@f(6), 
  1468 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1469 ;;		 -> STR_3(3), STR_2(4), STR_1(4), 
  1470 ;;  ap              2   89[COMRAM] PTR PTR void 
  1471 ;;		 -> sprintf@ap(2), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1474 ;;		 -> STR_3(3), STR_2(4), STR_1(4), 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2   85[COMRAM] int 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1484 ;;      Params:         6       0       0       0       0       0       0       0       0
  1485 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1487 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1488 ;;Total ram usage:        8 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    6
  1491 ;; This function calls:
  1492 ;;		_vfpfcnvrt
  1493 ;; This function is called by:
  1494 ;;		_sprintf
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text2
  1499  001638                     __ptext2:
  1500                           	callstack 0
  1501  001638                     _vfprintf:
  1502                           	callstack 23
  1503  001638                     
  1504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1505  001638  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1506  00163C  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1507  001640                     
  1508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1509  001640  0E00               	movlw	0
  1510  001642  0100               	movlb	0	; () banked
  1511  001644  6FCE               	movwf	(_nout+1)& (0+255),b
  1512  001646  0E00               	movlw	0
  1513  001648  6FCD               	movwf	_nout& (0+255),b
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1516  00164A  EF3A  F00B         	goto	l2518
  1517  00164E                     l2516:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1521  00164E  C056  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1522  001652  C057  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1523  001656  0E5C               	movlw	low vfprintf@cfmt
  1524  001658  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1525  00165A  0E00               	movlw	high vfprintf@cfmt
  1526  00165C  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1527  00165E  C05A  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1528  001662  C05B  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1529  001666  ECF5  F006         	call	_vfpfcnvrt	;wreg free
  1530  00166A  5043               	movf	?_vfpfcnvrt^0,w,c
  1531  00166C  0100               	movlb	0	; () banked
  1532  00166E  27CD               	addwf	_nout& (0+255),f,b
  1533  001670  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1534  001672  23CE               	addwfc	(_nout+1)& (0+255),f,b
  1535  001674                     l2518:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1539  001674  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1540  001678  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1541  00167C                     	if	0	;tblptru may be non-zero
  1542  00167C                     	endif
  1543  00167C                     	if	0	;tblptru may be non-zero
  1544  00167C                     	endif
  1545  00167C  0008               	tblrd		*
  1546  00167E  50F5               	movf	tablat,w,c
  1547  001680  0900               	iorlw	0
  1548  001682  A4D8               	btfss	status,2,c
  1549  001684  EF46  F00B         	goto	u1801
  1550  001688  EF48  F00B         	goto	u1800
  1551  00168C                     u1801:
  1552  00168C  EF27  F00B         	goto	l2516
  1553  001690                     u1800:
  1554  001690                     
  1555                           ; BSR set to: 0
  1556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1557  001690  C0CD  F056         	movff	_nout,?_vfprintf
  1558  001694  C0CE  F057         	movff	_nout+1,?_vfprintf+1
  1559  001698                     
  1560                           ; BSR set to: 0
  1561  001698  0012               	return		;funcret
  1562  00169A                     __end_of_vfprintf:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _vfpfcnvrt *****************
  1566 ;; Defined at:
  1567 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1570 ;;		 -> sprintf@f(6), 
  1571 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1572 ;;		 -> vfprintf@cfmt(2), 
  1573 ;;  ap              2   70[COMRAM] PTR PTR void 
  1574 ;;		 -> sprintf@ap(2), 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  llu             8   76[COMRAM] unsigned long long 
  1577 ;;  ll              8    0        long long 
  1578 ;;  f               4    0        long long 
  1579 ;;  vp              3    0        PTR void 
  1580 ;;  ct              3    0        unsigned char [3]
  1581 ;;  cp              3    0        PTR unsigned char 
  1582 ;;  i               2    0        int 
  1583 ;;  done            2    0        int 
  1584 ;;  c               1   84[COMRAM] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  2   66[COMRAM] int 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1594 ;;      Params:         6       0       0       0       0       0       0       0       0
  1595 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1596 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1597 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1598 ;;Total ram usage:       19 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    5
  1601 ;; This function calls:
  1602 ;;		_fputc
  1603 ;;		_xtoa
  1604 ;; This function is called by:
  1605 ;;		_vfprintf
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text3
  1610  000DEA                     __ptext3:
  1611                           	callstack 0
  1612  000DEA                     _vfpfcnvrt:
  1613                           	callstack 23
  1614  000DEA                     
  1615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1616  000DEA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1617  000DEE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1618  000DF2  CFDE FFF6          	movff	postinc2,tblptrl
  1619  000DF6  CFDD FFF7          	movff	postdec2,tblptrh
  1620  000DFA                     	if	0	;tblptru may be non-zero
  1621  000DFA                     	endif
  1622  000DFA                     	if	0	;tblptru may be non-zero
  1623  000DFA                     	endif
  1624  000DFA  0008               	tblrd		*
  1625  000DFC  50F5               	movf	tablat,w,c
  1626  000DFE  0A25               	xorlw	37
  1627  000E00  A4D8               	btfss	status,2,c
  1628  000E02  EF05  F007         	goto	u1651
  1629  000E06  EF07  F007         	goto	u1650
  1630  000E0A                     u1651:
  1631  000E0A  EFC1  F007         	goto	l2450
  1632  000E0E                     u1650:
  1633  000E0E                     
  1634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1635  000E0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1636  000E12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1637  000E16  2ADE               	incf	postinc2,f,c
  1638  000E18  0E00               	movlw	0
  1639  000E1A  22DD               	addwfc	postdec2,f,c
  1640  000E1C                     
  1641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1642  000E1C  0E00               	movlw	0
  1643  000E1E  0100               	movlb	0	; () banked
  1644  000E20  6FD0               	movwf	(_width+1)& (0+255),b
  1645  000E22  0E00               	movlw	0
  1646  000E24  6FCF               	movwf	_width& (0+255),b
  1647  000E26  C0CF  F0D3         	movff	_width,_flags
  1648  000E2A  C0D0  F0D4         	movff	_width+1,_flags+1
  1649  000E2E                     
  1650                           ; BSR set to: 0
  1651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1652  000E2E  69D1               	setf	_prec& (0+255),b
  1653  000E30  69D2               	setf	(_prec+1)& (0+255),b
  1654  000E32                     
  1655                           ; BSR set to: 0
  1656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1657  000E32  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1658  000E36  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1659  000E3A  CFDE FFF6          	movff	postinc2,tblptrl
  1660  000E3E  CFDD FFF7          	movff	postdec2,tblptrh
  1661  000E42                     	if	0	;tblptru may be non-zero
  1662  000E42                     	endif
  1663  000E42                     	if	0	;tblptru may be non-zero
  1664  000E42                     	endif
  1665  000E42  0008               	tblrd		*
  1666  000E44  50F5               	movf	tablat,w,c
  1667  000E46  0A78               	xorlw	120
  1668  000E48  B4D8               	btfsc	status,2,c
  1669  000E4A  EF29  F007         	goto	u1661
  1670  000E4E  EF2B  F007         	goto	u1660
  1671  000E52                     u1661:
  1672  000E52  EF3D  F007         	goto	l2424
  1673  000E56                     u1660:
  1674  000E56                     
  1675                           ; BSR set to: 0
  1676  000E56  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1677  000E5A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1678  000E5E  CFDE FFF6          	movff	postinc2,tblptrl
  1679  000E62  CFDD FFF7          	movff	postdec2,tblptrh
  1680  000E66                     	if	0	;tblptru may be non-zero
  1681  000E66                     	endif
  1682  000E66                     	if	0	;tblptru may be non-zero
  1683  000E66                     	endif
  1684  000E66  0008               	tblrd		*
  1685  000E68  50F5               	movf	tablat,w,c
  1686  000E6A  0A58               	xorlw	88
  1687  000E6C  A4D8               	btfss	status,2,c
  1688  000E6E  EF3B  F007         	goto	u1671
  1689  000E72  EF3D  F007         	goto	u1670
  1690  000E76                     u1671:
  1691  000E76  EF8B  F007         	goto	l2434
  1692  000E7A                     u1670:
  1693  000E7A                     l2424:
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1697  000E7A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1698  000E7E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1699  000E82  CFDE FFF6          	movff	postinc2,tblptrl
  1700  000E86  CFDD FFF7          	movff	postdec2,tblptrh
  1701  000E8A                     	if	0	;tblptru may be non-zero
  1702  000E8A                     	endif
  1703  000E8A                     	if	0	;tblptru may be non-zero
  1704  000E8A                     	endif
  1705  000E8A  0008               	tblrd		*
  1706  000E8C  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1707  000E90                     
  1708                           ; BSR set to: 0
  1709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1710  000E90  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1711  000E94  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1712  000E98  2ADE               	incf	postinc2,f,c
  1713  000E9A  0E00               	movlw	0
  1714  000E9C  22DD               	addwfc	postdec2,f,c
  1715  000E9E                     
  1716                           ; BSR set to: 0
  1717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1718  000E9E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1719  000EA2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1720  000EA6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1721  000EAA  0E02               	movlw	2
  1722  000EAC  26DE               	addwf	postinc2,f,c
  1723  000EAE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1724  000EB2  0E00               	movlw	0
  1725  000EB4  22DD               	addwfc	postdec2,f,c
  1726  000EB6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1727  000EBA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1728  000EBE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  1729  000EC2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  1730  000EC6  C04B  F04D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1731  000ECA  C04C  F04E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1732  000ECE  6A4F               	clrf	(vfpfcnvrt@llu+2)^0,c
  1733  000ED0  6A50               	clrf	(vfpfcnvrt@llu+3)^0,c
  1734  000ED2  6A51               	clrf	(vfpfcnvrt@llu+4)^0,c
  1735  000ED4  6A52               	clrf	(vfpfcnvrt@llu+5)^0,c
  1736  000ED6  6A53               	clrf	(vfpfcnvrt@llu+6)^0,c
  1737  000ED8  6A54               	clrf	(vfpfcnvrt@llu+7)^0,c
  1738  000EDA                     
  1739                           ; BSR set to: 0
  1740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1741  000EDA  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1742  000EDE  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1743  000EE2  C04D  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1744  000EE6  C04E  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1745  000EEA  C04F  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1746  000EEE  C050  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1747  000EF2  C051  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1748  000EF6  C052  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1749  000EFA  C053  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1750  000EFE  C054  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1751  000F02  C055  F026         	movff	vfpfcnvrt@c,xtoa@x
  1752  000F06  EC29  F004         	call	_xtoa	;wreg free
  1753  000F0A  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  1754  000F0E  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1755  000F12  EFDC  F007         	goto	l1197
  1756  000F16                     l2434:
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1760  000F16  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1761  000F1A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1762  000F1E  CFDE FFF6          	movff	postinc2,tblptrl
  1763  000F22  CFDD FFF7          	movff	postdec2,tblptrh
  1764  000F26                     	if	0	;tblptru may be non-zero
  1765  000F26                     	endif
  1766  000F26                     	if	0	;tblptru may be non-zero
  1767  000F26                     	endif
  1768  000F26  0008               	tblrd		*
  1769  000F28  50F5               	movf	tablat,w,c
  1770  000F2A  0A25               	xorlw	37
  1771  000F2C  A4D8               	btfss	status,2,c
  1772  000F2E  EF9B  F007         	goto	u1681
  1773  000F32  EF9D  F007         	goto	u1680
  1774  000F36                     u1681:
  1775  000F36  EFB4  F007         	goto	l2444
  1776  000F3A                     u1680:
  1777  000F3A                     
  1778                           ; BSR set to: 0
  1779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1780  000F3A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1781  000F3E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1782  000F42  2ADE               	incf	postinc2,f,c
  1783  000F44  0E00               	movlw	0
  1784  000F46  22DD               	addwfc	postdec2,f,c
  1785  000F48                     
  1786                           ; BSR set to: 0
  1787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1788  000F48  0E00               	movlw	0
  1789  000F4A  6E02               	movwf	(fputc@c+1)^0,c
  1790  000F4C  0E25               	movlw	37
  1791  000F4E  6E01               	movwf	fputc@c^0,c
  1792  000F50  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1793  000F54  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1794  000F58  ECDC  F009         	call	_fputc	;wreg free
  1795  000F5C                     l2440:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1798  000F5C  0E00               	movlw	0
  1799  000F5E  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1800  000F60  0E01               	movlw	1
  1801  000F62  6E43               	movwf	?_vfpfcnvrt^0,c
  1802  000F64  EFDC  F007         	goto	l1197
  1803  000F68                     l2444:
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1807  000F68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1808  000F6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1809  000F70  2ADE               	incf	postinc2,f,c
  1810  000F72  0E00               	movlw	0
  1811  000F74  22DD               	addwfc	postdec2,f,c
  1812  000F76                     
  1813                           ; BSR set to: 0
  1814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1815  000F76  0E00               	movlw	0
  1816  000F78  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1817  000F7A  0E00               	movlw	0
  1818  000F7C  6E43               	movwf	?_vfpfcnvrt^0,c
  1819  000F7E  EFDC  F007         	goto	l1197
  1820  000F82                     l2450:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1823  000F82  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1824  000F86  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1825  000F8A  CFDE FFF6          	movff	postinc2,tblptrl
  1826  000F8E  CFDD FFF7          	movff	postdec2,tblptrh
  1827  000F92                     	if	0	;tblptru may be non-zero
  1828  000F92                     	endif
  1829  000F92                     	if	0	;tblptru may be non-zero
  1830  000F92                     	endif
  1831  000F92  0008               	tblrd		*
  1832  000F94  50F5               	movf	tablat,w,c
  1833  000F96  6E01               	movwf	fputc@c^0,c
  1834  000F98  6A02               	clrf	(fputc@c+1)^0,c
  1835  000F9A  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1836  000F9E  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1837  000FA2  ECDC  F009         	call	_fputc	;wreg free
  1838  000FA6                     
  1839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1840  000FA6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1841  000FAA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1842  000FAE  2ADE               	incf	postinc2,f,c
  1843  000FB0  0E00               	movlw	0
  1844  000FB2  22DD               	addwfc	postdec2,f,c
  1845  000FB4  EFAE  F007         	goto	l2440
  1846  000FB8                     l1197:
  1847  000FB8  0012               	return		;funcret
  1848  000FBA                     __end_of_vfpfcnvrt:
  1849                           	callstack 0
  1850                           
  1851 ;; *************** function _xtoa *****************
  1852 ;; Defined at:
  1853 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1856 ;;		 -> sprintf@f(6), 
  1857 ;;  d               8   29[COMRAM] unsigned long long 
  1858 ;;  x               1   37[COMRAM] unsigned char 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  n               8   54[COMRAM] unsigned long long 
  1861 ;;  c               2   64[COMRAM] int 
  1862 ;;  i               2   62[COMRAM] int 
  1863 ;;  w               2   52[COMRAM] int 
  1864 ;;  p               2   50[COMRAM] int 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  2   27[COMRAM] int 
  1867 ;; Registers used:
  1868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1874 ;;      Params:        11       0       0       0       0       0       0       0       0
  1875 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1876 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1877 ;;      Totals:        39       0       0       0       0       0       0       0       0
  1878 ;;Total ram usage:       39 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    4
  1881 ;; This function calls:
  1882 ;;		_isalpha
  1883 ;;		_isupper
  1884 ;;		_pad
  1885 ;;		_toupper
  1886 ;; This function is called by:
  1887 ;;		_vfpfcnvrt
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text4
  1892  000852                     __ptext4:
  1893                           	callstack 0
  1894  000852                     _xtoa:
  1895                           	callstack 23
  1896  000852                     
  1897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  1898  000852  0100               	movlb	0	; () banked
  1899  000854  BFD2               	btfsc	(_prec+1)& (0+255),7,b
  1900  000856  EF2F  F004         	goto	u1441
  1901  00085A  EF31  F004         	goto	u1440
  1902  00085E                     u1441:
  1903  00085E  EF32  F004         	goto	l2310
  1904  000862                     u1440:
  1905  000862                     
  1906                           ; BSR set to: 0
  1907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  1908  000862  93D3               	bcf	_flags& (0+255),1,b
  1909  000864                     l2310:
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  1913  000864  BFD2               	btfsc	(_prec+1)& (0+255),7,b
  1914  000866  EF3F  F004         	goto	u1450
  1915  00086A  51D2               	movf	(_prec+1)& (0+255),w,b
  1916  00086C  E106               	bnz	u1451
  1917  00086E  05D1               	decf	_prec& (0+255),w,b
  1918  000870  B0D8               	btfsc	status,0,c
  1919  000872  EF3D  F004         	goto	u1451
  1920  000876  EF3F  F004         	goto	u1450
  1921  00087A                     u1451:
  1922  00087A  EF45  F004         	goto	l1165
  1923  00087E                     u1450:
  1924  00087E                     
  1925                           ; BSR set to: 0
  1926  00087E  0E00               	movlw	0
  1927  000880  6E34               	movwf	(xtoa@p+1)^0,c
  1928  000882  0E01               	movlw	1
  1929  000884  6E33               	movwf	xtoa@p^0,c
  1930  000886  EF49  F004         	goto	l1167
  1931  00088A                     l1165:
  1932                           
  1933                           ; BSR set to: 0
  1934  00088A  C0D1  F033         	movff	_prec,xtoa@p
  1935  00088E  C0D2  F034         	movff	_prec+1,xtoa@p+1
  1936  000892                     l1167:
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  1940  000892  C0CF  F035         	movff	_width,xtoa@w
  1941  000896  C0D0  F036         	movff	_width+1,xtoa@w+1
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  1944  00089A  A9D3               	btfss	_flags& (0+255),4,b
  1945  00089C  EF52  F004         	goto	u1461
  1946  0008A0  EF54  F004         	goto	u1460
  1947  0008A4                     u1461:
  1948  0008A4  EF58  F004         	goto	l2316
  1949  0008A8                     u1460:
  1950  0008A8                     
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  1953  0008A8  0EFE               	movlw	254
  1954  0008AA  2635               	addwf	xtoa@w^0,f,c
  1955  0008AC  0EFF               	movlw	255
  1956  0008AE  2236               	addwfc	(xtoa@w+1)^0,f,c
  1957  0008B0                     l2316:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  1961  0008B0  C01E  F037         	movff	xtoa@d,xtoa@n
  1962  0008B4  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  1963  0008B8  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  1964  0008BC  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  1965  0008C0  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  1966  0008C4  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  1967  0008C8  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  1968  0008CC  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  1969  0008D0                     
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  1972  0008D0  0E00               	movlw	0
  1973  0008D2  6E40               	movwf	(xtoa@i+1)^0,c
  1974  0008D4  0E1F               	movlw	31
  1975  0008D6  6E3F               	movwf	xtoa@i^0,c
  1976  0008D8                     
  1977                           ; BSR set to: 0
  1978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  1979  0008D8  0E00               	movlw	0
  1980  0008DA  0101               	movlb	1	; () banked
  1981  0008DC  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1984  0008DE  EF24  F005         	goto	l2352
  1985  0008E2                     l2322:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  1988  0008E2  063F               	decf	xtoa@i^0,f,c
  1989  0008E4  A0D8               	btfss	status,0,c
  1990  0008E6  0640               	decf	(xtoa@i+1)^0,f,c
  1991  0008E8                     
  1992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  1993  0008E8  0E0F               	movlw	15
  1994  0008EA  1437               	andwf	xtoa@n^0,w,c
  1995  0008EC  6E41               	movwf	xtoa@c^0,c
  1996  0008EE  6A42               	clrf	(xtoa@c+1)^0,c
  1997  0008F0                     
  1998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  1999  0008F0  BE42               	btfsc	(xtoa@c+1)^0,7,c
  2000  0008F2  EF84  F004         	goto	u1471
  2001  0008F6  5042               	movf	(xtoa@c+1)^0,w,c
  2002  0008F8  E109               	bnz	u1470
  2003  0008FA  0E0A               	movlw	10
  2004  0008FC  5C41               	subwf	xtoa@c^0,w,c
  2005  0008FE  A0D8               	btfss	status,0,c
  2006  000900  EF84  F004         	goto	u1471
  2007  000904  EF86  F004         	goto	u1470
  2008  000908                     u1471:
  2009  000908  EF8E  F004         	goto	l2330
  2010  00090C                     u1470:
  2011  00090C  0E57               	movlw	87
  2012  00090E  2441               	addwf	xtoa@c^0,w,c
  2013  000910  6E41               	movwf	xtoa@c^0,c
  2014  000912  0E00               	movlw	0
  2015  000914  2042               	addwfc	(xtoa@c+1)^0,w,c
  2016  000916  6E42               	movwf	(xtoa@c+1)^0,c
  2017  000918  EF94  F004         	goto	l1174
  2018  00091C                     l2330:
  2019  00091C  0E30               	movlw	48
  2020  00091E  2441               	addwf	xtoa@c^0,w,c
  2021  000920  6E41               	movwf	xtoa@c^0,c
  2022  000922  0E00               	movlw	0
  2023  000924  2042               	addwfc	(xtoa@c+1)^0,w,c
  2024  000926  6E42               	movwf	(xtoa@c+1)^0,c
  2025  000928                     l1174:
  2026  000928  0EBF               	movlw	191
  2027  00092A  6E27               	movwf	??_xtoa^0,c
  2028  00092C  0EFF               	movlw	255
  2029  00092E  6E28               	movwf	(??_xtoa+1)^0,c
  2030  000930  5026               	movf	xtoa@x^0,w,c
  2031  000932  6E29               	movwf	(??_xtoa+2)^0,c
  2032  000934  6A2A               	clrf	(??_xtoa+3)^0,c
  2033  000936  5027               	movf	??_xtoa^0,w,c
  2034  000938  2629               	addwf	(??_xtoa+2)^0,f,c
  2035  00093A  5028               	movf	(??_xtoa+1)^0,w,c
  2036  00093C  222A               	addwfc	(??_xtoa+3)^0,f,c
  2037  00093E  502A               	movf	(??_xtoa+3)^0,w,c
  2038  000940  E10A               	bnz	u1480
  2039  000942  0E1A               	movlw	26
  2040  000944  5C29               	subwf	(??_xtoa+2)^0,w,c
  2041  000946  A0D8               	btfss	status,0,c
  2042  000948  EFA8  F004         	goto	u1481
  2043  00094C  EFAB  F004         	goto	u1480
  2044  000950                     u1481:
  2045  000950  0E01               	movlw	1
  2046  000952  EFAC  F004         	goto	u1490
  2047  000956                     u1480:
  2048  000956  0E00               	movlw	0
  2049  000958                     u1490:
  2050  000958  6E2F               	movwf	_xtoa$1510^0,c
  2051  00095A  6A30               	clrf	(_xtoa$1510+1)^0,c
  2052  00095C  502F               	movf	_xtoa$1510^0,w,c
  2053  00095E  1030               	iorwf	(_xtoa$1510+1)^0,w,c
  2054  000960  B4D8               	btfsc	status,2,c
  2055  000962  EFB5  F004         	goto	u1501
  2056  000966  EFB7  F004         	goto	u1500
  2057  00096A                     u1501:
  2058  00096A  EFE7  F004         	goto	l2344
  2059  00096E                     u1500:
  2060  00096E  0E9F               	movlw	159
  2061  000970  6E27               	movwf	??_xtoa^0,c
  2062  000972  0EFF               	movlw	255
  2063  000974  6E28               	movwf	(??_xtoa+1)^0,c
  2064  000976  0E20               	movlw	32
  2065  000978  1041               	iorwf	xtoa@c^0,w,c
  2066  00097A  6E29               	movwf	(??_xtoa+2)^0,c
  2067  00097C  0E00               	movlw	0
  2068  00097E  1042               	iorwf	(xtoa@c+1)^0,w,c
  2069  000980  6E2A               	movwf	(??_xtoa+3)^0,c
  2070  000982  5027               	movf	??_xtoa^0,w,c
  2071  000984  2629               	addwf	(??_xtoa+2)^0,f,c
  2072  000986  5028               	movf	(??_xtoa+1)^0,w,c
  2073  000988  222A               	addwfc	(??_xtoa+3)^0,f,c
  2074  00098A  502A               	movf	(??_xtoa+3)^0,w,c
  2075  00098C  E10A               	bnz	u1510
  2076  00098E  0E1A               	movlw	26
  2077  000990  5C29               	subwf	(??_xtoa+2)^0,w,c
  2078  000992  A0D8               	btfss	status,0,c
  2079  000994  EFCE  F004         	goto	u1511
  2080  000998  EFD1  F004         	goto	u1510
  2081  00099C                     u1511:
  2082  00099C  0E01               	movlw	1
  2083  00099E  EFD2  F004         	goto	u1520
  2084  0009A2                     u1510:
  2085  0009A2  0E00               	movlw	0
  2086  0009A4                     u1520:
  2087  0009A4  6E31               	movwf	_xtoa$1511^0,c
  2088  0009A6  6A32               	clrf	(_xtoa$1511+1)^0,c
  2089  0009A8  5031               	movf	_xtoa$1511^0,w,c
  2090  0009AA  1032               	iorwf	(_xtoa$1511+1)^0,w,c
  2091  0009AC  B4D8               	btfsc	status,2,c
  2092  0009AE  EFDB  F004         	goto	u1531
  2093  0009B2  EFDD  F004         	goto	u1530
  2094  0009B6                     u1531:
  2095  0009B6  EFE7  F004         	goto	l2344
  2096  0009BA                     u1530:
  2097  0009BA                     
  2098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2099  0009BA  C041  F007         	movff	xtoa@c,toupper@c
  2100  0009BE  C042  F008         	movff	xtoa@c+1,toupper@c+1
  2101  0009C2  EC4D  F00B         	call	_toupper	;wreg free
  2102  0009C6  C007  F041         	movff	?_toupper,xtoa@c
  2103  0009CA  C008  F042         	movff	?_toupper+1,xtoa@c+1
  2104  0009CE                     l2344:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2107  0009CE  0E00               	movlw	low _dbuf
  2108  0009D0  243F               	addwf	xtoa@i^0,w,c
  2109  0009D2  6ED9               	movwf	fsr2l,c
  2110  0009D4  0E01               	movlw	high _dbuf
  2111  0009D6  2040               	addwfc	(xtoa@i+1)^0,w,c
  2112  0009D8  6EDA               	movwf	fsr2h,c
  2113  0009DA  C041  FFDF         	movff	xtoa@c,indf2
  2114  0009DE                     
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  2116  0009DE  0633               	decf	xtoa@p^0,f,c
  2117  0009E0  A0D8               	btfss	status,0,c
  2118  0009E2  0634               	decf	(xtoa@p+1)^0,f,c
  2119  0009E4                     
  2120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  2121  0009E4  0635               	decf	xtoa@w^0,f,c
  2122  0009E6  A0D8               	btfss	status,0,c
  2123  0009E8  0636               	decf	(xtoa@w+1)^0,f,c
  2124  0009EA                     
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  2126  0009EA  C037  F027         	movff	xtoa@n,??_xtoa
  2127  0009EE  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  2128  0009F2  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  2129  0009F6  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  2130  0009FA  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  2131  0009FE  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  2132  000A02  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  2133  000A06  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  2134  000A0A  0E05               	movlw	5
  2135  000A0C  EF11  F005         	goto	u1540
  2136  000A10                     u1545:
  2137  000A10  90D8               	bcf	status,0,c
  2138  000A12  322E               	rrcf	(??_xtoa+7)^0,f,c
  2139  000A14  322D               	rrcf	(??_xtoa+6)^0,f,c
  2140  000A16  322C               	rrcf	(??_xtoa+5)^0,f,c
  2141  000A18  322B               	rrcf	(??_xtoa+4)^0,f,c
  2142  000A1A  322A               	rrcf	(??_xtoa+3)^0,f,c
  2143  000A1C  3229               	rrcf	(??_xtoa+2)^0,f,c
  2144  000A1E  3228               	rrcf	(??_xtoa+1)^0,f,c
  2145  000A20  3227               	rrcf	??_xtoa^0,f,c
  2146  000A22                     u1540:
  2147  000A22  2EE8               	decfsz	wreg,f,c
  2148  000A24  EF08  F005         	goto	u1545
  2149  000A28  C027  F037         	movff	??_xtoa,xtoa@n
  2150  000A2C  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  2151  000A30  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  2152  000A34  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  2153  000A38  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  2154  000A3C  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  2155  000A40  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  2156  000A44  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  2157  000A48                     l2352:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2160  000A48  BE40               	btfsc	(xtoa@i+1)^0,7,c
  2161  000A4A  EF30  F005         	goto	u1551
  2162  000A4E  5040               	movf	(xtoa@i+1)^0,w,c
  2163  000A50  E109               	bnz	u1550
  2164  000A52  0E02               	movlw	2
  2165  000A54  5C3F               	subwf	xtoa@i^0,w,c
  2166  000A56  A0D8               	btfss	status,0,c
  2167  000A58  EF30  F005         	goto	u1551
  2168  000A5C  EF32  F005         	goto	u1550
  2169  000A60                     u1551:
  2170  000A60  EF63  F005         	goto	l1188
  2171  000A64                     u1550:
  2172  000A64  5037               	movf	xtoa@n^0,w,c
  2173  000A66  1038               	iorwf	(xtoa@n+1)^0,w,c
  2174  000A68  1039               	iorwf	(xtoa@n+2)^0,w,c
  2175  000A6A  103A               	iorwf	(xtoa@n+3)^0,w,c
  2176  000A6C  103B               	iorwf	(xtoa@n+4)^0,w,c
  2177  000A6E  103C               	iorwf	(xtoa@n+5)^0,w,c
  2178  000A70  103D               	iorwf	(xtoa@n+6)^0,w,c
  2179  000A72  103E               	iorwf	(xtoa@n+7)^0,w,c
  2180  000A74  A4D8               	btfss	status,2,c
  2181  000A76  EF3F  F005         	goto	u1561
  2182  000A7A  EF41  F005         	goto	u1560
  2183  000A7E                     u1561:
  2184  000A7E  EF71  F004         	goto	l2322
  2185  000A82                     u1560:
  2186  000A82  BE34               	btfsc	(xtoa@p+1)^0,7,c
  2187  000A84  EF4E  F005         	goto	u1570
  2188  000A88  5034               	movf	(xtoa@p+1)^0,w,c
  2189  000A8A  E106               	bnz	u1571
  2190  000A8C  0433               	decf	xtoa@p^0,w,c
  2191  000A8E  B0D8               	btfsc	status,0,c
  2192  000A90  EF4C  F005         	goto	u1571
  2193  000A94  EF4E  F005         	goto	u1570
  2194  000A98                     u1571:
  2195  000A98  EF71  F004         	goto	l2322
  2196  000A9C                     u1570:
  2197  000A9C  BE36               	btfsc	(xtoa@w+1)^0,7,c
  2198  000A9E  EF59  F005         	goto	u1581
  2199  000AA2  5036               	movf	(xtoa@w+1)^0,w,c
  2200  000AA4  E108               	bnz	u1580
  2201  000AA6  0435               	decf	xtoa@w^0,w,c
  2202  000AA8  A0D8               	btfss	status,0,c
  2203  000AAA  EF59  F005         	goto	u1581
  2204  000AAE  EF5B  F005         	goto	u1580
  2205  000AB2                     u1581:
  2206  000AB2  EF63  F005         	goto	l1188
  2207  000AB6                     u1580:
  2208  000AB6  0100               	movlb	0	; () banked
  2209  000AB8  B3D3               	btfsc	_flags& (0+255),1,b
  2210  000ABA  EF61  F005         	goto	u1591
  2211  000ABE  EF63  F005         	goto	u1590
  2212  000AC2                     u1591:
  2213  000AC2  EF71  F004         	goto	l2322
  2214  000AC6                     u1590:
  2215  000AC6                     l1188:
  2216                           
  2217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2218  000AC6  0100               	movlb	0	; () banked
  2219  000AC8  A9D3               	btfss	_flags& (0+255),4,b
  2220  000ACA  EF69  F005         	goto	u1601
  2221  000ACE  EF6B  F005         	goto	u1600
  2222  000AD2                     u1601:
  2223  000AD2  EF81  F005         	goto	l2368
  2224  000AD6                     u1600:
  2225  000AD6                     
  2226                           ; BSR set to: 0
  2227                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  2228  000AD6  063F               	decf	xtoa@i^0,f,c
  2229  000AD8  A0D8               	btfss	status,0,c
  2230  000ADA  0640               	decf	(xtoa@i+1)^0,f,c
  2231  000ADC                     
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2234  000ADC  0E00               	movlw	low _dbuf
  2235  000ADE  243F               	addwf	xtoa@i^0,w,c
  2236  000AE0  6ED9               	movwf	fsr2l,c
  2237  000AE2  0E01               	movlw	high _dbuf
  2238  000AE4  2040               	addwfc	(xtoa@i+1)^0,w,c
  2239  000AE6  6EDA               	movwf	fsr2h,c
  2240  000AE8  C026  FFDF         	movff	xtoa@x,indf2
  2241  000AEC                     
  2242                           ; BSR set to: 0
  2243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  2244  000AEC  063F               	decf	xtoa@i^0,f,c
  2245  000AEE  A0D8               	btfss	status,0,c
  2246  000AF0  0640               	decf	(xtoa@i+1)^0,f,c
  2247                           
  2248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2249  000AF2  0E00               	movlw	low _dbuf
  2250  000AF4  243F               	addwf	xtoa@i^0,w,c
  2251  000AF6  6ED9               	movwf	fsr2l,c
  2252  000AF8  0E01               	movlw	high _dbuf
  2253  000AFA  2040               	addwfc	(xtoa@i+1)^0,w,c
  2254  000AFC  6EDA               	movwf	fsr2h,c
  2255  000AFE  0E30               	movlw	48
  2256  000B00  6EDF               	movwf	indf2,c
  2257  000B02                     l2368:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2261  000B02  C01C  F011         	movff	xtoa@fp,pad@fp
  2262  000B06  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2263  000B0A  0E00               	movlw	low _dbuf
  2264  000B0C  243F               	addwf	xtoa@i^0,w,c
  2265  000B0E  6E13               	movwf	pad@buf^0,c
  2266  000B10  0E01               	movlw	high _dbuf
  2267  000B12  2040               	addwfc	(xtoa@i+1)^0,w,c
  2268  000B14  6E14               	movwf	(pad@buf+1)^0,c
  2269  000B16  C035  F015         	movff	xtoa@w,pad@p
  2270  000B1A  C036  F016         	movff	xtoa@w+1,pad@p+1
  2271  000B1E  EC41  F00A         	call	_pad	;wreg free
  2272  000B22  C011  F01C         	movff	?_pad,?_xtoa
  2273  000B26  C012  F01D         	movff	?_pad+1,?_xtoa+1
  2274  000B2A  0012               	return		;funcret
  2275  000B2C                     __end_of_xtoa:
  2276                           	callstack 0
  2277                           
  2278 ;; *************** function _toupper *****************
  2279 ;; Defined at:
  2280 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  c               2    6[COMRAM] int 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  2    6[COMRAM] int 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2294 ;;      Params:         2       0       0       0       0       0       0       0       0
  2295 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2296 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2297 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2298 ;;Total ram usage:        8 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    1
  2301 ;; This function calls:
  2302 ;;		_islower
  2303 ;; This function is called by:
  2304 ;;		_xtoa
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text5
  2309  00169A                     __ptext5:
  2310                           	callstack 0
  2311  00169A                     _toupper:
  2312                           	callstack 25
  2313  00169A  0E9F               	movlw	159
  2314  00169C  6E09               	movwf	??_toupper^0,c
  2315  00169E  0EFF               	movlw	255
  2316  0016A0  6E0A               	movwf	(??_toupper+1)^0,c
  2317  0016A2  C007  F00B         	movff	toupper@c,??_toupper+2
  2318  0016A6  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2319  0016AA  5009               	movf	??_toupper^0,w,c
  2320  0016AC  260B               	addwf	(??_toupper+2)^0,f,c
  2321  0016AE  500A               	movf	(??_toupper+1)^0,w,c
  2322  0016B0  220C               	addwfc	(??_toupper+3)^0,f,c
  2323  0016B2  500C               	movf	(??_toupper+3)^0,w,c
  2324  0016B4  E10A               	bnz	u1400
  2325  0016B6  0E1A               	movlw	26
  2326  0016B8  5C0B               	subwf	(??_toupper+2)^0,w,c
  2327  0016BA  A0D8               	btfss	status,0,c
  2328  0016BC  EF62  F00B         	goto	u1401
  2329  0016C0  EF65  F00B         	goto	u1400
  2330  0016C4                     u1401:
  2331  0016C4  0E01               	movlw	1
  2332  0016C6  EF66  F00B         	goto	u1410
  2333  0016CA                     u1400:
  2334  0016CA  0E00               	movlw	0
  2335  0016CC                     u1410:
  2336  0016CC  6E0D               	movwf	_toupper$1593^0,c
  2337  0016CE  6A0E               	clrf	(_toupper$1593+1)^0,c
  2338  0016D0  500D               	movf	_toupper$1593^0,w,c
  2339  0016D2  100E               	iorwf	(_toupper$1593+1)^0,w,c
  2340  0016D4  B4D8               	btfsc	status,2,c
  2341  0016D6  EF6F  F00B         	goto	u1421
  2342  0016DA  EF71  F00B         	goto	u1420
  2343  0016DE                     u1421:
  2344  0016DE  EF77  F00B         	goto	l1250
  2345  0016E2                     u1420:
  2346  0016E2  0E5F               	movlw	95
  2347  0016E4  1407               	andwf	toupper@c^0,w,c
  2348  0016E6  6E07               	movwf	?_toupper^0,c
  2349  0016E8  6A08               	clrf	(?_toupper+1)^0,c
  2350  0016EA  EF7B  F00B         	goto	l1255
  2351  0016EE                     l1250:
  2352  0016EE  C007  F007         	movff	toupper@c,?_toupper
  2353  0016F2  C008  F008         	movff	toupper@c+1,?_toupper+1
  2354  0016F6                     l1255:
  2355  0016F6  0012               	return		;funcret
  2356  0016F8                     __end_of_toupper:
  2357                           	callstack 0
  2358                           
  2359 ;; *************** function _islower *****************
  2360 ;; Defined at:
  2361 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  c               2    0[COMRAM] int 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  2    0[COMRAM] int 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2375 ;;      Params:         2       0       0       0       0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2377 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2378 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2379 ;;Total ram usage:        6 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_toupper
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text6
  2389  001976                     __ptext6:
  2390                           	callstack 0
  2391  001976                     _islower:
  2392                           	callstack 25
  2393  001976  0E9F               	movlw	159
  2394  001978  6E03               	movwf	??_islower^0,c
  2395  00197A  0EFF               	movlw	255
  2396  00197C  6E04               	movwf	(??_islower+1)^0,c
  2397  00197E  C001  F005         	movff	islower@c,??_islower+2
  2398  001982  C002  F006         	movff	islower@c+1,??_islower+3
  2399  001986  5003               	movf	??_islower^0,w,c
  2400  001988  2605               	addwf	(??_islower+2)^0,f,c
  2401  00198A  5004               	movf	(??_islower+1)^0,w,c
  2402  00198C  2206               	addwfc	(??_islower+3)^0,f,c
  2403  00198E  5006               	movf	(??_islower+3)^0,w,c
  2404  001990  E10A               	bnz	u1280
  2405  001992  0E1A               	movlw	26
  2406  001994  5C05               	subwf	(??_islower+2)^0,w,c
  2407  001996  A0D8               	btfss	status,0,c
  2408  001998  EFD0  F00C         	goto	u1281
  2409  00199C  EFD3  F00C         	goto	u1280
  2410  0019A0                     u1281:
  2411  0019A0  0E01               	movlw	1
  2412  0019A2  EFD4  F00C         	goto	u1290
  2413  0019A6                     u1280:
  2414  0019A6  0E00               	movlw	0
  2415  0019A8                     u1290:
  2416  0019A8  6E01               	movwf	?_islower^0,c
  2417  0019AA  6A02               	clrf	(?_islower+1)^0,c
  2418  0019AC  0012               	return		;funcret
  2419  0019AE                     __end_of_islower:
  2420                           	callstack 0
  2421                           
  2422 ;; *************** function _pad *****************
  2423 ;; Defined at:
  2424 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2427 ;;		 -> sprintf@f(6), 
  2428 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2429 ;;		 -> dbuf(32), 
  2430 ;;  p               2   20[COMRAM] int 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  w               2   25[COMRAM] int 
  2433 ;;  i               2   23[COMRAM] int 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2   16[COMRAM] int 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2443 ;;      Params:         6       0       0       0       0       0       0       0       0
  2444 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2445 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2446 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2447 ;;Total ram usage:       11 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    3
  2450 ;; This function calls:
  2451 ;;		_fputc
  2452 ;;		_fputs
  2453 ;;		_strlen
  2454 ;; This function is called by:
  2455 ;;		_xtoa
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text7
  2460  001482                     __ptext7:
  2461                           	callstack 0
  2462  001482                     _pad:
  2463                           	callstack 23
  2464  001482                     
  2465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2466  001482  0100               	movlb	0	; () banked
  2467  001484  A1D3               	btfss	_flags& (0+255),0,b
  2468  001486  EF47  F00A         	goto	u1321
  2469  00148A  EF49  F00A         	goto	u1320
  2470  00148E                     u1321:
  2471  00148E  EF53  F00A         	goto	l2256
  2472  001492                     u1320:
  2473  001492                     
  2474                           ; BSR set to: 0
  2475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2476  001492  C013  F00A         	movff	pad@buf,fputs@s
  2477  001496  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2478  00149A  C011  F00C         	movff	pad@fp,fputs@fp
  2479  00149E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2480  0014A2  EC3E  F00C         	call	_fputs	;wreg free
  2481  0014A6                     l2256:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2484  0014A6  BE16               	btfsc	(pad@p+1)^0,7,c
  2485  0014A8  EF58  F00A         	goto	u1331
  2486  0014AC  EF5A  F00A         	goto	u1330
  2487  0014B0                     u1331:
  2488  0014B0  EF60  F00A         	goto	l2260
  2489  0014B4                     u1330:
  2490  0014B4  C015  F01A         	movff	pad@p,pad@w
  2491  0014B8  C016  F01B         	movff	pad@p+1,pad@w+1
  2492  0014BC  EF64  F00A         	goto	l1155
  2493  0014C0                     l2260:
  2494  0014C0  0E00               	movlw	0
  2495  0014C2  6E1B               	movwf	(pad@w+1)^0,c
  2496  0014C4  0E00               	movlw	0
  2497  0014C6  6E1A               	movwf	pad@w^0,c
  2498  0014C8                     l1155:
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2501  0014C8  0E00               	movlw	0
  2502  0014CA  6E19               	movwf	(pad@i+1)^0,c
  2503  0014CC  0E00               	movlw	0
  2504  0014CE  6E18               	movwf	pad@i^0,c
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2507  0014D0  EF76  F00A         	goto	l2266
  2508  0014D4                     l2262:
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2511  0014D4  0E00               	movlw	0
  2512  0014D6  6E02               	movwf	(fputc@c+1)^0,c
  2513  0014D8  0E20               	movlw	32
  2514  0014DA  6E01               	movwf	fputc@c^0,c
  2515  0014DC  C011  F003         	movff	pad@fp,fputc@fp
  2516  0014E0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2517  0014E4  ECDC  F009         	call	_fputc	;wreg free
  2518  0014E8                     
  2519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2520  0014E8  4A18               	infsnz	pad@i^0,f,c
  2521  0014EA  2A19               	incf	(pad@i+1)^0,f,c
  2522  0014EC                     l2266:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2525  0014EC  501A               	movf	pad@w^0,w,c
  2526  0014EE  5C18               	subwf	pad@i^0,w,c
  2527  0014F0  5019               	movf	(pad@i+1)^0,w,c
  2528  0014F2  0A80               	xorlw	128
  2529  0014F4  6E17               	movwf	??_pad^0,c
  2530  0014F6  501B               	movf	(pad@w+1)^0,w,c
  2531  0014F8  0A80               	xorlw	128
  2532  0014FA  5817               	subwfb	??_pad^0,w,c
  2533  0014FC  A0D8               	btfss	status,0,c
  2534  0014FE  EF83  F00A         	goto	u1341
  2535  001502  EF85  F00A         	goto	u1340
  2536  001506                     u1341:
  2537  001506  EF6A  F00A         	goto	l2262
  2538  00150A                     u1340:
  2539  00150A                     
  2540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2541  00150A  0100               	movlb	0	; () banked
  2542  00150C  B1D3               	btfsc	_flags& (0+255),0,b
  2543  00150E  EF8B  F00A         	goto	u1351
  2544  001512  EF8D  F00A         	goto	u1350
  2545  001516                     u1351:
  2546  001516  EF97  F00A         	goto	l2270
  2547  00151A                     u1350:
  2548  00151A                     
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2551  00151A  C013  F00A         	movff	pad@buf,fputs@s
  2552  00151E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2553  001522  C011  F00C         	movff	pad@fp,fputs@fp
  2554  001526  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2555  00152A  EC3E  F00C         	call	_fputs	;wreg free
  2556  00152E                     l2270:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2559  00152E  C013  F001         	movff	pad@buf,strlen@s
  2560  001532  C014  F002         	movff	pad@buf+1,strlen@s+1
  2561  001536  ECF3  F00C         	call	_strlen	;wreg free
  2562  00153A  501A               	movf	pad@w^0,w,c
  2563  00153C  2401               	addwf	?_strlen^0,w,c
  2564  00153E  6E11               	movwf	?_pad^0,c
  2565  001540  501B               	movf	(pad@w+1)^0,w,c
  2566  001542  2002               	addwfc	(?_strlen+1)^0,w,c
  2567  001544  6E12               	movwf	(?_pad+1)^0,c
  2568  001546  0012               	return		;funcret
  2569  001548                     __end_of_pad:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function _strlen *****************
  2573 ;; Defined at:
  2574 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2577 ;;		 -> dbuf(32), 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2580 ;;		 -> dbuf(32), 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  2    0[COMRAM] unsigned int 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2590 ;;      Params:         2       0       0       0       0       0       0       0       0
  2591 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2593 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2594 ;;Total ram usage:        4 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_pad
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text8
  2604  0019E6                     __ptext8:
  2605                           	callstack 0
  2606  0019E6                     _strlen:
  2607                           	callstack 25
  2608  0019E6  C001  F003         	movff	strlen@s,strlen@a
  2609  0019EA  C002  F004         	movff	strlen@s+1,strlen@a+1
  2610  0019EE  EFFB  F00C         	goto	l2226
  2611  0019F2                     l2224:
  2612  0019F2  4A01               	infsnz	strlen@s^0,f,c
  2613  0019F4  2A02               	incf	(strlen@s+1)^0,f,c
  2614  0019F6                     l2226:
  2615  0019F6  C001  FFD9         	movff	strlen@s,fsr2l
  2616  0019FA  C002  FFDA         	movff	strlen@s+1,fsr2h
  2617  0019FE  50DF               	movf	indf2,w,c
  2618  001A00  A4D8               	btfss	status,2,c
  2619  001A02  EF05  F00D         	goto	u1271
  2620  001A06  EF07  F00D         	goto	u1270
  2621  001A0A                     u1271:
  2622  001A0A  EFF9  F00C         	goto	l2224
  2623  001A0E                     u1270:
  2624  001A0E  5003               	movf	strlen@a^0,w,c
  2625  001A10  5C01               	subwf	strlen@s^0,w,c
  2626  001A12  6E01               	movwf	?_strlen^0,c
  2627  001A14  5004               	movf	(strlen@a+1)^0,w,c
  2628  001A16  5802               	subwfb	(strlen@s+1)^0,w,c
  2629  001A18  6E02               	movwf	(?_strlen+1)^0,c
  2630  001A1A  0012               	return		;funcret
  2631  001A1C                     __end_of_strlen:
  2632                           	callstack 0
  2633                           
  2634 ;; *************** function _fputs *****************
  2635 ;; Defined at:
  2636 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2639 ;;		 -> dbuf(32), 
  2640 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2641 ;;		 -> sprintf@f(6), 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  i               2   14[COMRAM] int 
  2644 ;;  c               1   13[COMRAM] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  2    9[COMRAM] int 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2654 ;;      Params:         4       0       0       0       0       0       0       0       0
  2655 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2657 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2658 ;;Total ram usage:        7 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    2
  2661 ;; This function calls:
  2662 ;;		_fputc
  2663 ;; This function is called by:
  2664 ;;		_pad
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text9
  2669  00187C                     __ptext9:
  2670                           	callstack 0
  2671  00187C                     _fputs:
  2672                           	callstack 23
  2673  00187C  0E00               	movlw	0
  2674  00187E  6E10               	movwf	(fputs@i+1)^0,c
  2675  001880  0E00               	movlw	0
  2676  001882  6E0F               	movwf	fputs@i^0,c
  2677  001884  EF4F  F00C         	goto	l2220
  2678  001888                     l2216:
  2679  001888  C00E  F001         	movff	fputs@c,fputc@c
  2680  00188C  6A02               	clrf	(fputc@c+1)^0,c
  2681  00188E  C00C  F003         	movff	fputs@fp,fputc@fp
  2682  001892  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2683  001896  ECDC  F009         	call	_fputc	;wreg free
  2684  00189A  4A0F               	infsnz	fputs@i^0,f,c
  2685  00189C  2A10               	incf	(fputs@i+1)^0,f,c
  2686  00189E                     l2220:
  2687  00189E  500F               	movf	fputs@i^0,w,c
  2688  0018A0  240A               	addwf	fputs@s^0,w,c
  2689  0018A2  6ED9               	movwf	fsr2l,c
  2690  0018A4  5010               	movf	(fputs@i+1)^0,w,c
  2691  0018A6  200B               	addwfc	(fputs@s+1)^0,w,c
  2692  0018A8  6EDA               	movwf	fsr2h,c
  2693  0018AA  50DF               	movf	indf2,w,c
  2694  0018AC  6E0E               	movwf	fputs@c^0,c
  2695  0018AE  500E               	movf	fputs@c^0,w,c
  2696  0018B0  A4D8               	btfss	status,2,c
  2697  0018B2  EF5D  F00C         	goto	u1261
  2698  0018B6  EF5F  F00C         	goto	u1260
  2699  0018BA                     u1261:
  2700  0018BA  EF44  F00C         	goto	l2216
  2701  0018BE                     u1260:
  2702  0018BE  0012               	return		;funcret
  2703  0018C0                     __end_of_fputs:
  2704                           	callstack 0
  2705                           
  2706 ;; *************** function _fputc *****************
  2707 ;; Defined at:
  2708 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  c               2    0[COMRAM] int 
  2711 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2712 ;;		 -> sprintf@f(6), 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  2    0[COMRAM] int 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2724 ;;      Params:         4       0       0       0       0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2726 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2727 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2728 ;;Total ram usage:        9 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    1
  2731 ;; This function calls:
  2732 ;;		_putch
  2733 ;; This function is called by:
  2734 ;;		_pad
  2735 ;;		_vfpfcnvrt
  2736 ;;		_fputs
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text10
  2741  0013B8                     __ptext10:
  2742                           	callstack 0
  2743  0013B8                     _fputc:
  2744                           	callstack 23
  2745  0013B8  5003               	movf	fputc@fp^0,w,c
  2746  0013BA  1004               	iorwf	(fputc@fp+1)^0,w,c
  2747  0013BC  B4D8               	btfsc	status,2,c
  2748  0013BE  EFE3  F009         	goto	u1221
  2749  0013C2  EFE5  F009         	goto	u1220
  2750  0013C6                     u1221:
  2751  0013C6  EFEE  F009         	goto	l2204
  2752  0013CA                     u1220:
  2753  0013CA  5003               	movf	fputc@fp^0,w,c
  2754  0013CC  1004               	iorwf	(fputc@fp+1)^0,w,c
  2755  0013CE  A4D8               	btfss	status,2,c
  2756  0013D0  EFEC  F009         	goto	u1231
  2757  0013D4  EFEE  F009         	goto	u1230
  2758  0013D8                     u1231:
  2759  0013D8  EFF3  F009         	goto	l2206
  2760  0013DC                     u1230:
  2761  0013DC                     l2204:
  2762  0013DC  5001               	movf	fputc@c^0,w,c
  2763  0013DE  EC07  F00E         	call	_putch
  2764  0013E2  EF40  F00A         	goto	l1228
  2765  0013E6                     l2206:
  2766  0013E6  EE20 F004          	lfsr	2,4
  2767  0013EA  5003               	movf	fputc@fp^0,w,c
  2768  0013EC  26D9               	addwf	fsr2l,f,c
  2769  0013EE  5004               	movf	(fputc@fp+1)^0,w,c
  2770  0013F0  22DA               	addwfc	fsr2h,f,c
  2771  0013F2  50DE               	movf	postinc2,w,c
  2772  0013F4  10DE               	iorwf	postinc2,w,c
  2773  0013F6  B4D8               	btfsc	status,2,c
  2774  0013F8  EF00  F00A         	goto	u1241
  2775  0013FC  EF02  F00A         	goto	u1240
  2776  001400                     u1241:
  2777  001400  EF1D  F00A         	goto	l2210
  2778  001404                     u1240:
  2779  001404  EE20 F004          	lfsr	2,4
  2780  001408  5003               	movf	fputc@fp^0,w,c
  2781  00140A  26D9               	addwf	fsr2l,f,c
  2782  00140C  5004               	movf	(fputc@fp+1)^0,w,c
  2783  00140E  22DA               	addwfc	fsr2h,f,c
  2784  001410  EE10 F002          	lfsr	1,2
  2785  001414  5003               	movf	fputc@fp^0,w,c
  2786  001416  26E1               	addwf	fsr1l,f,c
  2787  001418  5004               	movf	(fputc@fp+1)^0,w,c
  2788  00141A  22E2               	addwfc	fsr1h,f,c
  2789  00141C  50DE               	movf	postinc2,w,c
  2790  00141E  5CE6               	subwf	postinc1,w,c
  2791  001420  50E6               	movf	postinc1,w,c
  2792  001422  0A80               	xorlw	128
  2793  001424  6E09               	movwf	(??_fputc+4)^0,c
  2794  001426  50DE               	movf	postinc2,w,c
  2795  001428  0A80               	xorlw	128
  2796  00142A  5809               	subwfb	(??_fputc+4)^0,w,c
  2797  00142C  B0D8               	btfsc	status,0,c
  2798  00142E  EF1B  F00A         	goto	u1251
  2799  001432  EF1D  F00A         	goto	u1250
  2800  001436                     u1251:
  2801  001436  EF40  F00A         	goto	l1228
  2802  00143A                     u1250:
  2803  00143A                     l2210:
  2804  00143A  EE20 F002          	lfsr	2,2
  2805  00143E  5003               	movf	fputc@fp^0,w,c
  2806  001440  26D9               	addwf	fsr2l,f,c
  2807  001442  5004               	movf	(fputc@fp+1)^0,w,c
  2808  001444  22DA               	addwfc	fsr2h,f,c
  2809  001446  CFDE F005          	movff	postinc2,??_fputc
  2810  00144A  CFDD F006          	movff	postdec2,??_fputc+1
  2811  00144E  C003  FFD9         	movff	fputc@fp,fsr2l
  2812  001452  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2813  001456  CFDE F007          	movff	postinc2,??_fputc+2
  2814  00145A  CFDD F008          	movff	postdec2,??_fputc+3
  2815  00145E  5005               	movf	??_fputc^0,w,c
  2816  001460  2407               	addwf	(??_fputc+2)^0,w,c
  2817  001462  6ED9               	movwf	fsr2l,c
  2818  001464  5006               	movf	(??_fputc+1)^0,w,c
  2819  001466  2008               	addwfc	(??_fputc+3)^0,w,c
  2820  001468  6EDA               	movwf	fsr2h,c
  2821  00146A  C001  FFDF         	movff	fputc@c,indf2
  2822  00146E  EE20 F002          	lfsr	2,2
  2823  001472  5003               	movf	fputc@fp^0,w,c
  2824  001474  26D9               	addwf	fsr2l,f,c
  2825  001476  5004               	movf	(fputc@fp+1)^0,w,c
  2826  001478  22DA               	addwfc	fsr2h,f,c
  2827  00147A  2ADE               	incf	postinc2,f,c
  2828  00147C  0E00               	movlw	0
  2829  00147E  22DD               	addwfc	postdec2,f,c
  2830  001480                     l1228:
  2831  001480  0012               	return		;funcret
  2832  001482                     __end_of_fputc:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _putch *****************
  2836 ;; Defined at:
  2837 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  c               1    wreg     unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  c               1    0[COMRAM] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2854 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_fputc
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text11
  2865  001C0E                     __ptext11:
  2866                           	callstack 0
  2867  001C0E                     _putch:
  2868                           	callstack 23
  2869  001C0E  0012               	return		;funcret
  2870  001C10                     __end_of_putch:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function _isupper *****************
  2874 ;; Defined at:
  2875 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  c               2    0[COMRAM] int 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  2    0[COMRAM] int 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2889 ;;      Params:         2       0       0       0       0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2891 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2892 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2893 ;;Total ram usage:        6 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_xtoa
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text12
  2903  0019AE                     __ptext12:
  2904                           	callstack 0
  2905  0019AE                     _isupper:
  2906                           	callstack 26
  2907  0019AE  0EBF               	movlw	191
  2908  0019B0  6E03               	movwf	??_isupper^0,c
  2909  0019B2  0EFF               	movlw	255
  2910  0019B4  6E04               	movwf	(??_isupper+1)^0,c
  2911  0019B6  C001  F005         	movff	isupper@c,??_isupper+2
  2912  0019BA  C002  F006         	movff	isupper@c+1,??_isupper+3
  2913  0019BE  5003               	movf	??_isupper^0,w,c
  2914  0019C0  2605               	addwf	(??_isupper+2)^0,f,c
  2915  0019C2  5004               	movf	(??_isupper+1)^0,w,c
  2916  0019C4  2206               	addwfc	(??_isupper+3)^0,f,c
  2917  0019C6  5006               	movf	(??_isupper+3)^0,w,c
  2918  0019C8  E10A               	bnz	u1360
  2919  0019CA  0E1A               	movlw	26
  2920  0019CC  5C05               	subwf	(??_isupper+2)^0,w,c
  2921  0019CE  A0D8               	btfss	status,0,c
  2922  0019D0  EFEC  F00C         	goto	u1361
  2923  0019D4  EFEF  F00C         	goto	u1360
  2924  0019D8                     u1361:
  2925  0019D8  0E01               	movlw	1
  2926  0019DA  EFF0  F00C         	goto	u1370
  2927  0019DE                     u1360:
  2928  0019DE  0E00               	movlw	0
  2929  0019E0                     u1370:
  2930  0019E0  6E01               	movwf	?_isupper^0,c
  2931  0019E2  6A02               	clrf	(?_isupper+1)^0,c
  2932  0019E4  0012               	return		;funcret
  2933  0019E6                     __end_of_isupper:
  2934                           	callstack 0
  2935                           
  2936 ;; *************** function _isalpha *****************
  2937 ;; Defined at:
  2938 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  c               2    0[COMRAM] int 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  2    0[COMRAM] int 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2952 ;;      Params:         2       0       0       0       0       0       0       0       0
  2953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2954 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2955 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2956 ;;Total ram usage:        6 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_xtoa
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text13
  2966  001900                     __ptext13:
  2967                           	callstack 0
  2968  001900                     _isalpha:
  2969                           	callstack 26
  2970  001900  0E9F               	movlw	159
  2971  001902  6E03               	movwf	??_isalpha^0,c
  2972  001904  0EFF               	movlw	255
  2973  001906  6E04               	movwf	(??_isalpha+1)^0,c
  2974  001908  0E20               	movlw	32
  2975  00190A  1001               	iorwf	isalpha@c^0,w,c
  2976  00190C  6E05               	movwf	(??_isalpha+2)^0,c
  2977  00190E  0E00               	movlw	0
  2978  001910  1002               	iorwf	(isalpha@c+1)^0,w,c
  2979  001912  6E06               	movwf	(??_isalpha+3)^0,c
  2980  001914  5003               	movf	??_isalpha^0,w,c
  2981  001916  2605               	addwf	(??_isalpha+2)^0,f,c
  2982  001918  5004               	movf	(??_isalpha+1)^0,w,c
  2983  00191A  2206               	addwfc	(??_isalpha+3)^0,f,c
  2984  00191C  5006               	movf	(??_isalpha+3)^0,w,c
  2985  00191E  E10A               	bnz	u1380
  2986  001920  0E1A               	movlw	26
  2987  001922  5C05               	subwf	(??_isalpha+2)^0,w,c
  2988  001924  A0D8               	btfss	status,0,c
  2989  001926  EF97  F00C         	goto	u1381
  2990  00192A  EF9A  F00C         	goto	u1380
  2991  00192E                     u1381:
  2992  00192E  0E01               	movlw	1
  2993  001930  EF9B  F00C         	goto	u1390
  2994  001934                     u1380:
  2995  001934  0E00               	movlw	0
  2996  001936                     u1390:
  2997  001936  6E01               	movwf	?_isalpha^0,c
  2998  001938  6A02               	clrf	(?_isalpha+1)^0,c
  2999  00193A  0012               	return		;funcret
  3000  00193C                     __end_of_isalpha:
  3001                           	callstack 0
  3002                           
  3003 ;; *************** function _protocoloProtocoloDia *****************
  3004 ;; Defined at:
  3005 ;;		line 500 in file "Controler.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0
  3020 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3022 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3023 ;;Total ram usage:        0 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    4
  3026 ;; This function calls:
  3027 ;;		_LCD_String_xy
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text14
  3034  0012BA                     __ptext14:
  3035                           	callstack 0
  3036  0012BA                     _protocoloProtocoloDia:
  3037                           	callstack 26
  3038  0012BA                     
  3039                           ;Controler.c: 501:     ADCON1 = 0x0F;
  3040  0012BA  0E0F               	movlw	15
  3041  0012BC  6EC1               	movwf	193,c	;volatile
  3042  0012BE                     
  3043                           ;Controler.c: 502:     TRISAbits.RA2 = 1;
  3044  0012BE  8492               	bsf	146,2,c	;volatile
  3045  0012C0                     
  3046                           ;Controler.c: 503:     TRISAbits.RA3 = 1;
  3047  0012C0  8692               	bsf	146,3,c	;volatile
  3048  0012C2                     
  3049                           ;Controler.c: 504:     TRISAbits.RA4 = 1;
  3050  0012C2  8892               	bsf	146,4,c	;volatile
  3051  0012C4                     
  3052                           ;Controler.c: 505:     TRISCbits.RC0 = 0;
  3053  0012C4  9094               	bcf	148,0,c	;volatile
  3054  0012C6                     
  3055                           ;Controler.c: 506:     TRISCbits.RC1 = 0;
  3056  0012C6  9294               	bcf	148,1,c	;volatile
  3057  0012C8                     
  3058                           ;Controler.c: 507:     TRISCbits.RC2 = 0;
  3059  0012C8  9494               	bcf	148,2,c	;volatile
  3060  0012CA                     
  3061                           ;Controler.c: 508:     LATC0 = 0;
  3062  0012CA  908B               	bcf	3979,0,c	;volatile
  3063  0012CC                     
  3064                           ;Controler.c: 509:     LATC1 = 0;
  3065  0012CC  928B               	bcf	3979,1,c	;volatile
  3066  0012CE                     
  3067                           ;Controler.c: 510:     LATC2 = 0;
  3068  0012CE  948B               	bcf	3979,2,c	;volatile
  3069  0012D0                     
  3070                           ;Controler.c: 512:     LCD_String_xy(2,0,"SI: ");
  3071  0012D0  0E00               	movlw	0
  3072  0012D2  6E0A               	movwf	LCD_String_xy@pos^0,c
  3073  0012D4  0E31               	movlw	low STR_8
  3074  0012D6  6E0B               	movwf	LCD_String_xy@str^0,c
  3075  0012D8  0E08               	movlw	high STR_8
  3076  0012DA  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3077  0012DC  0E02               	movlw	2
  3078  0012DE  ECA4  F00A         	call	_LCD_String_xy
  3079  0012E2                     
  3080                           ;Controler.c: 513:     if (PORTAbits.RA2) {
  3081  0012E2  A480               	btfss	128,2,c	;volatile
  3082  0012E4  EF76  F009         	goto	u1891
  3083  0012E8  EF78  F009         	goto	u1890
  3084  0012EC                     u1891:
  3085  0012EC  EF84  F009         	goto	l416
  3086  0012F0                     u1890:
  3087  0012F0                     
  3088                           ;Controler.c: 514:         LATC0 = 1;
  3089  0012F0  808B               	bsf	3979,0,c	;volatile
  3090  0012F2                     
  3091                           ;Controler.c: 515:         LCD_String_xy(6,0,"ON ");
  3092  0012F2  0E00               	movlw	0
  3093  0012F4  6E0A               	movwf	LCD_String_xy@pos^0,c
  3094  0012F6  0E3B               	movlw	low STR_9
  3095  0012F8  6E0B               	movwf	LCD_String_xy@str^0,c
  3096  0012FA  0E08               	movlw	high STR_9
  3097  0012FC  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3098  0012FE  0E06               	movlw	6
  3099  001300  ECA4  F00A         	call	_LCD_String_xy
  3100                           
  3101                           ;Controler.c: 516:     } else {
  3102  001304  EF8E  F009         	goto	l417
  3103  001308                     l416:
  3104                           
  3105                           ;Controler.c: 517:         LATC0 = 0;
  3106  001308  908B               	bcf	3979,0,c	;volatile
  3107  00130A                     
  3108                           ;Controler.c: 518:         LCD_String_xy(6,0,"OFF");
  3109  00130A  0E00               	movlw	0
  3110  00130C  6E0A               	movwf	LCD_String_xy@pos^0,c
  3111  00130E  0E47               	movlw	low STR_10
  3112  001310  6E0B               	movwf	LCD_String_xy@str^0,c
  3113  001312  0E08               	movlw	high STR_10
  3114  001314  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3115  001316  0E06               	movlw	6
  3116  001318  ECA4  F00A         	call	_LCD_String_xy
  3117  00131C                     l417:
  3118                           
  3119                           ;Controler.c: 521:     LCD_String_xy(3,0,"ST: ");
  3120  00131C  0E00               	movlw	0
  3121  00131E  6E0A               	movwf	LCD_String_xy@pos^0,c
  3122  001320  0E36               	movlw	low STR_11
  3123  001322  6E0B               	movwf	LCD_String_xy@str^0,c
  3124  001324  0E08               	movlw	high STR_11
  3125  001326  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3126  001328  0E03               	movlw	3
  3127  00132A  ECA4  F00A         	call	_LCD_String_xy
  3128  00132E                     
  3129                           ;Controler.c: 522:     if(PORTAbits.RA3){
  3130  00132E  A680               	btfss	128,3,c	;volatile
  3131  001330  EF9C  F009         	goto	u1901
  3132  001334  EF9E  F009         	goto	u1900
  3133  001338                     u1901:
  3134  001338  EFAA  F009         	goto	l418
  3135  00133C                     u1900:
  3136  00133C                     
  3137                           ;Controler.c: 523:         LATC1 = 1;
  3138  00133C  828B               	bsf	3979,1,c	;volatile
  3139  00133E                     
  3140                           ;Controler.c: 524:         LCD_String_xy(6,0,"ON ");
  3141  00133E  0E00               	movlw	0
  3142  001340  6E0A               	movwf	LCD_String_xy@pos^0,c
  3143  001342  0E3B               	movlw	low STR_9
  3144  001344  6E0B               	movwf	LCD_String_xy@str^0,c
  3145  001346  0E08               	movlw	high STR_9
  3146  001348  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3147  00134A  0E06               	movlw	6
  3148  00134C  ECA4  F00A         	call	_LCD_String_xy
  3149                           
  3150                           ;Controler.c: 525:     }else{
  3151  001350  EFB4  F009         	goto	l419
  3152  001354                     l418:
  3153                           
  3154                           ;Controler.c: 526:         LATC1 = 0;
  3155  001354  928B               	bcf	3979,1,c	;volatile
  3156  001356                     
  3157                           ;Controler.c: 527:         LCD_String_xy(6,0,"OFF");
  3158  001356  0E00               	movlw	0
  3159  001358  6E0A               	movwf	LCD_String_xy@pos^0,c
  3160  00135A  0E47               	movlw	low STR_10
  3161  00135C  6E0B               	movwf	LCD_String_xy@str^0,c
  3162  00135E  0E08               	movlw	high STR_10
  3163  001360  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3164  001362  0E06               	movlw	6
  3165  001364  ECA4  F00A         	call	_LCD_String_xy
  3166  001368                     l419:
  3167                           
  3168                           ;Controler.c: 530:     LCD_String_xy(4,0,"SF: ");
  3169  001368  0E00               	movlw	0
  3170  00136A  6E0A               	movwf	LCD_String_xy@pos^0,c
  3171  00136C  0E2C               	movlw	low STR_14
  3172  00136E  6E0B               	movwf	LCD_String_xy@str^0,c
  3173  001370  0E08               	movlw	high STR_14
  3174  001372  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3175  001374  0E04               	movlw	4
  3176  001376  ECA4  F00A         	call	_LCD_String_xy
  3177  00137A                     
  3178                           ;Controler.c: 531:     if(PORTAbits.RA4){
  3179  00137A  A880               	btfss	128,4,c	;volatile
  3180  00137C  EFC2  F009         	goto	u1911
  3181  001380  EFC4  F009         	goto	u1910
  3182  001384                     u1911:
  3183  001384  EFD0  F009         	goto	l420
  3184  001388                     u1910:
  3185  001388                     
  3186                           ;Controler.c: 532:         LATC2 = 1;
  3187  001388  848B               	bsf	3979,2,c	;volatile
  3188  00138A                     
  3189                           ;Controler.c: 533:         LCD_String_xy(6,0,"ON ");
  3190  00138A  0E00               	movlw	0
  3191  00138C  6E0A               	movwf	LCD_String_xy@pos^0,c
  3192  00138E  0E3B               	movlw	low STR_9
  3193  001390  6E0B               	movwf	LCD_String_xy@str^0,c
  3194  001392  0E08               	movlw	high STR_9
  3195  001394  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3196  001396  0E06               	movlw	6
  3197  001398  ECA4  F00A         	call	_LCD_String_xy
  3198                           
  3199                           ;Controler.c: 534:     }else{
  3200  00139C  EFDB  F009         	goto	l422
  3201  0013A0                     l420:
  3202                           
  3203                           ;Controler.c: 535:         LATC2 = 0;
  3204  0013A0  948B               	bcf	3979,2,c	;volatile
  3205  0013A2                     
  3206                           ;Controler.c: 536:         LCD_String_xy(6,0,"OFF");
  3207  0013A2  0E00               	movlw	0
  3208  0013A4  6E0A               	movwf	LCD_String_xy@pos^0,c
  3209  0013A6  0E47               	movlw	low STR_10
  3210  0013A8  6E0B               	movwf	LCD_String_xy@str^0,c
  3211  0013AA  0E08               	movlw	high STR_10
  3212  0013AC  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3213  0013AE  0E06               	movlw	6
  3214  0013B0  ECA4  F00A         	call	_LCD_String_xy
  3215  0013B4                     
  3216                           ;Controler.c: 537:         PORTEbits.RE0 = 0;
  3217  0013B4  9084               	bcf	132,0,c	;volatile
  3218  0013B6                     l422:
  3219  0013B6  0012               	return		;funcret
  3220  0013B8                     __end_of_protocoloProtocoloDia:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _protocoloNoche *****************
  3224 ;; Defined at:
  3225 ;;		line 545 in file "Controler.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  i               2   15[COMRAM] int 
  3230 ;;  buffer_TX       1   14[COMRAM] unsigned char [1]
  3231 ;;  buffer_TX       1   13[COMRAM] unsigned char [1]
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      void 
  3234 ;; Registers used:
  3235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3241 ;;      Params:         0       0       0       0       0       0       0       0       0
  3242 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3244 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3245 ;;Total ram usage:        4 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    4
  3248 ;; This function calls:
  3249 ;;		_LCD_String_xy
  3250 ;; This function is called by:
  3251 ;;		_main
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text15
  3256  000FBA                     __ptext15:
  3257                           	callstack 0
  3258  000FBA                     _protocoloNoche:
  3259                           	callstack 26
  3260  000FBA                     
  3261                           ;Controler.c: 546:     ADCON1 = 0x0F;
  3262  000FBA  0E0F               	movlw	15
  3263  000FBC  6EC1               	movwf	193,c	;volatile
  3264  000FBE                     
  3265                           ;Controler.c: 547:     TRISAbits.RA2 = 1;
  3266  000FBE  8492               	bsf	146,2,c	;volatile
  3267  000FC0                     
  3268                           ;Controler.c: 548:     TRISAbits.RA3 = 1;
  3269  000FC0  8692               	bsf	146,3,c	;volatile
  3270  000FC2                     
  3271                           ;Controler.c: 549:     TRISAbits.RA4 = 1;
  3272  000FC2  8892               	bsf	146,4,c	;volatile
  3273  000FC4                     
  3274                           ;Controler.c: 550:     TRISCbits.RC0 = 0;
  3275  000FC4  9094               	bcf	148,0,c	;volatile
  3276  000FC6                     
  3277                           ;Controler.c: 551:     TRISCbits.RC1 = 0;
  3278  000FC6  9294               	bcf	148,1,c	;volatile
  3279  000FC8                     
  3280                           ;Controler.c: 552:     TRISCbits.RC2 = 0;
  3281  000FC8  9494               	bcf	148,2,c	;volatile
  3282  000FCA                     
  3283                           ;Controler.c: 553:     LATC0 = 0;
  3284  000FCA  908B               	bcf	3979,0,c	;volatile
  3285  000FCC                     
  3286                           ;Controler.c: 554:     LATC1 = 0;
  3287  000FCC  928B               	bcf	3979,1,c	;volatile
  3288  000FCE                     
  3289                           ;Controler.c: 555:     LATC2 = 0;
  3290  000FCE  948B               	bcf	3979,2,c	;volatile
  3291  000FD0                     
  3292                           ;Controler.c: 557:     LCD_String_xy(2,0,"SI: ");
  3293  000FD0  0E00               	movlw	0
  3294  000FD2  6E0A               	movwf	LCD_String_xy@pos^0,c
  3295  000FD4  0E31               	movlw	low STR_8
  3296  000FD6  6E0B               	movwf	LCD_String_xy@str^0,c
  3297  000FD8  0E08               	movlw	high STR_8
  3298  000FDA  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3299  000FDC  0E02               	movlw	2
  3300  000FDE  ECA4  F00A         	call	_LCD_String_xy
  3301  000FE2                     
  3302                           ;Controler.c: 558:     if (PORTAbits.RA2) {
  3303  000FE2  A480               	btfss	128,2,c	;volatile
  3304  000FE4  EFF6  F007         	goto	u1921
  3305  000FE8  EFF8  F007         	goto	u1920
  3306  000FEC                     u1921:
  3307  000FEC  EF05  F008         	goto	l425
  3308  000FF0                     u1920:
  3309  000FF0                     
  3310                           ;Controler.c: 559:         LATC0 = 1;
  3311  000FF0  808B               	bsf	3979,0,c	;volatile
  3312  000FF2                     
  3313                           ;Controler.c: 560:         LCD_String_xy(6,0,"ON ");
  3314  000FF2  0E00               	movlw	0
  3315  000FF4  6E0A               	movwf	LCD_String_xy@pos^0,c
  3316  000FF6  0E3B               	movlw	low STR_9
  3317  000FF8  6E0B               	movwf	LCD_String_xy@str^0,c
  3318  000FFA  0E08               	movlw	high STR_9
  3319  000FFC  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3320  000FFE  0E06               	movlw	6
  3321  001000  ECA4  F00A         	call	_LCD_String_xy
  3322  001004                     
  3323                           ;Controler.c: 561:         PORTEbits.RE0 = 1;
  3324  001004  8084               	bsf	132,0,c	;volatile
  3325                           
  3326                           ;Controler.c: 562:     } else {
  3327  001006  EF12  F008         	goto	l2744
  3328  00100A                     l425:
  3329                           
  3330                           ;Controler.c: 563:         LATC0 = 0;
  3331  00100A  908B               	bcf	3979,0,c	;volatile
  3332                           
  3333                           ;Controler.c: 564:         PORTEbits.RE0 = 0;
  3334  00100C  9084               	bcf	132,0,c	;volatile
  3335  00100E                     
  3336                           ;Controler.c: 565:         LCD_String_xy(6,0,"OFF");
  3337  00100E  0E00               	movlw	0
  3338  001010  6E0A               	movwf	LCD_String_xy@pos^0,c
  3339  001012  0E47               	movlw	low STR_10
  3340  001014  6E0B               	movwf	LCD_String_xy@str^0,c
  3341  001016  0E08               	movlw	high STR_10
  3342  001018  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3343  00101A  0E06               	movlw	6
  3344  00101C  ECA4  F00A         	call	_LCD_String_xy
  3345  001020                     
  3346                           ;Controler.c: 566:         char buffer_TX[] = "";
  3347  001020  0E00               	movlw	0
  3348  001022  6E0E               	movwf	protocoloNoche@buffer_TX^0,c
  3349  001024                     l2744:
  3350                           
  3351                           ;Controler.c: 569:     LCD_String_xy(3,0,"ST: ");
  3352  001024  0E00               	movlw	0
  3353  001026  6E0A               	movwf	LCD_String_xy@pos^0,c
  3354  001028  0E36               	movlw	low STR_11
  3355  00102A  6E0B               	movwf	LCD_String_xy@str^0,c
  3356  00102C  0E08               	movlw	high STR_11
  3357  00102E  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3358  001030  0E03               	movlw	3
  3359  001032  ECA4  F00A         	call	_LCD_String_xy
  3360  001036                     
  3361                           ;Controler.c: 570:     if(PORTAbits.RA3){
  3362  001036  A680               	btfss	128,3,c	;volatile
  3363  001038  EF20  F008         	goto	u1931
  3364  00103C  EF22  F008         	goto	u1930
  3365  001040                     u1931:
  3366  001040  EF2F  F008         	goto	l429
  3367  001044                     u1930:
  3368  001044                     
  3369                           ;Controler.c: 571:         LATC1 = 1;
  3370  001044  828B               	bsf	3979,1,c	;volatile
  3371                           
  3372                           ;Controler.c: 572:         PORTEbits.RE0 = 1;
  3373  001046  8084               	bsf	132,0,c	;volatile
  3374  001048                     
  3375                           ;Controler.c: 573:         LCD_String_xy(6,0,"ON ");
  3376  001048  0E00               	movlw	0
  3377  00104A  6E0A               	movwf	LCD_String_xy@pos^0,c
  3378  00104C  0E3B               	movlw	low STR_9
  3379  00104E  6E0B               	movwf	LCD_String_xy@str^0,c
  3380  001050  0E08               	movlw	high STR_9
  3381  001052  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3382  001054  0E06               	movlw	6
  3383  001056  ECA4  F00A         	call	_LCD_String_xy
  3384                           
  3385                           ;Controler.c: 574:     }else{
  3386  00105A  EF3C  F008         	goto	l2756
  3387  00105E                     l429:
  3388                           
  3389                           ;Controler.c: 575:         LATC1 = 0;
  3390  00105E  928B               	bcf	3979,1,c	;volatile
  3391                           
  3392                           ;Controler.c: 576:         PORTEbits.RE0 = 0;
  3393  001060  9084               	bcf	132,0,c	;volatile
  3394  001062                     
  3395                           ;Controler.c: 577:         LCD_String_xy(6,0,"OFF");
  3396  001062  0E00               	movlw	0
  3397  001064  6E0A               	movwf	LCD_String_xy@pos^0,c
  3398  001066  0E47               	movlw	low STR_10
  3399  001068  6E0B               	movwf	LCD_String_xy@str^0,c
  3400  00106A  0E08               	movlw	high STR_10
  3401  00106C  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3402  00106E  0E06               	movlw	6
  3403  001070  ECA4  F00A         	call	_LCD_String_xy
  3404  001074                     
  3405                           ;Controler.c: 578:         char buffer_TX[] = "";
  3406  001074  0E00               	movlw	0
  3407  001076  6E0F               	movwf	protocoloNoche@buffer_TX_984^0,c
  3408  001078                     l2756:
  3409                           
  3410                           ;Controler.c: 581:     LCD_String_xy(4,0,"SF: ");
  3411  001078  0E00               	movlw	0
  3412  00107A  6E0A               	movwf	LCD_String_xy@pos^0,c
  3413  00107C  0E2C               	movlw	low STR_14
  3414  00107E  6E0B               	movwf	LCD_String_xy@str^0,c
  3415  001080  0E08               	movlw	high STR_14
  3416  001082  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3417  001084  0E04               	movlw	4
  3418  001086  ECA4  F00A         	call	_LCD_String_xy
  3419  00108A                     
  3420                           ;Controler.c: 582:     if(PORTAbits.RA4){
  3421  00108A  A880               	btfss	128,4,c	;volatile
  3422  00108C  EF4A  F008         	goto	u1941
  3423  001090  EF4C  F008         	goto	u1940
  3424  001094                     u1941:
  3425  001094  EF59  F008         	goto	l433
  3426  001098                     u1940:
  3427  001098                     
  3428                           ;Controler.c: 583:         LATC2 = 1;
  3429  001098  848B               	bsf	3979,2,c	;volatile
  3430                           
  3431                           ;Controler.c: 584:         PORTEbits.RE0 = 1;
  3432  00109A  8084               	bsf	132,0,c	;volatile
  3433  00109C                     
  3434                           ;Controler.c: 585:         LCD_String_xy(6,0,"ON ");
  3435  00109C  0E00               	movlw	0
  3436  00109E  6E0A               	movwf	LCD_String_xy@pos^0,c
  3437  0010A0  0E3B               	movlw	low STR_9
  3438  0010A2  6E0B               	movwf	LCD_String_xy@str^0,c
  3439  0010A4  0E08               	movlw	high STR_9
  3440  0010A6  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3441  0010A8  0E06               	movlw	6
  3442  0010AA  ECA4  F00A         	call	_LCD_String_xy
  3443                           
  3444                           ;Controler.c: 586:     }else{
  3445  0010AE  EF64  F008         	goto	l2768
  3446  0010B2                     l433:
  3447                           
  3448                           ;Controler.c: 587:         LATC2 = 0;
  3449  0010B2  948B               	bcf	3979,2,c	;volatile
  3450  0010B4                     
  3451                           ;Controler.c: 588:         LCD_String_xy(6,0,"OFF");
  3452  0010B4  0E00               	movlw	0
  3453  0010B6  6E0A               	movwf	LCD_String_xy@pos^0,c
  3454  0010B8  0E47               	movlw	low STR_10
  3455  0010BA  6E0B               	movwf	LCD_String_xy@str^0,c
  3456  0010BC  0E08               	movlw	high STR_10
  3457  0010BE  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3458  0010C0  0E06               	movlw	6
  3459  0010C2  ECA4  F00A         	call	_LCD_String_xy
  3460  0010C6                     
  3461                           ;Controler.c: 589:         PORTEbits.RE0 = 0;
  3462  0010C6  9084               	bcf	132,0,c	;volatile
  3463  0010C8                     l2768:
  3464                           
  3465                           ;Controler.c: 592:                 if(PORTAbits.RA2 || PORTAbits.RA3 || PORTAbits.RA4){
  3466  0010C8  B480               	btfsc	128,2,c	;volatile
  3467  0010CA  EF69  F008         	goto	u1951
  3468  0010CE  EF6B  F008         	goto	u1950
  3469  0010D2                     u1951:
  3470  0010D2  EF79  F008         	goto	l2774
  3471  0010D6                     u1950:
  3472  0010D6  B680               	btfsc	128,3,c	;volatile
  3473  0010D8  EF70  F008         	goto	u1961
  3474  0010DC  EF72  F008         	goto	u1960
  3475  0010E0                     u1961:
  3476  0010E0  EF79  F008         	goto	l2774
  3477  0010E4                     u1960:
  3478  0010E4  A880               	btfss	128,4,c	;volatile
  3479  0010E6  EF77  F008         	goto	u1971
  3480  0010EA  EF79  F008         	goto	u1970
  3481  0010EE                     u1971:
  3482  0010EE  EF9C  F008         	goto	l443
  3483  0010F2                     u1970:
  3484  0010F2                     l2774:
  3485                           
  3486                           ;Controler.c: 595:                 for (int i = 0; i < 39; i++) {
  3487  0010F2  0E00               	movlw	0
  3488  0010F4  6E11               	movwf	(protocoloNoche@i+1)^0,c
  3489  0010F6  0E00               	movlw	0
  3490  0010F8  6E10               	movwf	protocoloNoche@i^0,c
  3491  0010FA                     l440:
  3492                           
  3493                           ;Controler.c: 597:                      while (!TXSTAbits.TRMT) {
  3494  0010FA  A2AC               	btfss	172,1,c	;volatile
  3495  0010FC  EF82  F008         	goto	u1981
  3496  001100  EF84  F008         	goto	u1980
  3497  001104                     u1981:
  3498  001104  EF7D  F008         	goto	l440
  3499  001108                     u1980:
  3500  001108                     
  3501                           ;Controler.c: 600:                      TXREG = buffer_TX[i];
  3502  001108  0E20               	movlw	low _buffer_TX
  3503  00110A  2410               	addwf	protocoloNoche@i^0,w,c
  3504  00110C  6ED9               	movwf	fsr2l,c
  3505  00110E  0E01               	movlw	high _buffer_TX
  3506  001110  2011               	addwfc	(protocoloNoche@i+1)^0,w,c
  3507  001112  6EDA               	movwf	fsr2h,c
  3508  001114  50DF               	movf	indf2,w,c
  3509  001116  6EAD               	movwf	173,c	;volatile
  3510  001118                     
  3511                           ;Controler.c: 601:                  }
  3512  001118  4A10               	infsnz	protocoloNoche@i^0,f,c
  3513  00111A  2A11               	incf	(protocoloNoche@i+1)^0,f,c
  3514  00111C  BE11               	btfsc	(protocoloNoche@i+1)^0,7,c
  3515  00111E  EF9A  F008         	goto	u1991
  3516  001122  5011               	movf	(protocoloNoche@i+1)^0,w,c
  3517  001124  E109               	bnz	u1990
  3518  001126  0E27               	movlw	39
  3519  001128  5C10               	subwf	protocoloNoche@i^0,w,c
  3520  00112A  A0D8               	btfss	status,0,c
  3521  00112C  EF9A  F008         	goto	u1991
  3522  001130  EF9C  F008         	goto	u1990
  3523  001134                     u1991:
  3524  001134  EF7D  F008         	goto	l440
  3525  001138                     u1990:
  3526  001138                     l443:
  3527  001138  0012               	return		;funcret
  3528  00113A                     __end_of_protocoloNoche:
  3529                           	callstack 0
  3530                           
  3531 ;; *************** function _protocoloFDS *****************
  3532 ;; Defined at:
  3533 ;;		line 434 in file "Controler.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  i               2   15[COMRAM] int 
  3538 ;;  buffer_TX       1   14[COMRAM] unsigned char [1]
  3539 ;;  buffer_TX       1   13[COMRAM] unsigned char [1]
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3549 ;;      Params:         0       0       0       0       0       0       0       0       0
  3550 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3552 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3553 ;;Total ram usage:        4 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    4
  3556 ;; This function calls:
  3557 ;;		_LCD_String_xy
  3558 ;; This function is called by:
  3559 ;;		_main
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text16
  3564  00113A                     __ptext16:
  3565                           	callstack 0
  3566  00113A                     _protocoloFDS:
  3567                           	callstack 26
  3568  00113A                     
  3569                           ;Controler.c: 435:     ADCON1 = 0x0F;
  3570  00113A  0E0F               	movlw	15
  3571  00113C  6EC1               	movwf	193,c	;volatile
  3572  00113E                     
  3573                           ;Controler.c: 436:     TRISAbits.RA2 = 1;
  3574  00113E  8492               	bsf	146,2,c	;volatile
  3575  001140                     
  3576                           ;Controler.c: 437:     TRISAbits.RA3 = 1;
  3577  001140  8692               	bsf	146,3,c	;volatile
  3578  001142                     
  3579                           ;Controler.c: 438:     TRISAbits.RA4 = 1;
  3580  001142  8892               	bsf	146,4,c	;volatile
  3581  001144                     
  3582                           ;Controler.c: 439:     TRISCbits.RC0 = 0;
  3583  001144  9094               	bcf	148,0,c	;volatile
  3584  001146                     
  3585                           ;Controler.c: 440:     TRISCbits.RC1 = 0;
  3586  001146  9294               	bcf	148,1,c	;volatile
  3587  001148                     
  3588                           ;Controler.c: 441:     TRISCbits.RC2 = 0;
  3589  001148  9494               	bcf	148,2,c	;volatile
  3590  00114A                     
  3591                           ;Controler.c: 442:     LATC0 = 0;
  3592  00114A  908B               	bcf	3979,0,c	;volatile
  3593  00114C                     
  3594                           ;Controler.c: 443:     LATC1 = 0;
  3595  00114C  928B               	bcf	3979,1,c	;volatile
  3596  00114E                     
  3597                           ;Controler.c: 444:     LATC2 = 0;
  3598  00114E  948B               	bcf	3979,2,c	;volatile
  3599  001150                     
  3600                           ;Controler.c: 447:     LCD_String_xy(2,0,"SI: ");
  3601  001150  0E00               	movlw	0
  3602  001152  6E0A               	movwf	LCD_String_xy@pos^0,c
  3603  001154  0E31               	movlw	low STR_8
  3604  001156  6E0B               	movwf	LCD_String_xy@str^0,c
  3605  001158  0E08               	movlw	high STR_8
  3606  00115A  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3607  00115C  0E02               	movlw	2
  3608  00115E  ECA4  F00A         	call	_LCD_String_xy
  3609  001162                     
  3610                           ;Controler.c: 448:     if (PORTAbits.RA2) {
  3611  001162  A480               	btfss	128,2,c	;volatile
  3612  001164  EFB6  F008         	goto	u1811
  3613  001168  EFB8  F008         	goto	u1810
  3614  00116C                     u1811:
  3615  00116C  EFC5  F008         	goto	l395
  3616  001170                     u1810:
  3617  001170                     
  3618                           ;Controler.c: 449:         LATC0 = 1;
  3619  001170  808B               	bsf	3979,0,c	;volatile
  3620  001172                     
  3621                           ;Controler.c: 450:         LCD_String_xy(6,0,"ON ");
  3622  001172  0E00               	movlw	0
  3623  001174  6E0A               	movwf	LCD_String_xy@pos^0,c
  3624  001176  0E3B               	movlw	low STR_9
  3625  001178  6E0B               	movwf	LCD_String_xy@str^0,c
  3626  00117A  0E08               	movlw	high STR_9
  3627  00117C  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3628  00117E  0E06               	movlw	6
  3629  001180  ECA4  F00A         	call	_LCD_String_xy
  3630  001184                     
  3631                           ;Controler.c: 451:         PORTEbits.RE0 = 1;
  3632  001184  8084               	bsf	132,0,c	;volatile
  3633                           
  3634                           ;Controler.c: 452:     } else {
  3635  001186  EFD2  F008         	goto	l2620
  3636  00118A                     l395:
  3637                           
  3638                           ;Controler.c: 453:         LATC0 = 0;
  3639  00118A  908B               	bcf	3979,0,c	;volatile
  3640                           
  3641                           ;Controler.c: 454:         PORTEbits.RE0 = 0;
  3642  00118C  9084               	bcf	132,0,c	;volatile
  3643  00118E                     
  3644                           ;Controler.c: 455:         LCD_String_xy(6,0,"OFF");
  3645  00118E  0E00               	movlw	0
  3646  001190  6E0A               	movwf	LCD_String_xy@pos^0,c
  3647  001192  0E47               	movlw	low STR_10
  3648  001194  6E0B               	movwf	LCD_String_xy@str^0,c
  3649  001196  0E08               	movlw	high STR_10
  3650  001198  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3651  00119A  0E06               	movlw	6
  3652  00119C  ECA4  F00A         	call	_LCD_String_xy
  3653  0011A0                     
  3654                           ;Controler.c: 456:         char buffer_TX[] = "";
  3655  0011A0  0E00               	movlw	0
  3656  0011A2  6E0E               	movwf	protocoloFDS@buffer_TX^0,c
  3657  0011A4                     l2620:
  3658                           
  3659                           ;Controler.c: 459:     LCD_String_xy(3,0,"ST: ");
  3660  0011A4  0E00               	movlw	0
  3661  0011A6  6E0A               	movwf	LCD_String_xy@pos^0,c
  3662  0011A8  0E36               	movlw	low STR_11
  3663  0011AA  6E0B               	movwf	LCD_String_xy@str^0,c
  3664  0011AC  0E08               	movlw	high STR_11
  3665  0011AE  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3666  0011B0  0E03               	movlw	3
  3667  0011B2  ECA4  F00A         	call	_LCD_String_xy
  3668  0011B6                     
  3669                           ;Controler.c: 460:     if(PORTAbits.RA3){
  3670  0011B6  A680               	btfss	128,3,c	;volatile
  3671  0011B8  EFE0  F008         	goto	u1821
  3672  0011BC  EFE2  F008         	goto	u1820
  3673  0011C0                     u1821:
  3674  0011C0  EFEF  F008         	goto	l399
  3675  0011C4                     u1820:
  3676  0011C4                     
  3677                           ;Controler.c: 461:         LATC1 = 1;
  3678  0011C4  828B               	bsf	3979,1,c	;volatile
  3679                           
  3680                           ;Controler.c: 462:         PORTEbits.RE0 = 1;
  3681  0011C6  8084               	bsf	132,0,c	;volatile
  3682  0011C8                     
  3683                           ;Controler.c: 463:         LCD_String_xy(6,0,"ON ");
  3684  0011C8  0E00               	movlw	0
  3685  0011CA  6E0A               	movwf	LCD_String_xy@pos^0,c
  3686  0011CC  0E3B               	movlw	low STR_9
  3687  0011CE  6E0B               	movwf	LCD_String_xy@str^0,c
  3688  0011D0  0E08               	movlw	high STR_9
  3689  0011D2  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3690  0011D4  0E06               	movlw	6
  3691  0011D6  ECA4  F00A         	call	_LCD_String_xy
  3692                           
  3693                           ;Controler.c: 464:     }else{
  3694  0011DA  EFFC  F008         	goto	l2632
  3695  0011DE                     l399:
  3696                           
  3697                           ;Controler.c: 465:         LATC1 = 0;
  3698  0011DE  928B               	bcf	3979,1,c	;volatile
  3699                           
  3700                           ;Controler.c: 466:         PORTEbits.RE0 = 0;
  3701  0011E0  9084               	bcf	132,0,c	;volatile
  3702  0011E2                     
  3703                           ;Controler.c: 467:         LCD_String_xy(6,0,"OFF");
  3704  0011E2  0E00               	movlw	0
  3705  0011E4  6E0A               	movwf	LCD_String_xy@pos^0,c
  3706  0011E6  0E47               	movlw	low STR_10
  3707  0011E8  6E0B               	movwf	LCD_String_xy@str^0,c
  3708  0011EA  0E08               	movlw	high STR_10
  3709  0011EC  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3710  0011EE  0E06               	movlw	6
  3711  0011F0  ECA4  F00A         	call	_LCD_String_xy
  3712  0011F4                     
  3713                           ;Controler.c: 468:         char buffer_TX[] = "";
  3714  0011F4  0E00               	movlw	0
  3715  0011F6  6E0F               	movwf	protocoloFDS@buffer_TX_959^0,c
  3716  0011F8                     l2632:
  3717                           
  3718                           ;Controler.c: 471:     LCD_String_xy(4,0,"SF: ");
  3719  0011F8  0E00               	movlw	0
  3720  0011FA  6E0A               	movwf	LCD_String_xy@pos^0,c
  3721  0011FC  0E2C               	movlw	low STR_14
  3722  0011FE  6E0B               	movwf	LCD_String_xy@str^0,c
  3723  001200  0E08               	movlw	high STR_14
  3724  001202  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3725  001204  0E04               	movlw	4
  3726  001206  ECA4  F00A         	call	_LCD_String_xy
  3727  00120A                     
  3728                           ;Controler.c: 472:     if(PORTAbits.RA4){
  3729  00120A  A880               	btfss	128,4,c	;volatile
  3730  00120C  EF0A  F009         	goto	u1831
  3731  001210  EF0C  F009         	goto	u1830
  3732  001214                     u1831:
  3733  001214  EF19  F009         	goto	l403
  3734  001218                     u1830:
  3735  001218                     
  3736                           ;Controler.c: 473:         LATC2 = 1;
  3737  001218  848B               	bsf	3979,2,c	;volatile
  3738                           
  3739                           ;Controler.c: 474:         PORTEbits.RE0 = 1;
  3740  00121A  8084               	bsf	132,0,c	;volatile
  3741  00121C                     
  3742                           ;Controler.c: 475:         LCD_String_xy(6,0,"ON ");
  3743  00121C  0E00               	movlw	0
  3744  00121E  6E0A               	movwf	LCD_String_xy@pos^0,c
  3745  001220  0E3B               	movlw	low STR_9
  3746  001222  6E0B               	movwf	LCD_String_xy@str^0,c
  3747  001224  0E08               	movlw	high STR_9
  3748  001226  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3749  001228  0E06               	movlw	6
  3750  00122A  ECA4  F00A         	call	_LCD_String_xy
  3751                           
  3752                           ;Controler.c: 476:     }else{
  3753  00122E  EF24  F009         	goto	l2644
  3754  001232                     l403:
  3755                           
  3756                           ;Controler.c: 477:         LATC2 = 0;
  3757  001232  948B               	bcf	3979,2,c	;volatile
  3758  001234                     
  3759                           ;Controler.c: 478:         LCD_String_xy(6,0,"OFF");
  3760  001234  0E00               	movlw	0
  3761  001236  6E0A               	movwf	LCD_String_xy@pos^0,c
  3762  001238  0E47               	movlw	low STR_10
  3763  00123A  6E0B               	movwf	LCD_String_xy@str^0,c
  3764  00123C  0E08               	movlw	high STR_10
  3765  00123E  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3766  001240  0E06               	movlw	6
  3767  001242  ECA4  F00A         	call	_LCD_String_xy
  3768  001246                     
  3769                           ;Controler.c: 479:         PORTEbits.RE0 = 0;
  3770  001246  9084               	bcf	132,0,c	;volatile
  3771  001248                     l2644:
  3772                           
  3773                           ;Controler.c: 482:                 if(PORTAbits.RA2 || PORTAbits.RA3 || PORTAbits.RA4){
  3774  001248  B480               	btfsc	128,2,c	;volatile
  3775  00124A  EF29  F009         	goto	u1841
  3776  00124E  EF2B  F009         	goto	u1840
  3777  001252                     u1841:
  3778  001252  EF39  F009         	goto	l2650
  3779  001256                     u1840:
  3780  001256  B680               	btfsc	128,3,c	;volatile
  3781  001258  EF30  F009         	goto	u1851
  3782  00125C  EF32  F009         	goto	u1850
  3783  001260                     u1851:
  3784  001260  EF39  F009         	goto	l2650
  3785  001264                     u1850:
  3786  001264  A880               	btfss	128,4,c	;volatile
  3787  001266  EF37  F009         	goto	u1861
  3788  00126A  EF39  F009         	goto	u1860
  3789  00126E                     u1861:
  3790  00126E  EF5C  F009         	goto	l413
  3791  001272                     u1860:
  3792  001272                     l2650:
  3793                           
  3794                           ;Controler.c: 485:                 for (int i = 0; i < 39; i++) {
  3795  001272  0E00               	movlw	0
  3796  001274  6E11               	movwf	(protocoloFDS@i+1)^0,c
  3797  001276  0E00               	movlw	0
  3798  001278  6E10               	movwf	protocoloFDS@i^0,c
  3799  00127A                     l410:
  3800                           
  3801                           ;Controler.c: 487:                      while (!TXSTAbits.TRMT) {
  3802  00127A  A2AC               	btfss	172,1,c	;volatile
  3803  00127C  EF42  F009         	goto	u1871
  3804  001280  EF44  F009         	goto	u1870
  3805  001284                     u1871:
  3806  001284  EF3D  F009         	goto	l410
  3807  001288                     u1870:
  3808  001288                     
  3809                           ;Controler.c: 490:                      TXREG = buffer_TX[i];
  3810  001288  0E20               	movlw	low _buffer_TX
  3811  00128A  2410               	addwf	protocoloFDS@i^0,w,c
  3812  00128C  6ED9               	movwf	fsr2l,c
  3813  00128E  0E01               	movlw	high _buffer_TX
  3814  001290  2011               	addwfc	(protocoloFDS@i+1)^0,w,c
  3815  001292  6EDA               	movwf	fsr2h,c
  3816  001294  50DF               	movf	indf2,w,c
  3817  001296  6EAD               	movwf	173,c	;volatile
  3818  001298                     
  3819                           ;Controler.c: 491:                  }
  3820  001298  4A10               	infsnz	protocoloFDS@i^0,f,c
  3821  00129A  2A11               	incf	(protocoloFDS@i+1)^0,f,c
  3822  00129C  BE11               	btfsc	(protocoloFDS@i+1)^0,7,c
  3823  00129E  EF5A  F009         	goto	u1881
  3824  0012A2  5011               	movf	(protocoloFDS@i+1)^0,w,c
  3825  0012A4  E109               	bnz	u1880
  3826  0012A6  0E27               	movlw	39
  3827  0012A8  5C10               	subwf	protocoloFDS@i^0,w,c
  3828  0012AA  A0D8               	btfss	status,0,c
  3829  0012AC  EF5A  F009         	goto	u1881
  3830  0012B0  EF5C  F009         	goto	u1880
  3831  0012B4                     u1881:
  3832  0012B4  EF3D  F009         	goto	l410
  3833  0012B8                     u1880:
  3834  0012B8                     l413:
  3835  0012B8  0012               	return		;funcret
  3836  0012BA                     __end_of_protocoloFDS:
  3837                           	callstack 0
  3838                           
  3839 ;; *************** function _desactivarAlarm *****************
  3840 ;; Defined at:
  3841 ;;		line 278 in file "Controler.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3858 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    4
  3862 ;; This function calls:
  3863 ;;		_LCD_Clear
  3864 ;;		_LCD_String_xy
  3865 ;;		_MSdelay
  3866 ;; This function is called by:
  3867 ;;		_main
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           	psect	text17
  3872  001ADE                     __ptext17:
  3873                           	callstack 0
  3874  001ADE                     _desactivarAlarm:
  3875                           	callstack 26
  3876  001ADE                     
  3877                           ;Controler.c: 279:      LCD_Clear();
  3878  001ADE  ECF4  F00D         	call	_LCD_Clear	;wreg free
  3879  001AE2                     
  3880                           ;Controler.c: 280:      LCD_String_xy(2,1,"ALARMA DESACTIVADA");
  3881  001AE2  0E01               	movlw	1
  3882  001AE4  6E0A               	movwf	LCD_String_xy@pos^0,c
  3883  001AE6  0E01               	movlw	low STR_4
  3884  001AE8  6E0B               	movwf	LCD_String_xy@str^0,c
  3885  001AEA  0E08               	movlw	high STR_4
  3886  001AEC  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  3887  001AEE  0E02               	movlw	2
  3888  001AF0  ECA4  F00A         	call	_LCD_String_xy
  3889  001AF4                     
  3890                           ;Controler.c: 281:      MSdelay(100);
  3891  001AF4  0E00               	movlw	0
  3892  001AF6  6E02               	movwf	(MSdelay@val+1)^0,c
  3893  001AF8  0E64               	movlw	100
  3894  001AFA  6E01               	movwf	MSdelay@val^0,c
  3895  001AFC  ECD2  F00B         	call	_MSdelay	;wreg free
  3896  001B00                     
  3897                           ;Controler.c: 282:       LATC0 = 0;
  3898  001B00  908B               	bcf	3979,0,c	;volatile
  3899  001B02                     
  3900                           ;Controler.c: 283:       LATC1 = 0;
  3901  001B02  928B               	bcf	3979,1,c	;volatile
  3902  001B04                     
  3903                           ;Controler.c: 284:       LATC2 = 0;
  3904  001B04  948B               	bcf	3979,2,c	;volatile
  3905  001B06                     
  3906                           ;Controler.c: 285:       PORTEbits.RE0 = 0;
  3907  001B06  9084               	bcf	132,0,c	;volatile
  3908  001B08  0012               	return		;funcret
  3909  001B0A                     __end_of_desactivarAlarm:
  3910                           	callstack 0
  3911                           
  3912 ;; *************** function _RTC_Read_Clock *****************
  3913 ;; Defined at:
  3914 ;;		line 85 in file "Controler.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  read_clock_a    1    wreg     unsigned char 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3928 ;;      Params:         0       0       0       0       0       0       0       0       0
  3929 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3930 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3931 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3932 ;;Total ram usage:        2 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    3
  3935 ;; This function calls:
  3936 ;;		_I2C_Read
  3937 ;;		_I2C_Repeated_Start
  3938 ;;		_I2C_Start
  3939 ;;		_I2C_Write
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text18
  3946  001836                     __ptext18:
  3947                           	callstack 0
  3948  001836                     _RTC_Read_Clock:
  3949                           	callstack 27
  3950                           
  3951                           ;incstack = 0
  3952                           ;RTC_Read_Clock@read_clock_address stored from wreg
  3953  001836  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  3954  001838                     
  3955                           ;Controler.c: 85: void RTC_Read_Clock(char read_clock_address);Controler.c: 86: {;Contro
      +                          ler.c: 87:     I2C_Start(0xD0);
  3956  001838  0ED0               	movlw	208
  3957  00183A  EC41  F00D         	call	_I2C_Start
  3958                           
  3959                           ;Controler.c: 88:     I2C_Write(read_clock_address);
  3960  00183E  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  3961  001840  EC85  F00D         	call	_I2C_Write
  3962                           
  3963                           ;Controler.c: 89:     I2C_Repeated_Start(0xD1);
  3964  001844  0ED1               	movlw	209
  3965  001846  EC58  F00D         	call	_I2C_Repeated_Start
  3966  00184A                     
  3967                           ;Controler.c: 90:     sec = I2C_Read(0);
  3968  00184A  0E00               	movlw	0
  3969  00184C  EC9E  F00C         	call	_I2C_Read
  3970  001850  6E03               	movwf	??_RTC_Read_Clock^0,c
  3971  001852  5003               	movf	??_RTC_Read_Clock^0,w,c
  3972  001854  0100               	movlb	0	; () banked
  3973  001856  6FE9               	movwf	_sec& (0+255),b
  3974  001858  6BEA               	clrf	(_sec+1)& (0+255),b
  3975  00185A                     
  3976                           ; BSR set to: 0
  3977                           ;Controler.c: 91:     min = I2C_Read(0);
  3978  00185A  0E00               	movlw	0
  3979  00185C  EC9E  F00C         	call	_I2C_Read
  3980  001860  6E03               	movwf	??_RTC_Read_Clock^0,c
  3981  001862  5003               	movf	??_RTC_Read_Clock^0,w,c
  3982  001864  0100               	movlb	0	; () banked
  3983  001866  6FE7               	movwf	_min& (0+255),b
  3984  001868  6BE8               	clrf	(_min+1)& (0+255),b
  3985  00186A                     
  3986                           ; BSR set to: 0
  3987                           ;Controler.c: 92:     hour= I2C_Read(1);
  3988  00186A  0E01               	movlw	1
  3989  00186C  EC9E  F00C         	call	_I2C_Read
  3990  001870  6E03               	movwf	??_RTC_Read_Clock^0,c
  3991  001872  5003               	movf	??_RTC_Read_Clock^0,w,c
  3992  001874  0100               	movlb	0	; () banked
  3993  001876  6FE5               	movwf	_hour& (0+255),b
  3994  001878  6BE6               	clrf	(_hour+1)& (0+255),b
  3995  00187A                     
  3996                           ; BSR set to: 0
  3997  00187A  0012               	return		;funcret
  3998  00187C                     __end_of_RTC_Read_Clock:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _RTC_Read_Calendar *****************
  4002 ;; Defined at:
  4003 ;;		line 100 in file "Controler.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  read_calenda    1    wreg     unsigned char 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  read_calenda    1    3[COMRAM] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4017 ;;      Params:         0       0       0       0       0       0       0       0       0
  4018 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4019 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4020 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4021 ;;Total ram usage:        2 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    3
  4024 ;; This function calls:
  4025 ;;		_I2C_Read
  4026 ;;		_I2C_Repeated_Start
  4027 ;;		_I2C_Start
  4028 ;;		_I2C_Stop
  4029 ;;		_I2C_Write
  4030 ;; This function is called by:
  4031 ;;		_main
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text19
  4036  0016F8                     __ptext19:
  4037                           	callstack 0
  4038  0016F8                     _RTC_Read_Calendar:
  4039                           	callstack 27
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;incstack = 0
  4043                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  4044  0016F8  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  4045  0016FA                     
  4046                           ;Controler.c: 100: void RTC_Read_Calendar(char read_calendar_address);Controler.c: 101: 
      +                          {;Controler.c: 102:     I2C_Start(0xD0);
  4047  0016FA  0ED0               	movlw	208
  4048  0016FC  EC41  F00D         	call	_I2C_Start
  4049                           
  4050                           ;Controler.c: 103:     I2C_Write(read_calendar_address);
  4051  001700  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  4052  001702  EC85  F00D         	call	_I2C_Write
  4053                           
  4054                           ;Controler.c: 104:     I2C_Repeated_Start(0xD1);
  4055  001706  0ED1               	movlw	209
  4056  001708  EC58  F00D         	call	_I2C_Repeated_Start
  4057  00170C                     
  4058                           ;Controler.c: 105:     Day = I2C_Read(0);
  4059  00170C  0E00               	movlw	0
  4060  00170E  EC9E  F00C         	call	_I2C_Read
  4061  001712  6E03               	movwf	??_RTC_Read_Calendar^0,c
  4062  001714  5003               	movf	??_RTC_Read_Calendar^0,w,c
  4063  001716  0100               	movlb	0	; () banked
  4064  001718  6FE3               	movwf	_Day& (0+255),b
  4065  00171A  6BE4               	clrf	(_Day+1)& (0+255),b
  4066  00171C                     
  4067                           ; BSR set to: 0
  4068                           ;Controler.c: 106:     Date = I2C_Read(0);
  4069  00171C  0E00               	movlw	0
  4070  00171E  EC9E  F00C         	call	_I2C_Read
  4071  001722  6E03               	movwf	??_RTC_Read_Calendar^0,c
  4072  001724  5003               	movf	??_RTC_Read_Calendar^0,w,c
  4073  001726  0100               	movlb	0	; () banked
  4074  001728  6FE1               	movwf	_Date& (0+255),b
  4075  00172A  6BE2               	clrf	(_Date+1)& (0+255),b
  4076  00172C                     
  4077                           ; BSR set to: 0
  4078                           ;Controler.c: 107:     Month = I2C_Read(0);
  4079  00172C  0E00               	movlw	0
  4080  00172E  EC9E  F00C         	call	_I2C_Read
  4081  001732  6E03               	movwf	??_RTC_Read_Calendar^0,c
  4082  001734  5003               	movf	??_RTC_Read_Calendar^0,w,c
  4083  001736  0100               	movlb	0	; () banked
  4084  001738  6FDF               	movwf	_Month& (0+255),b
  4085  00173A  6BE0               	clrf	(_Month+1)& (0+255),b
  4086  00173C                     
  4087                           ; BSR set to: 0
  4088                           ;Controler.c: 108:     Year = I2C_Read(1);
  4089  00173C  0E01               	movlw	1
  4090  00173E  EC9E  F00C         	call	_I2C_Read
  4091  001742  6E03               	movwf	??_RTC_Read_Calendar^0,c
  4092  001744  5003               	movf	??_RTC_Read_Calendar^0,w,c
  4093  001746  0100               	movlb	0	; () banked
  4094  001748  6FDD               	movwf	_Year& (0+255),b
  4095  00174A  6BDE               	clrf	(_Year+1)& (0+255),b
  4096  00174C                     
  4097                           ; BSR set to: 0
  4098                           ;Controler.c: 109:     I2C_Stop();
  4099  00174C  ECD6  F00D         	call	_I2C_Stop	;wreg free
  4100  001750  0012               	return		;funcret
  4101  001752                     __end_of_RTC_Read_Calendar:
  4102                           	callstack 0
  4103                           
  4104 ;; *************** function _I2C_Stop *****************
  4105 ;; Defined at:
  4106 ;;		line 114 in file "./I2C_Master_File_1.h"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;		None
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      unsigned char 
  4113 ;; Registers used:
  4114 ;;		wreg
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4120 ;;      Params:         0       0       0       0       0       0       0       0       0
  4121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4123 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4124 ;;Total ram usage:        0 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_RTC_Read_Calendar
  4130 ;;		_main
  4131 ;;		_I2C_Start_Wait
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text20
  4136  001BAC                     __ptext20:
  4137                           	callstack 0
  4138  001BAC                     _I2C_Stop:
  4139                           	callstack 29
  4140  001BAC                     
  4141                           ;./I2C_Master_File_1.h: 116:     PEN = 1;
  4142  001BAC  84C5               	bsf	4037,2,c	;volatile
  4143  001BAE                     l232:
  4144  001BAE  B4C5               	btfsc	4037,2,c	;volatile
  4145  001BB0  EFDC  F00D         	goto	u1751
  4146  001BB4  EFDE  F00D         	goto	u1750
  4147  001BB8                     u1751:
  4148  001BB8  EFD7  F00D         	goto	l232
  4149  001BBC                     u1750:
  4150  001BBC                     
  4151                           ;./I2C_Master_File_1.h: 118:     if(!SSPSTATbits.P);
  4152  001BBC  50C7               	movf	199,w,c	;volatile
  4153  001BBE  0012               	return		;funcret
  4154  001BC0                     __end_of_I2C_Stop:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _I2C_Start *****************
  4158 ;; Defined at:
  4159 ;;		line 89 in file "./I2C_Master_File_1.h"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  slave_write_    1    wreg     unsigned char 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  slave_write_    1    1[COMRAM] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      unsigned char 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4173 ;;      Params:         0       0       0       0       0       0       0       0       0
  4174 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4176 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4177 ;;Total ram usage:        1 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    2
  4180 ;; This function calls:
  4181 ;;		_I2C_Write
  4182 ;; This function is called by:
  4183 ;;		_RTC_Read_Clock
  4184 ;;		_RTC_Read_Calendar
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text21
  4189  001A82                     __ptext21:
  4190                           	callstack 0
  4191  001A82                     _I2C_Start:
  4192                           	callstack 27
  4193                           
  4194                           ;incstack = 0
  4195                           ;I2C_Start@slave_write_address stored from wreg
  4196  001A82  6E02               	movwf	I2C_Start@slave_write_address^0,c
  4197  001A84                     
  4198                           ;./I2C_Master_File_1.h: 89: char I2C_Start(char slave_write_address);./I2C_Master_File_1
      +                          .h: 90: {;./I2C_Master_File_1.h: 91:     SSPCON2bits.SEN=1;
  4199  001A84  80C5               	bsf	197,0,c	;volatile
  4200  001A86                     l216:
  4201  001A86  B0C5               	btfsc	197,0,c	;volatile
  4202  001A88  EF48  F00D         	goto	u1761
  4203  001A8C  EF4A  F00D         	goto	u1760
  4204  001A90                     u1761:
  4205  001A90  EF43  F00D         	goto	l216
  4206  001A94                     u1760:
  4207  001A94                     
  4208                           ;./I2C_Master_File_1.h: 93:  SSPIF=0;
  4209  001A94  969E               	bcf	3998,3,c	;volatile
  4210                           
  4211                           ;./I2C_Master_File_1.h: 94:     if(!SSPSTATbits.S)
  4212  001A96  B6C7               	btfsc	199,3,c	;volatile
  4213  001A98  EF50  F00D         	goto	u1771
  4214  001A9C  EF52  F00D         	goto	u1770
  4215  001AA0                     u1771:
  4216  001AA0  EF54  F00D         	goto	l2496
  4217  001AA4                     u1770:
  4218  001AA4  EF57  F00D         	goto	l220
  4219  001AA8                     l2496:
  4220                           
  4221                           ;./I2C_Master_File_1.h: 96:     return (I2C_Write(slave_write_address));;	Return value o
      +                          f _I2C_Start is never used
  4222  001AA8  5002               	movf	I2C_Start@slave_write_address^0,w,c
  4223  001AAA  EC85  F00D         	call	_I2C_Write
  4224  001AAE                     l220:
  4225  001AAE  0012               	return		;funcret
  4226  001AB0                     __end_of_I2C_Start:
  4227                           	callstack 0
  4228                           
  4229 ;; *************** function _I2C_Repeated_Start *****************
  4230 ;; Defined at:
  4231 ;;		line 100 in file "./I2C_Master_File_1.h"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  slave_read_a    1    wreg     unsigned char 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      unsigned char 
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0
  4246 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4248 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4249 ;;Total ram usage:        1 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    2
  4252 ;; This function calls:
  4253 ;;		_I2C_Write
  4254 ;; This function is called by:
  4255 ;;		_RTC_Read_Clock
  4256 ;;		_RTC_Read_Calendar
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text22
  4261  001AB0                     __ptext22:
  4262                           	callstack 0
  4263  001AB0                     _I2C_Repeated_Start:
  4264                           	callstack 27
  4265                           
  4266                           ;incstack = 0
  4267                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  4268  001AB0  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  4269  001AB2                     
  4270                           ;./I2C_Master_File_1.h: 100: char I2C_Repeated_Start(char slave_read_address);./I2C_Mast
      +                          er_File_1.h: 101: {;./I2C_Master_File_1.h: 102:     RSEN = 1;
  4271  001AB2  82C5               	bsf	4037,1,c	;volatile
  4272  001AB4                     l223:
  4273  001AB4  B2C5               	btfsc	4037,1,c	;volatile
  4274  001AB6  EF5F  F00D         	goto	u1781
  4275  001ABA  EF61  F00D         	goto	u1780
  4276  001ABE                     u1781:
  4277  001ABE  EF5A  F00D         	goto	l223
  4278  001AC2                     u1780:
  4279  001AC2                     
  4280                           ;./I2C_Master_File_1.h: 104:     SSPIF = 0;
  4281  001AC2  969E               	bcf	3998,3,c	;volatile
  4282                           
  4283                           ;./I2C_Master_File_1.h: 105:  if(!SSPSTATbits.S)
  4284  001AC4  B6C7               	btfsc	199,3,c	;volatile
  4285  001AC6  EF67  F00D         	goto	u1791
  4286  001ACA  EF69  F00D         	goto	u1790
  4287  001ACE                     u1791:
  4288  001ACE  EF6B  F00D         	goto	l2504
  4289  001AD2                     u1790:
  4290  001AD2  EF6E  F00D         	goto	l227
  4291  001AD6                     l2504:
  4292                           
  4293                           ;./I2C_Master_File_1.h: 107:     I2C_Write(slave_read_address);
  4294  001AD6  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  4295  001AD8  EC85  F00D         	call	_I2C_Write
  4296  001ADC                     l227:
  4297  001ADC  0012               	return		;funcret
  4298  001ADE                     __end_of_I2C_Repeated_Start:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _I2C_Write *****************
  4302 ;; Defined at:
  4303 ;;		line 122 in file "./I2C_Master_File_1.h"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  data            1    wreg     unsigned char 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  data            1    0[COMRAM] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      unsigned char 
  4310 ;; Registers used:
  4311 ;;		wreg, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4317 ;;      Params:         0       0       0       0       0       0       0       0       0
  4318 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4319 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4320 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4321 ;;Total ram usage:        1 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    1
  4324 ;; This function calls:
  4325 ;;		_I2C_Ready
  4326 ;; This function is called by:
  4327 ;;		_I2C_Start
  4328 ;;		_I2C_Repeated_Start
  4329 ;;		_RTC_Read_Clock
  4330 ;;		_RTC_Read_Calendar
  4331 ;;		_I2C_Start_Wait
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text23
  4336  001B0A                     __ptext23:
  4337                           	callstack 0
  4338  001B0A                     _I2C_Write:
  4339                           	callstack 28
  4340                           
  4341                           ;incstack = 0
  4342                           ;I2C_Write@data stored from wreg
  4343  001B0A  6E01               	movwf	I2C_Write@data^0,c
  4344  001B0C                     
  4345                           ;./I2C_Master_File_1.h: 122: char I2C_Write(unsigned char data);./I2C_Master_File_1.h: 1
      +                          23: {;./I2C_Master_File_1.h: 124:       SSPBUF = data;
  4346  001B0C  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  4347  001B10                     
  4348                           ;./I2C_Master_File_1.h: 125:       I2C_Ready();
  4349  001B10  ECFE  F00D         	call	_I2C_Ready	;wreg free
  4350  001B14                     
  4351                           ;./I2C_Master_File_1.h: 126:       if (ACKSTAT)
  4352  001B14  ACC5               	btfss	4037,6,c	;volatile
  4353  001B16  EF8F  F00D         	goto	u1641
  4354  001B1A  EF91  F00D         	goto	u1640
  4355  001B1E                     u1641:
  4356  001B1E  EF94  F00D         	goto	l2408
  4357  001B22                     u1640:
  4358  001B22                     
  4359                           ;./I2C_Master_File_1.h: 127:         return 1;
  4360  001B22  0E01               	movlw	1
  4361  001B24  EF95  F00D         	goto	l240
  4362  001B28                     l2408:
  4363                           
  4364                           ;./I2C_Master_File_1.h: 129:         return 2;
  4365  001B28  0E02               	movlw	2
  4366  001B2A                     l240:
  4367  001B2A  0012               	return		;funcret
  4368  001B2C                     __end_of_I2C_Write:
  4369                           	callstack 0
  4370                           
  4371 ;; *************** function _I2C_Read *****************
  4372 ;; Defined at:
  4373 ;;		line 33 in file "./I2C_Master_File_1.h"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  flag            1    wreg     unsigned char 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  flag            1    0[COMRAM] unsigned char 
  4378 ;;  buffer          1    1[COMRAM] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      unsigned char 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4388 ;;      Params:         0       0       0       0       0       0       0       0       0
  4389 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4391 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4392 ;;Total ram usage:        2 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    1
  4395 ;; This function calls:
  4396 ;;		_I2C_Ack
  4397 ;;		_I2C_Nack
  4398 ;;		_I2C_Ready
  4399 ;; This function is called by:
  4400 ;;		_RTC_Read_Clock
  4401 ;;		_RTC_Read_Calendar
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text24
  4406  00193C                     __ptext24:
  4407                           	callstack 0
  4408  00193C                     _I2C_Read:
  4409                           	callstack 28
  4410                           
  4411                           ;incstack = 0
  4412                           ;I2C_Read@flag stored from wreg
  4413  00193C  6E01               	movwf	I2C_Read@flag^0,c
  4414  00193E                     
  4415                           ;./I2C_Master_File_1.h: 33: char I2C_Read(char flag);./I2C_Master_File_1.h: 35: {;./I2C_
      +                          Master_File_1.h: 36:         char buffer;;./I2C_Master_File_1.h: 37:         RCEN = 1;
  4416  00193E  86C5               	bsf	4037,3,c	;volatile
  4417  001940                     l188:
  4418  001940  A0C7               	btfss	199,0,c	;volatile
  4419  001942  EFA5  F00C         	goto	u1731
  4420  001946  EFA7  F00C         	goto	u1730
  4421  00194A                     u1731:
  4422  00194A  EFA0  F00C         	goto	l188
  4423  00194E                     u1730:
  4424  00194E                     
  4425                           ;./I2C_Master_File_1.h: 40:         buffer = SSPBUF;
  4426  00194E  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  4427  001952                     
  4428                           ;./I2C_Master_File_1.h: 42:         if(flag==0)
  4429  001952  5001               	movf	I2C_Read@flag^0,w,c
  4430  001954  A4D8               	btfss	status,2,c
  4431  001956  EFAF  F00C         	goto	u1741
  4432  00195A  EFB1  F00C         	goto	u1740
  4433  00195E                     u1741:
  4434  00195E  EFB5  F00C         	goto	l2484
  4435  001962                     u1740:
  4436  001962                     
  4437                           ;./I2C_Master_File_1.h: 43:             I2C_Ack();
  4438  001962  ECEA  F00D         	call	_I2C_Ack	;wreg free
  4439  001966  EFB7  F00C         	goto	l192
  4440  00196A                     l2484:
  4441                           
  4442                           ;./I2C_Master_File_1.h: 45:             I2C_Nack();
  4443  00196A  ECE0  F00D         	call	_I2C_Nack	;wreg free
  4444  00196E                     l192:
  4445                           
  4446                           ;./I2C_Master_File_1.h: 46:         I2C_Ready();
  4447  00196E  ECFE  F00D         	call	_I2C_Ready	;wreg free
  4448  001972                     
  4449                           ;./I2C_Master_File_1.h: 47:         return(buffer);
  4450  001972  5002               	movf	I2C_Read@buffer^0,w,c
  4451  001974  0012               	return		;funcret
  4452  001976                     __end_of_I2C_Read:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function _I2C_Ready *****************
  4456 ;; Defined at:
  4457 ;;		line 64 in file "./I2C_Master_File_1.h"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;		None
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		None
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4471 ;;      Params:         0       0       0       0       0       0       0       0       0
  4472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4474 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4475 ;;Total ram usage:        0 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_I2C_Read
  4481 ;;		_I2C_Write
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text25
  4486  001BFC                     __ptext25:
  4487                           	callstack 0
  4488  001BFC                     _I2C_Ready:
  4489                           	callstack 28
  4490  001BFC                     l199:
  4491  001BFC  A69E               	btfss	3998,3,c	;volatile
  4492  001BFE  EF03  F00E         	goto	u1431
  4493  001C02  EF05  F00E         	goto	u1430
  4494  001C06                     u1431:
  4495  001C06  EFFE  F00D         	goto	l199
  4496  001C0A                     u1430:
  4497  001C0A                     
  4498                           ;./I2C_Master_File_1.h: 67:     SSPIF=0;
  4499  001C0A  969E               	bcf	3998,3,c	;volatile
  4500  001C0C  0012               	return		;funcret
  4501  001C0E                     __end_of_I2C_Ready:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function _I2C_Nack *****************
  4505 ;; Defined at:
  4506 ;;		line 139 in file "./I2C_Master_File_1.h"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		None
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4520 ;;      Params:         0       0       0       0       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4523 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_I2C_Read
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text26
  4534  001BC0                     __ptext26:
  4535                           	callstack 0
  4536  001BC0                     _I2C_Nack:
  4537                           	callstack 28
  4538  001BC0                     
  4539                           ;./I2C_Master_File_1.h: 141:     ACKDT=1;
  4540  001BC0  8AC5               	bsf	4037,5,c	;volatile
  4541                           
  4542                           ;./I2C_Master_File_1.h: 142:  ACKEN=1;
  4543  001BC2  88C5               	bsf	4037,4,c	;volatile
  4544  001BC4                     l250:
  4545  001BC4  B8C5               	btfsc	4037,4,c	;volatile
  4546  001BC6  EFE7  F00D         	goto	u1631
  4547  001BCA  EFE9  F00D         	goto	u1630
  4548  001BCE                     u1631:
  4549  001BCE  EFE2  F00D         	goto	l250
  4550  001BD2                     u1630:
  4551  001BD2  0012               	return		;funcret
  4552  001BD4                     __end_of_I2C_Nack:
  4553                           	callstack 0
  4554                           
  4555 ;; *************** function _I2C_Ack *****************
  4556 ;; Defined at:
  4557 ;;		line 132 in file "./I2C_Master_File_1.h"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		None
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4574 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4575 ;;Total ram usage:        0 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_I2C_Read
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text27
  4585  001BD4                     __ptext27:
  4586                           	callstack 0
  4587  001BD4                     _I2C_Ack:
  4588                           	callstack 28
  4589  001BD4                     
  4590                           ;./I2C_Master_File_1.h: 134:     ACKDT=0;
  4591  001BD4  9AC5               	bcf	4037,5,c	;volatile
  4592                           
  4593                           ;./I2C_Master_File_1.h: 135:  ACKEN=1;
  4594  001BD6  88C5               	bsf	4037,4,c	;volatile
  4595  001BD8                     l244:
  4596  001BD8  B8C5               	btfsc	4037,4,c	;volatile
  4597  001BDA  EFF1  F00D         	goto	u1621
  4598  001BDE  EFF3  F00D         	goto	u1620
  4599  001BE2                     u1621:
  4600  001BE2  EFEC  F00D         	goto	l244
  4601  001BE6                     u1620:
  4602  001BE6  0012               	return		;funcret
  4603  001BE8                     __end_of_I2C_Ack:
  4604                           	callstack 0
  4605                           
  4606 ;; *************** function _LCD_Init *****************
  4607 ;; Defined at:
  4608 ;;		line 13 in file "LCD_20x4.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;		None
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      void 
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0, cstack
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4622 ;;      Params:         0       0       0       0       0       0       0       0       0
  4623 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4625 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4626 ;;Total ram usage:        0 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    2
  4629 ;; This function calls:
  4630 ;;		_LCD_Command
  4631 ;;		_MSdelay
  4632 ;; This function is called by:
  4633 ;;		_main
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text28
  4638  0018C0                     __ptext28:
  4639                           	callstack 0
  4640  0018C0                     _LCD_Init:
  4641                           	callstack 28
  4642  0018C0                     
  4643                           ;LCD_20x4.c: 15:     TRISE = 0;
  4644  0018C0  0E00               	movlw	0
  4645  0018C2  6E96               	movwf	150,c	;volatile
  4646                           
  4647                           ;LCD_20x4.c: 16:  TRISD = 0;
  4648  0018C4  0E00               	movlw	0
  4649  0018C6  6E95               	movwf	149,c	;volatile
  4650  0018C8                     
  4651                           ;LCD_20x4.c: 18:  MSdelay(20);
  4652  0018C8  0E00               	movlw	0
  4653  0018CA  6E02               	movwf	(MSdelay@val+1)^0,c
  4654  0018CC  0E14               	movlw	20
  4655  0018CE  6E01               	movwf	MSdelay@val^0,c
  4656  0018D0  ECD2  F00B         	call	_MSdelay	;wreg free
  4657  0018D4                     
  4658                           ;LCD_20x4.c: 19:  LCD_Command (0x38);
  4659  0018D4  0E38               	movlw	56
  4660  0018D6  ECA4  F00D         	call	_LCD_Command
  4661  0018DA                     
  4662                           ;LCD_20x4.c: 20:  LCD_Command (0x0C);
  4663  0018DA  0E0C               	movlw	12
  4664  0018DC  ECA4  F00D         	call	_LCD_Command
  4665  0018E0                     
  4666                           ;LCD_20x4.c: 21:  LCD_Command (0x06);
  4667  0018E0  0E06               	movlw	6
  4668  0018E2  ECA4  F00D         	call	_LCD_Command
  4669  0018E6                     
  4670                           ;LCD_20x4.c: 22:  LCD_Command (0x01);
  4671  0018E6  0E01               	movlw	1
  4672  0018E8  ECA4  F00D         	call	_LCD_Command
  4673  0018EC                     
  4674                           ;LCD_20x4.c: 23:  MSdelay(3);
  4675  0018EC  0E00               	movlw	0
  4676  0018EE  6E02               	movwf	(MSdelay@val+1)^0,c
  4677  0018F0  0E03               	movlw	3
  4678  0018F2  6E01               	movwf	MSdelay@val^0,c
  4679  0018F4  ECD2  F00B         	call	_MSdelay	;wreg free
  4680  0018F8                     
  4681                           ;LCD_20x4.c: 24:  LCD_Command (0x80);
  4682  0018F8  0E80               	movlw	128
  4683  0018FA  ECA4  F00D         	call	_LCD_Command
  4684  0018FE  0012               	return		;funcret
  4685  001900                     __end_of_LCD_Init:
  4686                           	callstack 0
  4687                           
  4688 ;; *************** function _I2C_Init *****************
  4689 ;; Defined at:
  4690 ;;		line 50 in file "./I2C_Master_File_1.h"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;		None
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;		None
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4704 ;;      Params:         0       0       0       0       0       0       0       0       0
  4705 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4707 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4708 ;;Total ram usage:        0 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_main
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text29
  4718  001B64                     __ptext29:
  4719                           	callstack 0
  4720  001B64                     _I2C_Init:
  4721                           	callstack 30
  4722  001B64                     
  4723                           ;./I2C_Master_File_1.h: 52:     TRISB0=1;
  4724  001B64  8093               	bsf	3987,0,c	;volatile
  4725                           
  4726                           ;./I2C_Master_File_1.h: 53:  TRISB1=1;
  4727  001B66  8293               	bsf	3987,1,c	;volatile
  4728  001B68                     
  4729                           ;./I2C_Master_File_1.h: 54:  SSPSTAT=80;
  4730  001B68  0E50               	movlw	80
  4731  001B6A  6EC7               	movwf	199,c	;volatile
  4732                           
  4733                           ;./I2C_Master_File_1.h: 55:     SSPCON1=0x28;
  4734  001B6C  0E28               	movlw	40
  4735  001B6E  6EC6               	movwf	198,c	;volatile
  4736                           
  4737                           ;./I2C_Master_File_1.h: 57:  SSPCON2=0;
  4738  001B70  0E00               	movlw	0
  4739  001B72  6EC5               	movwf	197,c	;volatile
  4740                           
  4741                           ;./I2C_Master_File_1.h: 58:     SSPADD=((8000000/(4*100000))-1);
  4742  001B74  0E13               	movlw	19
  4743  001B76  6EC8               	movwf	200,c	;volatile
  4744  001B78                     
  4745                           ;./I2C_Master_File_1.h: 59:     SSPIE=1;
  4746  001B78  869D               	bsf	3997,3,c	;volatile
  4747  001B7A                     
  4748                           ;./I2C_Master_File_1.h: 60:     SSPIF=0;
  4749  001B7A  969E               	bcf	3998,3,c	;volatile
  4750  001B7C  0012               	return		;funcret
  4751  001B7E                     __end_of_I2C_Init:
  4752                           	callstack 0
  4753                           
  4754 ;; *************** function _ActivateAlarm *****************
  4755 ;; Defined at:
  4756 ;;		line 291 in file "Controler.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4770 ;;      Params:         0       0       0       0       0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4773 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4774 ;;Total ram usage:        0 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    4
  4777 ;; This function calls:
  4778 ;;		_LCD_Clear
  4779 ;;		_LCD_String_xy
  4780 ;;		_MSdelay
  4781 ;; This function is called by:
  4782 ;;		_main
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text30
  4787  0017EE                     __ptext30:
  4788                           	callstack 0
  4789  0017EE                     _ActivateAlarm:
  4790                           	callstack 26
  4791  0017EE                     
  4792                           ;Controler.c: 292:      LCD_String_xy(2,1,"ALARMA ACTIVADA");
  4793  0017EE  0E01               	movlw	1
  4794  0017F0  6E0A               	movwf	LCD_String_xy@pos^0,c
  4795  0017F2  0E14               	movlw	low STR_5
  4796  0017F4  6E0B               	movwf	LCD_String_xy@str^0,c
  4797  0017F6  0E08               	movlw	high STR_5
  4798  0017F8  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  4799  0017FA  0E02               	movlw	2
  4800  0017FC  ECA4  F00A         	call	_LCD_String_xy
  4801  001800                     
  4802                           ;Controler.c: 293:      MSdelay(100);
  4803  001800  0E00               	movlw	0
  4804  001802  6E02               	movwf	(MSdelay@val+1)^0,c
  4805  001804  0E64               	movlw	100
  4806  001806  6E01               	movwf	MSdelay@val^0,c
  4807  001808  ECD2  F00B         	call	_MSdelay	;wreg free
  4808  00180C                     
  4809                           ;Controler.c: 294:      LCD_Clear();
  4810  00180C  ECF4  F00D         	call	_LCD_Clear	;wreg free
  4811                           
  4812                           ;Controler.c: 295:      LCD_String_xy(0,12,"ALARMA:");
  4813  001810  0E0C               	movlw	12
  4814  001812  6E0A               	movwf	LCD_String_xy@pos^0,c
  4815  001814  0E24               	movlw	low STR_6
  4816  001816  6E0B               	movwf	LCD_String_xy@str^0,c
  4817  001818  0E08               	movlw	high STR_6
  4818  00181A  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  4819  00181C  0E00               	movlw	0
  4820  00181E  ECA4  F00A         	call	_LCD_String_xy
  4821                           
  4822                           ;Controler.c: 296:      LCD_String_xy(0,19,"ON");
  4823  001822  0E13               	movlw	19
  4824  001824  6E0A               	movwf	LCD_String_xy@pos^0,c
  4825  001826  0E4B               	movlw	low STR_7
  4826  001828  6E0B               	movwf	LCD_String_xy@str^0,c
  4827  00182A  0E08               	movlw	high STR_7
  4828  00182C  6E0C               	movwf	(LCD_String_xy@str+1)^0,c
  4829  00182E  0E00               	movlw	0
  4830  001830  ECA4  F00A         	call	_LCD_String_xy
  4831  001834  0012               	return		;funcret
  4832  001836                     __end_of_ActivateAlarm:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function _LCD_String_xy *****************
  4836 ;; Defined at:
  4837 ;;		line 85 in file "LCD_20x4.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  row             1    wreg     unsigned char 
  4840 ;;  pos             1    9[COMRAM] unsigned char 
  4841 ;;  str             2   10[COMRAM] PTR const unsigned char 
  4842 ;;		 -> STR_52(4), STR_51(4), STR_50(5), STR_49(4), 
  4843 ;;		 -> STR_48(4), STR_47(5), STR_46(4), STR_45(4), 
  4844 ;;		 -> STR_44(5), STR_43(4), STR_42(4), STR_41(5), 
  4845 ;;		 -> STR_40(4), STR_39(4), STR_38(5), STR_37(4), 
  4846 ;;		 -> STR_36(4), STR_35(5), STR_34(4), STR_33(4), 
  4847 ;;		 -> STR_32(5), STR_31(4), STR_30(4), STR_29(5), 
  4848 ;;		 -> STR_28(4), STR_27(4), STR_26(5), STR_25(4), 
  4849 ;;		 -> STR_24(4), STR_23(5), STR_22(4), STR_21(4), 
  4850 ;;		 -> STR_20(5), STR_19(4), STR_18(4), STR_17(5), 
  4851 ;;		 -> STR_16(4), STR_15(4), STR_14(5), STR_13(4), 
  4852 ;;		 -> STR_12(4), STR_11(5), STR_10(4), STR_9(4), 
  4853 ;;		 -> STR_8(5), STR_7(3), STR_6(8), STR_5(16), 
  4854 ;;		 -> STR_4(19), 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  row             1   12[COMRAM] unsigned char 
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4866 ;;      Params:         3       0       0       0       0       0       0       0       0
  4867 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4869 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4870 ;;Total ram usage:        4 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    3
  4873 ;; This function calls:
  4874 ;;		_LCD_Command
  4875 ;;		_LCD_String
  4876 ;; This function is called by:
  4877 ;;		_desactivarAlarm
  4878 ;;		_ActivateAlarm
  4879 ;;		_protocoloFDS
  4880 ;;		_protocoloProtocoloDia
  4881 ;;		_protocoloNoche
  4882 ;;		_SensorMovimiento
  4883 ;;		_protocoloEmergencia
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text31
  4888  001548                     __ptext31:
  4889                           	callstack 0
  4890  001548                     _LCD_String_xy:
  4891                           	callstack 26
  4892                           
  4893                           ;incstack = 0
  4894                           ;LCD_String_xy@row stored from wreg
  4895  001548  6E0D               	movwf	LCD_String_xy@row^0,c
  4896  00154A                     
  4897                           ;LCD_20x4.c: 85: void LCD_String_xy(char row,char pos,const char *str);LCD_20x4.c: 86: {
      +                          ;LCD_20x4.c: 87:     if (row == 1)
  4898  00154A  040D               	decf	LCD_String_xy@row^0,w,c
  4899  00154C  A4D8               	btfss	status,2,c
  4900  00154E  EFAB  F00A         	goto	u1691
  4901  001552  EFAD  F00A         	goto	u1690
  4902  001556                     u1691:
  4903  001556  EFB4  F00A         	goto	l2464
  4904  00155A                     u1690:
  4905  00155A                     
  4906                           ;LCD_20x4.c: 88:   LCD_Command((pos & 0x0F)|0x80);
  4907  00155A  500A               	movf	LCD_String_xy@pos^0,w,c
  4908  00155C  0B0F               	andlw	15
  4909  00155E  0980               	iorlw	128
  4910  001560  ECA4  F00D         	call	_LCD_Command
  4911  001564  EFE4  F00A         	goto	l2476
  4912  001568                     l2464:
  4913  001568  0E02               	movlw	2
  4914  00156A  180D               	xorwf	LCD_String_xy@row^0,w,c
  4915  00156C  A4D8               	btfss	status,2,c
  4916  00156E  EFBB  F00A         	goto	u1701
  4917  001572  EFBD  F00A         	goto	u1700
  4918  001576                     u1701:
  4919  001576  EFC4  F00A         	goto	l2468
  4920  00157A                     u1700:
  4921  00157A                     
  4922                           ;LCD_20x4.c: 90:   LCD_Command((pos & 0x0F)|0xC0);
  4923  00157A  500A               	movf	LCD_String_xy@pos^0,w,c
  4924  00157C  0B0F               	andlw	15
  4925  00157E  09C0               	iorlw	192
  4926  001580  ECA4  F00D         	call	_LCD_Command
  4927  001584  EFE4  F00A         	goto	l2476
  4928  001588                     l2468:
  4929  001588  0E03               	movlw	3
  4930  00158A  180D               	xorwf	LCD_String_xy@row^0,w,c
  4931  00158C  A4D8               	btfss	status,2,c
  4932  00158E  EFCB  F00A         	goto	u1711
  4933  001592  EFCD  F00A         	goto	u1710
  4934  001596                     u1711:
  4935  001596  EFD4  F00A         	goto	l2472
  4936  00159A                     u1710:
  4937  00159A                     
  4938                           ;LCD_20x4.c: 92:   LCD_Command((pos & 0x0F)|0x94);
  4939  00159A  500A               	movf	LCD_String_xy@pos^0,w,c
  4940  00159C  0B0F               	andlw	15
  4941  00159E  0994               	iorlw	148
  4942  0015A0  ECA4  F00D         	call	_LCD_Command
  4943  0015A4  EFE4  F00A         	goto	l2476
  4944  0015A8                     l2472:
  4945  0015A8  0E04               	movlw	4
  4946  0015AA  180D               	xorwf	LCD_String_xy@row^0,w,c
  4947  0015AC  A4D8               	btfss	status,2,c
  4948  0015AE  EFDB  F00A         	goto	u1721
  4949  0015B2  EFDD  F00A         	goto	u1720
  4950  0015B6                     u1721:
  4951  0015B6  EFE4  F00A         	goto	l67
  4952  0015BA                     u1720:
  4953  0015BA                     
  4954                           ;LCD_20x4.c: 94:   LCD_Command((pos & 0x0F)|0xD4);
  4955  0015BA  500A               	movf	LCD_String_xy@pos^0,w,c
  4956  0015BC  0B0F               	andlw	15
  4957  0015BE  09D4               	iorlw	212
  4958  0015C0  ECA4  F00D         	call	_LCD_Command
  4959  0015C4  EFE4  F00A         	goto	l2476
  4960  0015C8                     l67:
  4961  0015C8                     l2476:
  4962                           
  4963                           ;LCD_20x4.c: 95:  LCD_String(str);
  4964  0015C8  C00B  F008         	movff	LCD_String_xy@str,LCD_String@msg
  4965  0015CC  C00C  F009         	movff	LCD_String_xy@str+1,LCD_String@msg+1
  4966  0015D0  EC0E  F00D         	call	_LCD_String	;wreg free
  4967  0015D4  0012               	return		;funcret
  4968  0015D6                     __end_of_LCD_String_xy:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function _LCD_String *****************
  4972 ;; Defined at:
  4973 ;;		line 72 in file "LCD_20x4.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  4976 ;;		 -> STR_52(4), STR_51(4), STR_50(5), STR_49(4), 
  4977 ;;		 -> STR_48(4), STR_47(5), STR_46(4), STR_45(4), 
  4978 ;;		 -> STR_44(5), STR_43(4), STR_42(4), STR_41(5), 
  4979 ;;		 -> STR_40(4), STR_39(4), STR_38(5), STR_37(4), 
  4980 ;;		 -> STR_36(4), STR_35(5), STR_34(4), STR_33(4), 
  4981 ;;		 -> STR_32(5), STR_31(4), STR_30(4), STR_29(5), 
  4982 ;;		 -> STR_28(4), STR_27(4), STR_26(5), STR_25(4), 
  4983 ;;		 -> STR_24(4), STR_23(5), STR_22(4), STR_21(4), 
  4984 ;;		 -> STR_20(5), STR_19(4), STR_18(4), STR_17(5), 
  4985 ;;		 -> STR_16(4), STR_15(4), STR_14(5), STR_13(4), 
  4986 ;;		 -> STR_12(4), STR_11(5), STR_10(4), STR_9(4), 
  4987 ;;		 -> STR_8(5), STR_7(3), STR_6(8), STR_5(16), 
  4988 ;;		 -> STR_4(19), 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5000 ;;      Params:         2       0       0       0       0       0       0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5003 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5004 ;;Total ram usage:        2 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    2
  5007 ;; This function calls:
  5008 ;;		_LCD_Char
  5009 ;; This function is called by:
  5010 ;;		_LCD_String_xy
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text32
  5015  001A1C                     __ptext32:
  5016                           	callstack 0
  5017  001A1C                     _LCD_String:
  5018                           	callstack 26
  5019  001A1C                     
  5020                           ;LCD_20x4.c: 72: void LCD_String(const char *msg);LCD_20x4.c: 73: {;LCD_20x4.c: 74:  whi
      +                          le((*msg)!=0)
  5021  001A1C  EF1A  F00D         	goto	l2390
  5022  001A20                     l2386:
  5023                           
  5024                           ;LCD_20x4.c: 75:  {;LCD_20x4.c: 76:    LCD_Char(*msg);
  5025  001A20  C008  FFF6         	movff	LCD_String@msg,tblptrl
  5026  001A24  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  5027  001A28                     	if	0	;tblptru may be non-zero
  5028  001A28                     	endif
  5029  001A28                     	if	0	;tblptru may be non-zero
  5030  001A28                     	endif
  5031  001A28  0008               	tblrd		*
  5032  001A2A  50F5               	movf	tablat,w,c
  5033  001A2C  EC96  F00D         	call	_LCD_Char
  5034  001A30                     
  5035                           ;LCD_20x4.c: 77:    msg++;
  5036  001A30  4A08               	infsnz	LCD_String@msg^0,f,c
  5037  001A32  2A09               	incf	(LCD_String@msg+1)^0,f,c
  5038  001A34                     l2390:
  5039                           
  5040                           ;LCD_20x4.c: 74:  while((*msg)!=0)
  5041  001A34  C008  FFF6         	movff	LCD_String@msg,tblptrl
  5042  001A38  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
  5043  001A3C                     	if	0	;tblptru may be non-zero
  5044  001A3C                     	endif
  5045  001A3C                     	if	0	;tblptru may be non-zero
  5046  001A3C                     	endif
  5047  001A3C  0008               	tblrd		*
  5048  001A3E  50F5               	movf	tablat,w,c
  5049  001A40  0900               	iorlw	0
  5050  001A42  A4D8               	btfss	status,2,c
  5051  001A44  EF26  F00D         	goto	u1611
  5052  001A48  EF28  F00D         	goto	u1610
  5053  001A4C                     u1611:
  5054  001A4C  EF10  F00D         	goto	l2386
  5055  001A50                     u1610:
  5056  001A50  0012               	return		;funcret
  5057  001A52                     __end_of_LCD_String:
  5058                           	callstack 0
  5059                           
  5060 ;; *************** function _LCD_Char *****************
  5061 ;; Defined at:
  5062 ;;		line 57 in file "LCD_20x4.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;  char_data       1    wreg     unsigned char 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  char_data       1    6[COMRAM] unsigned char 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5076 ;;      Params:         0       0       0       0       0       0       0       0       0
  5077 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5079 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5080 ;;Total ram usage:        1 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    1
  5083 ;; This function calls:
  5084 ;;		_MSdelay
  5085 ;; This function is called by:
  5086 ;;		_LCD_String
  5087 ;;		_LCD_Custom_Char
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text33
  5092  001B2C                     __ptext33:
  5093                           	callstack 0
  5094  001B2C                     _LCD_Char:
  5095                           	callstack 26
  5096                           
  5097                           ;incstack = 0
  5098                           ;LCD_Char@char_data stored from wreg
  5099  001B2C  6E07               	movwf	LCD_Char@char_data^0,c
  5100  001B2E                     
  5101                           ;LCD_20x4.c: 57: void LCD_Char(char char_data);LCD_20x4.c: 58: {;LCD_20x4.c: 59:  LATD =
      +                           char_data;
  5102  001B2E  C007  FF8C         	movff	LCD_Char@char_data,3980	;volatile
  5103  001B32                     
  5104                           ;LCD_20x4.c: 60:  LATE1 = 1;
  5105  001B32  828D               	bsf	3981,1,c	;volatile
  5106  001B34                     
  5107                           ;LCD_20x4.c: 62:     LATE2 = 1;
  5108  001B34  848D               	bsf	3981,2,c	;volatile
  5109  001B36                     
  5110                           ;LCD_20x4.c: 63:  __nop();
  5111  001B36  F000               	nop	
  5112  001B38                     
  5113                           ;LCD_20x4.c: 64:  LATE2 = 0;
  5114  001B38  948D               	bcf	3981,2,c	;volatile
  5115  001B3A                     
  5116                           ;LCD_20x4.c: 65:  MSdelay(3);
  5117  001B3A  0E00               	movlw	0
  5118  001B3C  6E02               	movwf	(MSdelay@val+1)^0,c
  5119  001B3E  0E03               	movlw	3
  5120  001B40  6E01               	movwf	MSdelay@val^0,c
  5121  001B42  ECD2  F00B         	call	_MSdelay	;wreg free
  5122  001B46  0012               	return		;funcret
  5123  001B48                     __end_of_LCD_Char:
  5124                           	callstack 0
  5125                           
  5126 ;; *************** function _LCD_Clear *****************
  5127 ;; Defined at:
  5128 ;;		line 31 in file "LCD_20x4.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;		None
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;		None
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  1    wreg      void 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0, cstack
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5142 ;;      Params:         0       0       0       0       0       0       0       0       0
  5143 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5144 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5145 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5146 ;;Total ram usage:        0 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; Hardware stack levels required when called:    2
  5149 ;; This function calls:
  5150 ;;		_LCD_Command
  5151 ;;		_MSdelay
  5152 ;; This function is called by:
  5153 ;;		_main
  5154 ;;		_desactivarAlarm
  5155 ;;		_ActivateAlarm
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text34
  5160  001BE8                     __ptext34:
  5161                           	callstack 0
  5162  001BE8                     _LCD_Clear:
  5163                           	callstack 27
  5164  001BE8                     
  5165                           ;LCD_20x4.c: 33:      LCD_Command (0x01);
  5166  001BE8  0E01               	movlw	1
  5167  001BEA  ECA4  F00D         	call	_LCD_Command
  5168                           
  5169                           ;LCD_20x4.c: 34:         MSdelay(3);
  5170  001BEE  0E00               	movlw	0
  5171  001BF0  6E02               	movwf	(MSdelay@val+1)^0,c
  5172  001BF2  0E03               	movlw	3
  5173  001BF4  6E01               	movwf	MSdelay@val^0,c
  5174  001BF6  ECD2  F00B         	call	_MSdelay	;wreg free
  5175  001BFA  0012               	return		;funcret
  5176  001BFC                     __end_of_LCD_Clear:
  5177                           	callstack 0
  5178                           
  5179 ;; *************** function _LCD_Command *****************
  5180 ;; Defined at:
  5181 ;;		line 43 in file "LCD_20x4.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  cmd             1    wreg     unsigned char 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  cmd             1    6[COMRAM] unsigned char 
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5195 ;;      Params:         0       0       0       0       0       0       0       0       0
  5196 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5198 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5199 ;;Total ram usage:        1 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    1
  5202 ;; This function calls:
  5203 ;;		_MSdelay
  5204 ;; This function is called by:
  5205 ;;		_LCD_Init
  5206 ;;		_LCD_Clear
  5207 ;;		_LCD_String_xy
  5208 ;;		_LCD_Custom_Char
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text35
  5213  001B48                     __ptext35:
  5214                           	callstack 0
  5215  001B48                     _LCD_Command:
  5216                           	callstack 27
  5217                           
  5218                           ;incstack = 0
  5219                           ;LCD_Command@cmd stored from wreg
  5220  001B48  6E07               	movwf	LCD_Command@cmd^0,c
  5221  001B4A                     
  5222                           ;LCD_20x4.c: 43: void LCD_Command(char cmd );LCD_20x4.c: 44: {;LCD_20x4.c: 45:  LATD = c
      +                          md;
  5223  001B4A  C007  FF8C         	movff	LCD_Command@cmd,3980	;volatile
  5224  001B4E                     
  5225                           ;LCD_20x4.c: 46:  LATE1 = 0;
  5226  001B4E  928D               	bcf	3981,1,c	;volatile
  5227  001B50                     
  5228                           ;LCD_20x4.c: 48:     LATE2 = 1;
  5229  001B50  848D               	bsf	3981,2,c	;volatile
  5230  001B52                     
  5231                           ;LCD_20x4.c: 49:  __nop();
  5232  001B52  F000               	nop	
  5233  001B54                     
  5234                           ;LCD_20x4.c: 50:  LATE2 = 0;
  5235  001B54  948D               	bcf	3981,2,c	;volatile
  5236  001B56                     
  5237                           ;LCD_20x4.c: 51:  MSdelay(3);
  5238  001B56  0E00               	movlw	0
  5239  001B58  6E02               	movwf	(MSdelay@val+1)^0,c
  5240  001B5A  0E03               	movlw	3
  5241  001B5C  6E01               	movwf	MSdelay@val^0,c
  5242  001B5E  ECD2  F00B         	call	_MSdelay	;wreg free
  5243  001B62  0012               	return		;funcret
  5244  001B64                     __end_of_LCD_Command:
  5245                           	callstack 0
  5246                           
  5247 ;; *************** function _MSdelay *****************
  5248 ;; Defined at:
  5249 ;;		line 119 in file "LCD_20x4.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;  val             2    0[COMRAM] unsigned int 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  j               2    4[COMRAM] unsigned int 
  5254 ;;  i               2    2[COMRAM] unsigned int 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5264 ;;      Params:         2       0       0       0       0       0       0       0       0
  5265 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5267 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5268 ;;Total ram usage:        6 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_LCD_Init
  5274 ;;		_LCD_Clear
  5275 ;;		_LCD_Command
  5276 ;;		_LCD_Char
  5277 ;;		_main
  5278 ;;		_desactivarAlarm
  5279 ;;		_ActivateAlarm
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text36
  5284  0017A4                     __ptext36:
  5285                           	callstack 0
  5286  0017A4                     _MSdelay:
  5287                           	callstack 26
  5288  0017A4                     
  5289                           ;LCD_20x4.c: 119: void MSdelay(unsigned int val);LCD_20x4.c: 120: {;LCD_20x4.c: 121:    
      +                            unsigned int i,j;;LCD_20x4.c: 122:         for(i=0;i<=val;i++)
  5290  0017A4  0E00               	movlw	0
  5291  0017A6  6E04               	movwf	(MSdelay@i+1)^0,c
  5292  0017A8  0E00               	movlw	0
  5293  0017AA  6E03               	movwf	MSdelay@i^0,c
  5294  0017AC  EFEB  F00B         	goto	l2250
  5295  0017B0                     l2238:
  5296                           
  5297                           ;LCD_20x4.c: 123:             for(j=0;j<165;j++);
  5298  0017B0  0E00               	movlw	0
  5299  0017B2  6E06               	movwf	(MSdelay@j+1)^0,c
  5300  0017B4  0E00               	movlw	0
  5301  0017B6  6E05               	movwf	MSdelay@j^0,c
  5302  0017B8                     l2244:
  5303  0017B8  4A05               	infsnz	MSdelay@j^0,f,c
  5304  0017BA  2A06               	incf	(MSdelay@j+1)^0,f,c
  5305  0017BC  5006               	movf	(MSdelay@j+1)^0,w,c
  5306  0017BE  E109               	bnz	u1300
  5307  0017C0  0EA5               	movlw	165
  5308  0017C2  5C05               	subwf	MSdelay@j^0,w,c
  5309  0017C4  A0D8               	btfss	status,0,c
  5310  0017C6  EFE7  F00B         	goto	u1301
  5311  0017CA  EFE9  F00B         	goto	u1300
  5312  0017CE                     u1301:
  5313  0017CE  EFDC  F00B         	goto	l2244
  5314  0017D2                     u1300:
  5315  0017D2  4A03               	infsnz	MSdelay@i^0,f,c
  5316  0017D4  2A04               	incf	(MSdelay@i+1)^0,f,c
  5317  0017D6                     l2250:
  5318  0017D6  5003               	movf	MSdelay@i^0,w,c
  5319  0017D8  5C01               	subwf	MSdelay@val^0,w,c
  5320  0017DA  5004               	movf	(MSdelay@i+1)^0,w,c
  5321  0017DC  5802               	subwfb	(MSdelay@val+1)^0,w,c
  5322  0017DE  B0D8               	btfsc	status,0,c
  5323  0017E0  EFF4  F00B         	goto	u1311
  5324  0017E4  EFF6  F00B         	goto	u1310
  5325  0017E8                     u1311:
  5326  0017E8  EFD8  F00B         	goto	l2238
  5327  0017EC                     u1310:
  5328  0017EC  0012               	return		;funcret
  5329  0017EE                     __end_of_MSdelay:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function _ADC_Init *****************
  5333 ;; Defined at:
  5334 ;;		line 5 in file "PIC18F4550_ADC_Source_File.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;		None
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5348 ;;      Params:         0       0       0       0       0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5351 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5352 ;;Total ram usage:        0 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_main
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text37
  5362  001B7E                     __ptext37:
  5363                           	callstack 0
  5364  001B7E                     _ADC_Init:
  5365                           	callstack 30
  5366  001B7E                     
  5367                           ;PIC18F4550_ADC_Source_File.c: 11:     TRISA = 0xff;
  5368  001B7E  6892               	setf	146,c	;volatile
  5369  001B80                     
  5370                           ;PIC18F4550_ADC_Source_File.c: 12:     ADCON0 = 0x85;
  5371  001B80  0E85               	movlw	133
  5372  001B82  6EC2               	movwf	194,c	;volatile
  5373                           
  5374                           ;PIC18F4550_ADC_Source_File.c: 13:     ADCON1 = 0xC0;
  5375  001B84  0EC0               	movlw	192
  5376  001B86  6EC1               	movwf	193,c	;volatile
  5377                           
  5378                           ;PIC18F4550_ADC_Source_File.c: 14:     ADCON2 = 0x92;
  5379  001B88  0E92               	movlw	146
  5380  001B8A  6EC0               	movwf	192,c	;volatile
  5381                           
  5382                           ;PIC18F4550_ADC_Source_File.c: 15:     ADRESH = 0;
  5383  001B8C  0E00               	movlw	0
  5384  001B8E  6EC4               	movwf	196,c	;volatile
  5385                           
  5386                           ;PIC18F4550_ADC_Source_File.c: 16:     ADRESL = 0;
  5387  001B90  0E00               	movlw	0
  5388  001B92  6EC3               	movwf	195,c	;volatile
  5389  001B94  0012               	return		;funcret
  5390  001B96                     __end_of_ADC_Init:
  5391                           	callstack 0
  5392                           
  5393                           	psect	rparam
  5394  0000                     
  5395                           	psect	idloc
  5396                           
  5397                           ;Config register IDLOC0 @ 0x200000
  5398                           ;	unspecified, using default values
  5399  200000                     	org	2097152
  5400  200000  FF                 	db	255
  5401                           
  5402                           ;Config register IDLOC1 @ 0x200001
  5403                           ;	unspecified, using default values
  5404  200001                     	org	2097153
  5405  200001  FF                 	db	255
  5406                           
  5407                           ;Config register IDLOC2 @ 0x200002
  5408                           ;	unspecified, using default values
  5409  200002                     	org	2097154
  5410  200002  FF                 	db	255
  5411                           
  5412                           ;Config register IDLOC3 @ 0x200003
  5413                           ;	unspecified, using default values
  5414  200003                     	org	2097155
  5415  200003  FF                 	db	255
  5416                           
  5417                           ;Config register IDLOC4 @ 0x200004
  5418                           ;	unspecified, using default values
  5419  200004                     	org	2097156
  5420  200004  FF                 	db	255
  5421                           
  5422                           ;Config register IDLOC5 @ 0x200005
  5423                           ;	unspecified, using default values
  5424  200005                     	org	2097157
  5425  200005  FF                 	db	255
  5426                           
  5427                           ;Config register IDLOC6 @ 0x200006
  5428                           ;	unspecified, using default values
  5429  200006                     	org	2097158
  5430  200006  FF                 	db	255
  5431                           
  5432                           ;Config register IDLOC7 @ 0x200007
  5433                           ;	unspecified, using default values
  5434  200007                     	org	2097159
  5435  200007  FF                 	db	255
  5436                           
  5437                           	psect	config
  5438                           
  5439                           ;Config register CONFIG1L @ 0x300000
  5440                           ;	PLL Prescaler Selection bits
  5441                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  5442                           ;	System Clock Postscaler Selection bits
  5443                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  5444                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5445                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  5446  300000                     	org	3145728
  5447  300000  00                 	db	0
  5448                           
  5449                           ;Config register CONFIG1H @ 0x300001
  5450                           ;	Oscillator Selection bits
  5451                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5452                           ;	Fail-Safe Clock Monitor Enable bit
  5453                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5454                           ;	Internal/External Oscillator Switchover bit
  5455                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5456  300001                     	org	3145729
  5457  300001  09                 	db	9
  5458                           
  5459                           ;Config register CONFIG2L @ 0x300002
  5460                           ;	Power-up Timer Enable bit
  5461                           ;	PWRT = OFF, PWRT disabled
  5462                           ;	Brown-out Reset Enable bits
  5463                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5464                           ;	Brown-out Reset Voltage bits
  5465                           ;	BORV = 3, Minimum setting 2.05V
  5466                           ;	USB Voltage Regulator Enable bit
  5467                           ;	VREGEN = OFF, USB voltage regulator disabled
  5468  300002                     	org	3145730
  5469  300002  19                 	db	25
  5470                           
  5471                           ;Config register CONFIG2H @ 0x300003
  5472                           ;	Watchdog Timer Enable bit
  5473                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5474                           ;	Watchdog Timer Postscale Select bits
  5475                           ;	WDTPS = 32768, 1:32768
  5476  300003                     	org	3145731
  5477  300003  1E                 	db	30
  5478                           
  5479                           ; Padding undefined space
  5480  300004                     	org	3145732
  5481  300004  FF                 	db	255
  5482                           
  5483                           ;Config register CONFIG3H @ 0x300005
  5484                           ;	CCP2 MUX bit
  5485                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5486                           ;	PORTB A/D Enable bit
  5487                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5488                           ;	Low-Power Timer 1 Oscillator Enable bit
  5489                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5490                           ;	MCLR Pin Enable bit
  5491                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  5492  300005                     	org	3145733
  5493  300005  01                 	db	1
  5494                           
  5495                           ;Config register CONFIG4L @ 0x300006
  5496                           ;	Stack Full/Underflow Reset Enable bit
  5497                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5498                           ;	Single-Supply ICSP Enable bit
  5499                           ;	LVP = OFF, Single-Supply ICSP disabled
  5500                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5501                           ;	ICPRT = OFF, ICPORT disabled
  5502                           ;	Extended Instruction Set Enable bit
  5503                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5504                           ;	Background Debugger Enable bit
  5505                           ;	DEBUG = 0x1, unprogrammed default
  5506  300006                     	org	3145734
  5507  300006  81                 	db	129
  5508                           
  5509                           ; Padding undefined space
  5510  300007                     	org	3145735
  5511  300007  FF                 	db	255
  5512                           
  5513                           ;Config register CONFIG5L @ 0x300008
  5514                           ;	Code Protection bit
  5515                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5516                           ;	Code Protection bit
  5517                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5518                           ;	Code Protection bit
  5519                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5520                           ;	Code Protection bit
  5521                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5522  300008                     	org	3145736
  5523  300008  0F                 	db	15
  5524                           
  5525                           ;Config register CONFIG5H @ 0x300009
  5526                           ;	Boot Block Code Protection bit
  5527                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5528                           ;	Data EEPROM Code Protection bit
  5529                           ;	CPD = OFF, Data EEPROM is not code-protected
  5530  300009                     	org	3145737
  5531  300009  C0                 	db	192
  5532                           
  5533                           ;Config register CONFIG6L @ 0x30000A
  5534                           ;	Write Protection bit
  5535                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5536                           ;	Write Protection bit
  5537                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5538                           ;	Write Protection bit
  5539                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5540                           ;	Write Protection bit
  5541                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5542  30000A                     	org	3145738
  5543  30000A  0F                 	db	15
  5544                           
  5545                           ;Config register CONFIG6H @ 0x30000B
  5546                           ;	Configuration Register Write Protection bit
  5547                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5548                           ;	Boot Block Write Protection bit
  5549                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5550                           ;	Data EEPROM Write Protection bit
  5551                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5552  30000B                     	org	3145739
  5553  30000B  E0                 	db	224
  5554                           
  5555                           ;Config register CONFIG7L @ 0x30000C
  5556                           ;	Table Read Protection bit
  5557                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5558                           ;	Table Read Protection bit
  5559                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5560                           ;	Table Read Protection bit
  5561                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5562                           ;	Table Read Protection bit
  5563                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5564  30000C                     	org	3145740
  5565  30000C  0F                 	db	15
  5566                           
  5567                           ;Config register CONFIG7H @ 0x30000D
  5568                           ;	Boot Block Table Read Protection bit
  5569                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5570  30000D                     	org	3145741
  5571  30000D  40                 	db	64
  5572                           tosu	equ	0xFFF
  5573                           tosh	equ	0xFFE
  5574                           tosl	equ	0xFFD
  5575                           stkptr	equ	0xFFC
  5576                           pclatu	equ	0xFFB
  5577                           pclath	equ	0xFFA
  5578                           pcl	equ	0xFF9
  5579                           tblptru	equ	0xFF8
  5580                           tblptrh	equ	0xFF7
  5581                           tblptrl	equ	0xFF6
  5582                           tablat	equ	0xFF5
  5583                           prodh	equ	0xFF4
  5584                           prodl	equ	0xFF3
  5585                           indf0	equ	0xFEF
  5586                           postinc0	equ	0xFEE
  5587                           postdec0	equ	0xFED
  5588                           preinc0	equ	0xFEC
  5589                           plusw0	equ	0xFEB
  5590                           fsr0h	equ	0xFEA
  5591                           fsr0l	equ	0xFE9
  5592                           wreg	equ	0xFE8
  5593                           indf1	equ	0xFE7
  5594                           postinc1	equ	0xFE6
  5595                           postdec1	equ	0xFE5
  5596                           preinc1	equ	0xFE4
  5597                           plusw1	equ	0xFE3
  5598                           fsr1h	equ	0xFE2
  5599                           fsr1l	equ	0xFE1
  5600                           bsr	equ	0xFE0
  5601                           indf2	equ	0xFDF
  5602                           postinc2	equ	0xFDE
  5603                           postdec2	equ	0xFDD
  5604                           preinc2	equ	0xFDC
  5605                           plusw2	equ	0xFDB
  5606                           fsr2h	equ	0xFDA
  5607                           fsr2l	equ	0xFD9
  5608                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    0
    Data        68
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     57     149
    BANK1           256      0      53
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@hours(BANK0[10]), main@mins(BANK0[10]), main@secs(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@hours(BANK0[10]), main@mins(BANK0[10]), main@secs(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1426_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@hours(BANK0[10]), main@mins(BANK0[10]), main@secs(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@hours(BANK0[10]), main@mins(BANK0[10]), main@secs(BANK0[10]), 

    LCD_String_xy@str	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_50(CODE[5]), STR_49(CODE[4]), 
		 -> STR_48(CODE[4]), STR_47(CODE[5]), STR_46(CODE[4]), STR_45(CODE[4]), 
		 -> STR_44(CODE[5]), STR_43(CODE[4]), STR_42(CODE[4]), STR_41(CODE[5]), 
		 -> STR_40(CODE[4]), STR_39(CODE[4]), STR_38(CODE[5]), STR_37(CODE[4]), 
		 -> STR_36(CODE[4]), STR_35(CODE[5]), STR_34(CODE[4]), STR_33(CODE[4]), 
		 -> STR_32(CODE[5]), STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[5]), 
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_26(CODE[5]), STR_25(CODE[4]), 
		 -> STR_24(CODE[4]), STR_23(CODE[5]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> STR_20(CODE[5]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[5]), 
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[5]), STR_13(CODE[4]), 
		 -> STR_12(CODE[4]), STR_11(CODE[5]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[5]), STR_7(CODE[3]), STR_6(CODE[8]), STR_5(CODE[16]), 
		 -> STR_4(CODE[19]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_52(CODE[4]), STR_51(CODE[4]), STR_50(CODE[5]), STR_49(CODE[4]), 
		 -> STR_48(CODE[4]), STR_47(CODE[5]), STR_46(CODE[4]), STR_45(CODE[4]), 
		 -> STR_44(CODE[5]), STR_43(CODE[4]), STR_42(CODE[4]), STR_41(CODE[5]), 
		 -> STR_40(CODE[4]), STR_39(CODE[4]), STR_38(CODE[5]), STR_37(CODE[4]), 
		 -> STR_36(CODE[4]), STR_35(CODE[5]), STR_34(CODE[4]), STR_33(CODE[4]), 
		 -> STR_32(CODE[5]), STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[5]), 
		 -> STR_28(CODE[4]), STR_27(CODE[4]), STR_26(CODE[5]), STR_25(CODE[4]), 
		 -> STR_24(CODE[4]), STR_23(CODE[5]), STR_22(CODE[4]), STR_21(CODE[4]), 
		 -> STR_20(CODE[5]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[5]), 
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_14(CODE[5]), STR_13(CODE[4]), 
		 -> STR_12(CODE[4]), STR_11(CODE[5]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> STR_8(CODE[5]), STR_7(CODE[3]), STR_6(CODE[8]), STR_5(CODE[16]), 
		 -> STR_4(CODE[19]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _protocoloProtocoloDia->_LCD_String_xy
    _protocoloNoche->_LCD_String_xy
    _protocoloFDS->_LCD_String_xy
    _desactivarAlarm->_LCD_String_xy
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_Init->_LCD_Command
    _ActivateAlarm->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                74    74      0   61177
                                             93 COMRAM     2     2      0
                                             16 BANK0     41    41      0
                           _ADC_Init
                      _ActivateAlarm
                           _I2C_Init
                           _I2C_Stop
                          _LCD_Clear
                           _LCD_Init
                            _MSdelay
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                    _desactivarAlarm
                       _protocoloFDS
                     _protocoloNoche
              _protocoloProtocoloDia
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6711
                                              0 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6056
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5701
                                             66 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4263
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _protocoloProtocoloDia                                0     0      0    9211
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _protocoloNoche                                       4     4      0    9281
                                             13 COMRAM     4     4      0
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _protocoloFDS                                         4     4      0    9281
                                             13 COMRAM     4     4      0
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _desactivarAlarm                                      0     0      0   11333
                          _LCD_Clear
                      _LCD_String_xy
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1422
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ActivateAlarm                                        0     0      0   11333
                          _LCD_Clear
                      _LCD_String_xy
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     1      3    9211
                                              9 COMRAM     4     1      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     843
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     722
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0    1422
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     722
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2     700
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ActivateAlarm
     _LCD_Clear
       _LCD_Command
         _MSdelay
       _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
   _I2C_Init
   _I2C_Stop
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _MSdelay
   _RTC_Read_Calendar
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Stop
     _I2C_Write
       _I2C_Ready
   _RTC_Read_Clock
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Write
       _I2C_Ready
   _desactivarAlarm
     _LCD_Clear
       _LCD_Command
         _MSdelay
       _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _MSdelay
   _protocoloFDS
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
   _protocoloNoche
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
   _protocoloProtocoloDia
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      35       7       20.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     39      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     129      20        0.0%
DATA                 0      0     129       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Dec 13 23:39:52 2020

                   protocoloNoche@F3773 00EC                     protocoloNoche@F3775 00EB  
                    __size_of_I2C_Ready 0012                      __size_of_I2C_Start 002E  
                          ?_LCD_Command 0001                             _SSPSTATbits 000FC7  
                    __size_of_I2C_Write 0022                                      l21 1B94  
                                    l52 1B62                                      l61 1A50  
                                    l46 18FE                                      l55 1B46  
                                    l71 15D4                                      l49 1BFA  
                                    l67 15C8                                      l85 17EC  
                                    _GO 007E11                             ?_LCD_String 0008  
RTC_Read_Calendar@read_calendar_address 0004                                     l201 1C0A  
                                   l202 1C0C                                     l220 1AAE  
                                   l223 1AB4                                     l311 1750  
                                   l240 1B2A                                     l216 1A86  
                                   l232 1BAE                                     l225 1AC2  
                                   l250 1BC4                                     l218 1A94  
                                   l234 1BBC                                     l410 127A  
                                   l227 1ADC                                     l403 1232  
                                   l244 1BD8                                     l236 1BBE  
                                   l308 187A                                     l420 13A0  
                                   l253 1BD2                                     l413 12B8  
                                   l341 0DE2                                     l350 1834  
                                   l190 194E                                     l422 13B6  
                                   l247 1BE6                                     l192 196E  
                                   l440 10FA                                     l416 1308  
                                   l193 1974                                     l433 10B2  
                                   l425 100A                                     l417 131C  
                                   l418 1354                                     l347 1B08  
                                   l443 1138                                     l419 1368  
                                   l196 1B7C                                     l188 1940  
                                   l429 105E                                     l199 1BFC  
                                   l395 118A                                     l399 11DE  
                                   _PEN 007E2A                                     _Day 00E3  
                       __end_of_I2C_Ack 1BE8                                     _pad 1482  
                                   _min 00E7                                     _sec 00E9  
                                   wreg 000FE8                            _protocoloFDS 113A  
                                  l1203 1690                                    l1204 1698  
                                  l1124 17A2                                    l1213 19E4  
                                  l1207 193A                                    l2200 13B8  
                                  l1160 1546                                    l2210 143A  
                                  l2202 13CA                                    l1250 16EE  
                                  l1155 14C8                                    l2300 1B38  
                                  l1228 1480                                    l2204 13DC  
                                  l1236 18BE                                    l2220 189E  
                                  l1245 1A1A                                    l1261 19AC  
                                  l1165 088A                                    l2302 1B3A  
                                  l2206 13E6                                    l2214 187C  
                                  l2222 19E6                                    l1158 150A  
                                  l1190 0B2A                                    l1174 0928  
                                  l2310 0864                                    l1239 1C0E  
                                  l1255 16F6                                    l1167 0892  
                                  l2304 1BFC                                    l2400 1B14  
                                  l2208 1404                                    l2216 1888  
                                  l2224 19F2                                    l2232 1976  
                                  l2320 08D8                                    l2312 087E  
                                  l2250 17D6                                    l2402 1B22  
                                  l2218 189A                                    l2226 19F6  
                                  l2330 091C                                    l2322 08E2  
                                  l2314 08A8                                    l2306 0852  
                                  l2244 17B8                                    l2236 17A4  
                                  l2500 1AB2                                    l2228 1A0E  
                                  l2260 14C0                                    l2252 1482  
                                  l1188 0AC6                                    l2340 09A8  
                                  l2324 08E8                                    l2316 08B0  
                                  l2308 0862                                    l2420 0E32  
                                  l2412 0DEA                                    l1197 0FB8  
                                  l2246 17BC                                    l2238 17B0  
                                  l2270 152E                                    l2262 14D4  
                                  l2254 1492                                    l2350 09EA  
                                  l2342 09BA                                    l2334 095C  
                                  l2326 08F0                                    l2318 08D0  
                                  l2430 0EDA                                    l2422 0E56  
                                  l2414 0E0E                                    l2520 1B7E  
                                  l2248 17D2                                    l2408 1B28  
                                  l2504 1AD6                                    l2600 114A  
                                  l2264 14E8                                    l2256 14A6  
                                  l2360 0AB6                                    l2336 096E  
                                  l2344 09CE                                    l2328 090C  
                                  l2352 0A48                                    l2440 0F5C  
                                  l2424 0E7A                                    l2416 0E1C  
                                  l2512 1638                                    l3128 0D8E  
                                  l2522 1B80                                    l2530 18DA  
                                  l2506 1ADC                                    l2610 1170  
                                  l2602 114C                                    l2274 19AE  
                                  l2266 14EC                                    l2258 14B4  
                                  l2282 169A                                    l2362 0AD6  
                                  l2354 0A64                                    l2346 09DE  
                                  l2426 0E90                                    l2434 0F16  
                                  l2418 0E2E                                    l2450 0F82  
                                  l2514 1640                                    l2380 1B54  
                                  l2372 1B4A                                    l2292 1B2E  
                                  l2460 154A                                    l2540 1B64  
                                  l2532 18E0                                    l2524 18C0  
                                  l2620 11A4                                    l2612 1172  
                                  l2604 114E                                    l2700 137A  
                                  l2268 151A                                    l2364 0ADC  
                                  l2356 0A82                                    l2348 09E4  
                                  l2452 0FA6                                    l2436 0F3A  
                                  l2444 0F68                                    l2428 0E9E  
                                  l2516 164E                                    l2382 1B56  
                                  l2374 1B4E                                    l2294 1B32  
                                  l2390 1A34                                    l2470 159A  
                                  l2462 155A                                    l2542 1B68  
                                  l2534 18E6                                    l2526 18C8  
                                  l2550 184A                                    l2630 11F4  
                                  l2622 11B6                                    l2614 1184  
                                  l2606 1150                                    l2710 0FBA  
                                  l2702 1388                                    l2278 1900  
                                  l2286 16D0                                    l2366 0AEC  
                                  l2358 0A9C                                    l2446 0F76  
                                  l2438 0F48                                    l2518 1674  
                                  l2376 1B50                                    l2296 1B34  
                                  l2384 1A1C                                    l2472 15A8  
                                  l2464 1568                                    l2544 1B78  
                                  l2536 18EC                                    l2528 18D4  
                                  l2392 1BD4                                    l2480 1952  
                                  l2560 171C                                    l2552 185A  
                                  l2640 1234                                    l2632 11F8  
                                  l2624 11C4                                    l2616 118E  
                                  l2608 1162                                    l2720 0FC6  
                                  l2712 0FBE                                    l2704 138A  
                                  l2288 16E2                                    l2368 0B02  
                                  l2378 1B52                                    l2458 1BE8  
                                  l2298 1B36                                    l2386 1A20  
                                  l2474 15BA                                    l2466 157A  
                                  l2570 1800                                    l2546 1B7A  
                                  l2538 18F8                                    l2394 1BC0  
                                  l2482 1962                                    l2490 1BAC  
                                  l2562 172C                                    l2554 186A  
                                  l2650 1272                                    l2642 1246  
                                  l2634 120A                                    l2626 11C8  
                                  l2618 11A0                                    l2730 0FD0  
                                  l2722 0FC8                                    l2714 0FC0  
                                  l2706 13A2                                    l2388 1A30  
                                  l2468 1588                                    l2476 15C8  
                                  l2572 180C                                    l2484 196A  
                                  l2396 1B0C                                    l2492 1A84  
                                  l2564 173C                                    l2556 16FA  
                                  l2548 1838                                    l2660 129C  
                                  l2644 1248                                    l2636 1218  
                                  l2628 11E2                                    l2740 100E  
                                  l2732 0FE2                                    l2724 0FCA  
                                  l2716 0FC2                                    l2708 13B4  
                                  l2580 1774                                    l2900 0C7A  
                                  l2486 1972                                    l2478 193E  
                                  l2398 1B10                                    l2566 174C  
                                  l2558 170C                                    l2646 1256  
                                  l2638 121C                                    l2590 1140  
                                  l2750 1048                                    l2742 1020  
                                  l2734 0FF0                                    l2726 0FCC  
                                  l2718 0FC4                                    l2670 12C4  
                                  l2662 12BA                                    l2582 1790  
                                  l2574 1752                                    l2910 0CC2  
                                  l2902 0C88                                    l2830 0B48  
                                  l2568 17EE                                    l2496 1AA8  
                                  l2656 1288                                    l2648 1264  
                                  l2592 1142                                    l2760 1098  
                                  l2752 1062                                    l2744 1024  
                                  l2736 0FF2                                    l2728 0FCE  
                                  l2680 12CE                                    l2672 12C6  
                                  l2664 12BE                                    l2576 1764  
                                  l2904 0CA4                                    l2840 0B58  
                                  l2832 0B4C                                    l2824 0B2C  
                                  l2658 1298                                    l2594 1144  
                                  l2586 113A                                    l2770 10D6  
                                  l2762 109C                                    l2754 1074  
                                  l2746 1036                                    l2738 1004  
                                  l2690 130A                                    l2682 12D0  
                                  l2674 12C8                                    l2666 12C0  
                                  l2578 176C                                    l2906 0CAC  
                                  l2850 0B62                                    l2842 0B5A  
                                  l2834 0B50                                    l2826 0B32  
                                  l2596 1146                                    l2588 113E  
                                  l2780 1108                                    l2772 10E4  
                                  l2764 10B4                                    l2756 1078  
                                  l2748 1044                                    l2692 132E  
                                  l2684 12E2                                    l2676 12CA  
                                  l2668 12C2                                    l2932 0D3E  
                                  l2924 0D10                                    l2916 0CE2  
                                  l2908 0CB4                                    l2860 0B74  
                                  l2852 0B66                                    l2844 0B5C  
                                  l2836 0B54                                    l2828 0B44  
                                  l2790 1AF4                                    l2598 1148  
                                  l2782 1118                                    l2774 10F2  
                                  l2766 10C6                                    l2758 108A  
                                  l2694 133C                                    l2686 12F0  
                                  l2678 12CC                                    l2950 0DD4  
                                  l2934 0D4C                                    l2926 0D1E  
                                  l2918 0CF0                                    l2870 0B9E  
                                  l2862 0B90                                    l2854 0B6A  
                                  l2846 0B5E                                    l2838 0B56  
                                  ?_pad 0011                                    l2792 1B00  
                                  l2784 111C                                    l2768 10C8  
                                  l2696 133E                                    l2688 12F2  
                                  l2944 0D6C                                    l2880 0BEC  
                                  l2872 0BBA                                    l2864 0B94  
                                  l2856 0B6C                                    l2848 0B60  
                                  l2794 1B02                                    l2786 1ADE  
                                  l2698 1356                                    l2890 0C28  
                                  l2882 0BF2                                    l2874 0BCC  
                                  l2946 0DCC                                    l2866 0B96  
                                  l2858 0B70                                    l2796 1B04  
                                  l2788 1AE2                                    l2948 0DD0  
                                  l2892 0C46                                    l2884 0BF6  
                                  l2876 0BDE                                    l2868 0B9A  
                                  l2798 1B06                                    l2894 0C64  
                                  l2886 0C02                                    l2878 0BE2  
                                  l2896 0C6A                                    l2888 0C0C  
                                  l2898 0C72                                    _ADON 007E10  
                                  STR_1 083F                                    STR_2 0843  
                                  STR_3 084E                                    STR_4 0801  
                                  STR_5 0814                                    STR_6 0824  
                                  STR_7 084B                                    STR_8 0831  
                                  STR_9 083B                                    u1300 17D2  
                                  u1220 13CA                                    u2100 0C88  
                                  u1301 17CE                                    u1221 13C6  
                                  u2101 0C84                                    u1310 17EC  
                                  u1230 13DC                                    u2110 0CA4  
                                  u1311 17E8                                    u1231 13D8  
                                  u2111 0CA0                                    u1240 1404  
                                  u1320 1492                                    u1400 16CA  
                                  u2120 0CC2                                    u1241 1400  
                                  u1321 148E                                    u1401 16C4  
                                  u2121 0CBE                                    u1250 143A  
                                  u1330 14B4                                    u1410 16CC  
                                  u2130 0CDE                                    u1251 1436  
                                  u1331 14B0                                    u2131 0CDA  
                                  u2051 0B3C                                    u1260 18BE  
                                  u1340 150A                                    u1420 16E2  
                                  u1500 096E                                    u2140 0CF0  
                                  u2060 0B86                                    u1261 18BA  
                                  u1341 1506                                    u1421 16DE  
                                  u1501 096A                                    u2141 0CEC  
                                  u2061 0B7E                                    _LATA 000F89  
                                  u1430 1C0A                                    u1270 1A0E  
                                  u1350 151A                                    u1510 09A2  
                                  u2150 0D0C                                    u2070 0BB0  
                                  u1431 1C06                                    u1271 1A0A  
                                  u1351 1516                                    u1511 099C  
                                  u2151 0D08                                    u2071 0BA8  
                                  u1360 19DE                                    u1280 19A6  
                                  u1600 0AD6                                    u1520 09A4  
                                  u1440 0862                                    u2160 0D1E  
                                  u2080 0BCC                                    _LATD 000F8C  
                                  u1361 19D8                                    u1281 19A0  
                                  u1601 0AD2                                    u1441 085E  
                                  u2161 0D1A                                    u2081 0BC8  
                                  u1610 1A50                                    u1370 19E0  
                                  u1290 19A8                                    u1530 09BA  
                                  u1450 087E                                    u2170 0D3A  
                                  u2090 0BDE                                    u1611 1A4C  
                                  u1531 09B6                                    u1451 087A  
                                  u2171 0D36                                    u2091 0BDA  
                                  u1700 157A                                    u1620 1BE6  
                                  u1380 1934                                    u1540 0A22  
                                  u1460 08A8                                    u2180 0D4C  
                                  u2068 0B88                                    u1701 1576  
                                  u1621 1BE2                                    u1381 192E  
                                  u1461 08A4                                    u2181 0D48  
                                  u1710 159A                                    u1630 1BD2  
                                  u1390 1936                                    u1550 0A64  
                                  u1470 090C                                    u2190 0D68  
                                  u2078 0BB2                                    u1711 1596  
                                  u1631 1BCE                                    u1551 0A60  
                                  u1471 0908                                    u2191 0D64  
                                  u1720 15BA                                    u1640 1B22  
                                  u1560 0A82                                    u1480 0956  
                                  u1800 1690                                    u1721 15B6  
                                  u1641 1B1E                                    u1561 0A7E  
                                  u1545 0A10                                    u1481 0950  
                                  u1801 168C                                    u1730 194E  
                                  u1810 1170                                    u1570 0A9C  
                                  u1490 0958                                    u1650 0E0E  
                                  u1731 194A                                    u1811 116C  
                                  u1571 0A98                                    u1651 0E0A  
                                  u1740 1962                                    u1820 11C4  
                                  u1900 133C                                    u1580 0AB6  
                                  u1660 0E56                                    u1741 195E  
                                  u1821 11C0                                    u1901 1338  
                                  u1581 0AB2                                    u1661 0E52  
                                  u1750 1BBC                                    u1830 1218  
                                  u1910 1388                                    u1590 0AC6  
                                  u1670 0E7A                                    u1751 1BB8  
                                  u1831 1214                                    u1911 1384  
                                  u1591 0AC2                                    u1671 0E76  
                                  u1760 1A94                                    u1840 1256  
                                  u1920 0FF0                                    u1680 0F3A  
                                  u1761 1A90                                    u1841 1252  
                                  u1921 0FEC                                    u1681 0F36  
                                  u1690 155A                                    u1770 1AA4  
                                  u1850 1264                                    u1930 1044  
                                  u1691 1556                                    u1771 1AA0  
                                  u1851 1260                                    u1931 1040  
                                  u1780 1AC2                                    u1860 1272  
                                  u1940 1098                                    u1781 1ABE  
                                  u1861 126E                                    u1941 1094  
                                  u1790 1AD2                                    u1870 1288  
                                  u1950 10D6                                    u1791 1ACE  
                                  u1871 1284                                    u1951 10D2  
                                  u1880 12B8                                    u1960 10E4  
                                  u1881 12B4                                    u1961 10E0  
                                  u1970 10F2                                    u1890 12F0  
                                  u1971 10EE                                    u1891 12EC  
                                  u1980 1108                                    u1981 1104  
                                  u1990 1138                                    u1991 1134  
                                  _RCEN 007E2B                                    _RSEN 007E29  
                                  _Date 00E1                                    _Year 00DD  
                                  _dbuf 0100                                    _main 0B2C  
                       ?_RTC_Read_Clock 0001                                    _hour 00E5  
                      __end_of_I2C_Nack 1BD4                      __size_of_LCD_Clear 0014  
                                  _prec 00D1                        __end_of_I2C_Init 1B7E  
                      __end_of_I2C_Read 1976                                    _nout 00CD  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
                                  _xtoa 0852                        __end_of_I2C_Stop 1BC0  
                      __end_of_ADC_Init 1B96                                    start 0000  
                       __end_of_MSdelay 17EE                           _LCD_String_xy 1548  
                          ___param_bank 000000        RTC_Read_Clock@read_clock_address 0004  
                                 ??_pad 0017                        __end_of_LCD_Char 1B48  
                      __end_of_LCD_Init 1900                                   ?_main 0001  
                                 _ACKEN 007E2C                                   _ACKDT 007E2D  
                                 STR_10 0847                                   STR_11 0836  
                                 STR_30 083B                                   STR_14 082C  
                                 STR_31 0847                                   STR_32 082C  
                                 STR_40 0847                                   STR_41 082C  
                                 STR_33 083B                                   STR_50 082C  
                                 STR_26 0831                                   STR_42 083B  
                                 STR_34 0847                                   STR_35 0831  
                                 STR_51 083B                                   STR_27 083B  
                                 STR_43 0847                                   STR_44 0831  
                                 STR_36 083B                                   STR_52 0847  
                                 STR_28 0847                                   STR_29 0836  
                                 STR_45 083B                                   STR_37 0847  
                                 STR_38 0836                                   STR_46 0847  
                                 STR_47 0836                                   STR_39 083B  
                                 STR_48 083B                                   STR_49 0847  
                                 ?_xtoa 001C                                   _LATC0 007C58  
                                 _LATC1 007C59                                   _LATC2 007C5A  
                                 _LATE1 007C69                                   _LATE2 007C6A  
                          vfpfcnvrt@fmt 0045                            vfpfcnvrt@llu 004D  
                                 _SPBRG 000FAF                                   _TRISA 000F92  
                                 _TRISD 000F95                                   _SSPIE 007CEB  
                                 _TRISE 000F96                                   _SSPIF 007CF3  
                                 _TXREG 000FAD                                   _Month 00DF  
                      ?_desactivarAlarm 0001                                   _flags 00D3  
                                 _fputc 13B8                         __end_of_isalpha 193C  
                                 _fputs 187C                                   _tecla 00F4  
                     __end_of_I2C_Ready 1C0E                                   pad@fp 0011  
                                 _width 00CF                                   _putch 1C0E  
                       __end_of_islower 19AE                       __end_of_I2C_Start 1AB0  
                     __end_of_I2C_Write 1B2C                         __end_of_isupper 19E6  
                                 tablat 000FF5                                   plusw1 000FE3  
                                 plusw2 000FDB                                   status 000FD8  
                   __size_of_LCD_String 0036                         __end_of_sprintf 17A4  
                                 xtoa@c 0041                                   xtoa@d 001E  
                                 xtoa@i 003F                                   xtoa@n 0037  
                                 xtoa@p 0033                                   xtoa@w 0035  
                                 xtoa@x 0026                         __end_of_toupper 16F8  
                        ?_LCD_String_xy 000A                            _toupper$1593 000D  
                       __initialization 15D6                            __end_of_main 0DEA  
                          __end_of_xtoa 0B2C                               ??_I2C_Ack 0001  
                        _protocoloNoche 0FBA                                  ??_main 005E  
                                ??_xtoa 0027                       __end_of_LCD_Clear 1BFC  
                         __activetblptr 000002                                  _ADCON0 000FC2  
                                _ADCON1 000FC1                                  _ADCON2 000FC0  
                                ?_fputc 0001                                  ?_fputs 000A  
                                _ADRESH 000FC4                                  _ADRESL 000FC3  
                                ?_putch 0001                        LCD_String_xy@pos 000A  
                      LCD_String_xy@row 000D                        LCD_String_xy@str 000B  
                             ??_MSdelay 0003                                  _OSCCON 000FD3  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
           protocoloNoche@buffer_TX_984 000F                 ??_protocoloProtocoloDia 000E  
                          vfprintf@cfmt 005C                                  _clave1 00C7  
                                _clave2 00C6                                  _clave3 00C5  
                __end_of_protocoloNoche 113A                                  clear_0 161C  
                                clear_1 1628                      _I2C_Repeated_Start 1AB0  
                                pad@buf 0013                    __size_of_LCD_Command 001C  
                                _strlen 19E6                                  fputc@c 0001  
                                fputs@c 000E                                  fputs@i 000F  
                             ?_I2C_Nack 0001                                  fputs@s 000A  
                             ??_isalpha 0003                               ?_I2C_Init 0001  
                             ?_I2C_Read 0001                               ?_I2C_Stop 0001  
                             ?_ADC_Init 0001                               ??_islower 0003  
                          __mediumconst 0000                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                                putch@c 0001                        __end_of_vfprintf 169A  
                             ??_sprintf 005E                                  xtoa@fp 001C  
                             ??_toupper 0009                           _estado_alarma 00C0  
                             ?_LCD_Char 0001                              __accesstop 0060  
               __end_of__initialization 162E                               ?_LCD_Init 0001  
                       ??_LCD_String_xy 000D                           ___rparam_used 000001  
                  ??_I2C_Repeated_Start 0002                          __pcstackCOMRAM 0001  
                          __pidataBANK0 1A52                            __pidataBANK1 1B96  
                         __end_of_fputc 1482                           __end_of_fputs 18C0  
                       ?_protocoloNoche 0001                           __end_of_putch 1C10  
                          ??_LCD_String 000A                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                              ??_ADC_Init 0001  
                __size_of_ActivateAlarm 0048                        ??_RTC_Read_Clock 0003  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00C8  
                            __pbssBANK1 0100                              ??_LCD_Char 0007  
                            _character1 00B1                              _character2 00A9  
                            _character3 00A1                              _character4 0099  
                            ??_LCD_Init 0008                      __end_of_LCD_String 1A52  
                          I2C_Read@flag 0001                          I2C_Read@buffer 0002  
                               _I2C_Ack 1BD4                                 _ACKSTAT 007E2E  
                            _direccion1 00C4                              _direccion2 00C3  
                            _direccion3 00C2                                 ?_strlen 0001  
                    __size_of_vfpfcnvrt 01D0                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
               protocoloNoche@buffer_TX 000E                                 _MSdelay 17A4  
                             _I2C_Ready 1BFC                               _I2C_Start 1A82  
                             _I2C_Write 1B0A                           LCD_String@msg 0008  
                         _ActivateAlarm 17EE                                 __Hparam 0000  
                               __Lparam 0000                       _RTC_Read_Calendar 16F8  
                             ?_vfprintf 0056                            __psmallconst 0800  
                         protocoloFDS@i 0010                      ?_RTC_Read_Calendar 0001  
                               __pcinit 15D6                                 __ramtop 0800  
                               __ptext0 0B2C                                 __ptext1 1752  
                               __ptext2 1638                                 __ptext3 0DEA  
                               __ptext4 0852                                 __ptext5 169A  
                               __ptext6 1976                                 __ptext7 1482  
                               __ptext8 19E6                                 __ptext9 187C  
                       __size_of_strlen 0036                                 _inclave 00C8  
                          __size_of_pad 00C6                                 _isalpha 1900  
                   ??_RTC_Read_Calendar 0003                                 _islower 1976  
                               _isupper 19AE                               _LCD_Clear 1BE8  
                               _sprintf 1752                                 _toupper 169A  
                  end_of_initialization 162E                                 fputc@fp 0003  
                        LCD_Command@cmd 0007                           __Lmediumconst 0000  
                               fputs@fp 000C                              ?_I2C_Ready 0001  
              __size_of_desactivarAlarm 002C                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001                          ?_ActivateAlarm 0001  
             __end_of_RTC_Read_Calendar 1752          __size_of_protocoloProtocoloDia 00FE  
         __end_of_protocoloProtocoloDia 13B8                       __end_of_vfpfcnvrt 0FBA  
                             _RCSTAbits 000FAB                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 005C                                 strlen@a 0003  
                               strlen@s 0001                               _PORTAbits 000F80  
                             _PORTEbits 000F84                               _TRISAbits 000F92  
                             _TRISCbits 000F94                              ?_LCD_Clear 0001  
                     __size_of_I2C_Nack 0014                       __size_of_I2C_Init 001A  
                     __size_of_I2C_Read 003A                       __size_of_I2C_Stop 0014  
                     __size_of_ADC_Init 0018                               _TXSTAbits 000FAC  
                     __size_of_LCD_Char 001C                       __size_of_LCD_Init 0040  
                      ??_protocoloNoche 000E                           ??_LCD_Command 0007  
                     LCD_Char@char_data 0007                             vfpfcnvrt@ap 0047  
                           vfpfcnvrt@fp 0043                             _BAUDCONbits 000FB8  
                        __end_of_strlen 1A1C                     start_initialization 15D6  
                         ?_protocoloFDS 0001                             __end_of_pad 1548  
  I2C_Repeated_Start@slave_read_address 0002                       protocoloFDS@F3766 00EE  
                     protocoloFDS@F3768 00ED                   protocoloFDS@buffer_TX 000E  
                       ??_ActivateAlarm 000E                             ??_I2C_Ready 0001  
                          _countinclave 00F3                             ??_I2C_Start 0002  
                           ??_I2C_Write 0001                   __end_of_LCD_String_xy 15D6  
            __size_of_RTC_Read_Calendar 005A                             vfprintf@fmt 0058  
           __size_of_I2C_Repeated_Start 002E                       ??_desactivarAlarm 000E  
                           __pdataBANK0 0099                             __pdataBANK1 0120  
                              ?_I2C_Ack 0001                                ??_strlen 0003  
                   __end_of_LCD_Command 1B64                          ??_protocoloFDS 000E  
                         __pcstackBANK0 0060                             ??_LCD_Clear 0008  
                              ?_MSdelay 0001                             _clave1check 00DB  
                           _clave2check 00D9                             _clave3check 00D7  
                             _buffer_TX 0120                       __size_of_vfprintf 0062  
                       protocoloNoche@i 0010                             __smallconst 0800  
                              _I2C_Nack 1BC0                                ?_isalpha 0001  
                              _I2C_Init 1B64                                _I2C_Read 193C  
                              _I2C_Stop 1BAC                                _ADC_Init 1B7E  
                              ?_islower 0001                                ?_isupper 0001  
                              ?_sprintf 0060                          __size_of_fputc 00CA  
                        __size_of_fputs 0044                                ?_toupper 0007  
                        __size_of_putch 0002                                MSdelay@i 0003  
                              MSdelay@j 0005                                _LCD_Char 1B2C  
                              _LCD_Init 18C0                 __size_of_RTC_Read_Clock 0046  
                             main@F3747 00B9                               main@AM_PM 0096  
                           _LCD_Command 1B48                               _vfpfcnvrt 0DEA  
                             _xtoa$1510 002F                               _xtoa$1511 0031  
                      __size_of_I2C_Ack 0014                              _ADCON0bits 000FC2  
                            _ADCON1bits 000FC1                               main@hours 0084  
                            vfpfcnvrt@c 0055                               copy_data0 15EA  
                             copy_data1 160A            I2C_Start@slave_write_address 0002  
                      __size_of_MSdelay 004A                                __Hrparam 0000  
                            vfprintf@ap 005A                                __Lrparam 0000  
                  __end_of_protocoloFDS 12BA                              vfprintf@fp 0056  
                         I2C_Write@data 0001                   _protocoloProtocoloDia 12BA  
                            ?_vfpfcnvrt 0043                              sprintf@fmt 0062  
                      __size_of_isalpha 003C                        __size_of_islower 0038  
                              __ptext10 13B8                                __ptext11 1C0E  
                              __ptext20 1BAC                                __ptext12 19AE  
                              __ptext21 1A82                                __ptext13 1900  
                              __ptext30 17EE                                __ptext22 1AB0  
                              __ptext14 12BA                                __ptext31 1548  
                              __ptext23 1B0A                                __ptext15 0FBA  
                              __ptext32 1A1C                                __ptext24 193C  
                              __ptext16 113A                                __ptext33 1B2C  
                              __ptext25 1BFC                                __ptext17 1ADE  
                              __ptext34 1BE8                                __ptext26 1BC0  
                              __ptext18 1836                                __ptext35 1B48  
                              __ptext27 1BD4                                __ptext19 16F8  
                              __ptext36 17A4                                __ptext28 18C0  
                              __ptext37 1B7E                                __ptext29 1B64  
                      __size_of_isupper 0038                        __size_of_sprintf 0052  
                      __size_of_toupper 005E                         _desactivarAlarm 1ADE  
                         __size_of_main 02BE                           __size_of_xtoa 02DA  
                            MSdelay@val 0001                                _vfprintf 1638  
                              main@flag 0097                                main@days 008E  
                              main@mins 007A                                main@secs 0070  
                            _LCD_String 1A1C                         _clavechecktotal 00D5  
                              isalpha@c 0001                               sprintf@ap 0068  
                              islower@c 0001               protocoloFDS@buffer_TX_959 000F  
                 __end_of_ActivateAlarm 1836              __end_of_I2C_Repeated_Start 1ADE  
                              isupper@c 0001                          _RTC_Read_Clock 1836  
                 SensorMovimiento@F3754 00F2                   SensorMovimiento@F3756 00F1  
                ?_protocoloProtocoloDia 0001                             ??_vfpfcnvrt 0049  
               __size_of_protocoloNoche 0180                                sprintf@f 006A  
                              sprintf@s 0060                                toupper@c 0007  
                __size_of_LCD_String_xy 008E                protocoloEmergencia@F3760 00F0  
              protocoloEmergencia@F3762 00EF                 __end_of_desactivarAlarm 1B0A  
                           _SSPCON2bits 000FC5                  __end_of_RTC_Read_Clock 187C  
                 __size_of_protocoloFDS 0180  



Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Dec 13 21:09:33 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4550 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataBANK0
    78  00140A                     __pidataBANK0:
    79                           	callstack 0
    80                           
    81                           ;initializer for _buffer_TX
    82  00140A  2D                 	db	45
    83  00140B  2D                 	db	45
    84  00140C  2D                 	db	45
    85  00140D  2D                 	db	45
    86  00140E  2D                 	db	45
    87  00140F  2D                 	db	45
    88  001410  20                 	db	32
    89  001411  20                 	db	32
    90  001412  20                 	db	32
    91  001413  20                 	db	32
    92  001414  3A                 	db	58
    93  001415  3A                 	db	58
    94  001416  20                 	db	32
    95  001417  20                 	db	32
    96  001418  20                 	db	32
    97  001419  20                 	db	32
    98  00141A  0D                 	db	13
    99  00141B  00                 	db	0
   100  0000                     _SSPCON2bits	set	4037
   101  0000                     _SSPADD	set	4040
   102  0000                     _SSPCON2	set	4037
   103  0000                     _SSPCON1	set	4038
   104  0000                     _SSPSTAT	set	4039
   105  0000                     _SSPBUF	set	4041
   106  0000                     _SSPSTATbits	set	4039
   107  0000                     _TXREG	set	4013
   108  0000                     _PORTAbits	set	3968
   109  0000                     _ADCON2bits	set	4032
   110  0000                     _ADCON0bits	set	4034
   111  0000                     _ADCON1bits	set	4033
   112  0000                     _TRISBbits	set	3987
   113  0000                     _TRISAbits	set	3986
   114  0000                     _SPBRG	set	4015
   115  0000                     _RCSTAbits	set	4011
   116  0000                     _BAUDCONbits	set	4024
   117  0000                     _TXSTAbits	set	4012
   118  0000                     _TRISCbits	set	3988
   119  0000                     _OSCCONbits	set	4051
   120  0000                     _ACKEN	set	32300
   121  0000                     _ACKDT	set	32301
   122  0000                     _PEN	set	32298
   123  0000                     _RSEN	set	32297
   124  0000                     _ACKSTAT	set	32302
   125  0000                     _SSPIF	set	31987
   126  0000                     _SSPIE	set	31979
   127  0000                     _TRISB1	set	31897
   128  0000                     _TRISB0	set	31896
   129  0000                     _RCEN	set	32299
   130                           
   131                           	psect	smallconst
   132  000800                     __psmallconst:
   133                           	callstack 0
   134  000800  00                 	db	0
   135  000801                     STR_5:
   136  000801  25                 	db	37
   137  000802  78                 	db	120	;'x'
   138  000803  20                 	db	32
   139  000804  00                 	db	0
   140  000805                     STR_3:
   141  000805  25                 	db	37
   142  000806  78                 	db	120	;'x'
   143  000807  2D                 	db	45
   144  000808  00                 	db	0
   145  000809                     STR_1:
   146  000809  25                 	db	37
   147  00080A  78                 	db	120	;'x'
   148  00080B  00                 	db	0
   149  00080C  00                 	db	0	; dummy byte at the end
   150  0000                     
   151                           ; #config settings
   152                           
   153                           	psect	cinit
   154  00121C                     __pcinit:
   155                           	callstack 0
   156  00121C                     start_initialization:
   157                           	callstack 0
   158  00121C                     __initialization:
   159                           	callstack 0
   160                           
   161                           ; Initialize objects allocated to BANK0 (18 bytes)
   162                           ; load TBLPTR registers with __pidataBANK0
   163  00121C  0E0A               	movlw	low __pidataBANK0
   164  00121E  6EF6               	movwf	tblptrl,c
   165  001220  0E14               	movlw	high __pidataBANK0
   166  001222  6EF7               	movwf	tblptrh,c
   167  001224  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   168  001226  6EF8               	movwf	tblptru,c
   169  001228  EE00  F0E3         	lfsr	0,__pdataBANK0
   170  00122C  EE10 F012          	lfsr	1,18
   171  001230                     copy_data0:
   172  001230  0009               	tblrd		*+
   173  001232  CFF5 FFEE          	movff	tablat,postinc0
   174  001236  50E5               	movf	postdec1,w,c
   175  001238  50E1               	movf	fsr1l,w,c
   176  00123A  E1FA               	bnz	copy_data0
   177                           
   178                           ; Clear objects allocated to BANK0 (61 bytes)
   179  00123C  EE00  F0A6         	lfsr	0,__pbssBANK0
   180  001240  0E3D               	movlw	61
   181  001242                     clear_0:
   182  001242  6AEE               	clrf	postinc0,c
   183  001244  06E8               	decf	wreg,f,c
   184  001246  E1FD               	bnz	clear_0
   185  001248                     end_of_initialization:
   186                           	callstack 0
   187  001248                     __end_of__initialization:
   188                           	callstack 0
   189  001248  0E00               	movlw	low (__Lsmallconst shr (0+16))
   190  00124A  6EF8               	movwf	tblptru,c
   191  00124C  0E08               	movlw	high __Lsmallconst
   192  00124E  6EF7               	movwf	tblptrh,c
   193  001250  0100               	movlb	0
   194  001252  EF5B  F006         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssBANK0
   197  0000A6                     __pbssBANK0:
   198                           	callstack 0
   199  0000A6                     _temp:
   200                           	callstack 0
   201  0000A6                     	ds	4
   202  0000AA                     _nout:
   203                           	callstack 0
   204  0000AA                     	ds	2
   205  0000AC                     _width:
   206                           	callstack 0
   207  0000AC                     	ds	2
   208  0000AE                     _prec:
   209                           	callstack 0
   210  0000AE                     	ds	2
   211  0000B0                     _flags:
   212                           	callstack 0
   213  0000B0                     	ds	2
   214  0000B2                     _Year:
   215                           	callstack 0
   216  0000B2                     	ds	2
   217  0000B4                     _Month:
   218                           	callstack 0
   219  0000B4                     	ds	2
   220  0000B6                     _Date:
   221                           	callstack 0
   222  0000B6                     	ds	2
   223  0000B8                     _Day:
   224                           	callstack 0
   225  0000B8                     	ds	2
   226  0000BA                     _hour:
   227                           	callstack 0
   228  0000BA                     	ds	2
   229  0000BC                     _min:
   230                           	callstack 0
   231  0000BC                     	ds	2
   232  0000BE                     _sec:
   233                           	callstack 0
   234  0000BE                     	ds	2
   235  0000C0                     _value_adc:
   236                           	callstack 0
   237  0000C0                     	ds	2
   238  0000C2                     _lm35:
   239                           	callstack 0
   240  0000C2                     	ds	1
   241  0000C3                     _dbuf:
   242                           	callstack 0
   243  0000C3                     	ds	32
   244                           
   245                           	psect	dataBANK0
   246  0000E3                     __pdataBANK0:
   247                           	callstack 0
   248  0000E3                     _buffer_TX:
   249                           	callstack 0
   250  0000E3                     	ds	18
   251                           
   252                           	psect	cstackBANK0
   253  000060                     __pcstackBANK0:
   254                           	callstack 0
   255  000060                     ?_sprintf:
   256                           	callstack 0
   257  000060                     sprintf@s:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x0
   261  000060                     	ds	2
   262  000062                     sprintf@fmt:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x2
   266  000062                     	ds	6
   267  000068                     sprintf@ap:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x8
   271  000068                     	ds	2
   272  00006A                     sprintf@f:
   273                           	callstack 0
   274                           
   275                           ; 6 bytes @ 0xA
   276  00006A                     	ds	6
   277  000070                     main@date:
   278                           	callstack 0
   279                           
   280                           ; 10 bytes @ 0x10
   281  000070                     	ds	10
   282  00007A                     main@month:
   283                           	callstack 0
   284                           
   285                           ; 10 bytes @ 0x1A
   286  00007A                     	ds	10
   287  000084                     main@year:
   288                           	callstack 0
   289                           
   290                           ; 10 bytes @ 0x24
   291  000084                     	ds	10
   292  00008E                     main@mins:
   293                           	callstack 0
   294                           
   295                           ; 10 bytes @ 0x2E
   296  00008E                     	ds	10
   297  000098                     main@hours:
   298                           	callstack 0
   299                           
   300                           ; 10 bytes @ 0x38
   301  000098                     	ds	12
   302  0000A4                     main@i:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x44
   306  0000A4                     	ds	2
   307                           
   308                           	psect	cstackCOMRAM
   309  000001                     __pcstackCOMRAM:
   310                           	callstack 0
   311  000001                     ?_strlen:
   312                           	callstack 0
   313  000001                     ?_isupper:
   314                           	callstack 0
   315  000001                     ?_isalpha:
   316                           	callstack 0
   317  000001                     ?_islower:
   318                           	callstack 0
   319  000001                     I2C_Read@flag:
   320                           	callstack 0
   321  000001                     I2C_Write@data:
   322                           	callstack 0
   323  000001                     isalpha@c:
   324                           	callstack 0
   325  000001                     isupper@c:
   326                           	callstack 0
   327  000001                     fputc@c:
   328                           	callstack 0
   329  000001                     strlen@s:
   330                           	callstack 0
   331  000001                     islower@c:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x0
   335  000001                     	ds	1
   336  000002                     I2C_Read@buffer:
   337                           	callstack 0
   338  000002                     I2C_Start@slave_write_address:
   339                           	callstack 0
   340  000002                     I2C_Repeated_Start@slave_read_address:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x1
   344  000002                     	ds	1
   345  000003                     ??_isupper:
   346  000003                     ??_isalpha:
   347  000003                     ??_islower:
   348  000003                     ??_RTC_Read_Clock:
   349  000003                     ??_RTC_Read_Calendar:
   350  000003                     fputc@fp:
   351                           	callstack 0
   352  000003                     strlen@a:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x2
   356  000003                     	ds	1
   357  000004                     RTC_Read_Clock@read_clock_address:
   358                           	callstack 0
   359  000004                     RTC_Read_Calendar@read_calendar_address:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x3
   363  000004                     	ds	1
   364  000005                     ??_fputc:
   365                           
   366                           ; 1 bytes @ 0x4
   367  000005                     	ds	2
   368  000007                     ?_toupper:
   369                           	callstack 0
   370  000007                     toupper@c:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x6
   374  000007                     	ds	2
   375  000009                     ??_toupper:
   376                           
   377                           ; 1 bytes @ 0x8
   378  000009                     	ds	1
   379  00000A                     fputs@s:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x9
   383  00000A                     	ds	2
   384  00000C                     fputs@fp:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0xB
   388  00000C                     	ds	1
   389  00000D                     _toupper$1478:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0xC
   393  00000D                     	ds	1
   394  00000E                     fputs@c:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0xD
   398  00000E                     	ds	1
   399  00000F                     fputs@i:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0xE
   403  00000F                     	ds	2
   404  000011                     ?_pad:
   405                           	callstack 0
   406  000011                     pad@fp:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x10
   410  000011                     	ds	2
   411  000013                     pad@buf:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x12
   415  000013                     	ds	2
   416  000015                     pad@p:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x14
   420  000015                     	ds	2
   421  000017                     ??_pad:
   422                           
   423                           ; 1 bytes @ 0x16
   424  000017                     	ds	1
   425  000018                     pad@i:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x17
   429  000018                     	ds	2
   430  00001A                     pad@w:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x19
   434  00001A                     	ds	2
   435  00001C                     ?_xtoa:
   436                           	callstack 0
   437  00001C                     xtoa@fp:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x1B
   441  00001C                     	ds	2
   442  00001E                     xtoa@d:
   443                           	callstack 0
   444                           
   445                           ; 8 bytes @ 0x1D
   446  00001E                     	ds	8
   447  000026                     xtoa@x:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x25
   451  000026                     	ds	1
   452  000027                     ??_xtoa:
   453                           
   454                           ; 1 bytes @ 0x26
   455  000027                     	ds	8
   456  00002F                     _xtoa$1395:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x2E
   460  00002F                     	ds	2
   461  000031                     _xtoa$1396:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x30
   465  000031                     	ds	2
   466  000033                     xtoa@p:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x32
   470  000033                     	ds	2
   471  000035                     xtoa@w:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x34
   475  000035                     	ds	2
   476  000037                     xtoa@n:
   477                           	callstack 0
   478                           
   479                           ; 8 bytes @ 0x36
   480  000037                     	ds	8
   481  00003F                     xtoa@i:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x3E
   485  00003F                     	ds	2
   486  000041                     xtoa@c:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x40
   490  000041                     	ds	2
   491  000043                     ?_vfpfcnvrt:
   492                           	callstack 0
   493  000043                     vfpfcnvrt@fp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x42
   497  000043                     	ds	2
   498  000045                     vfpfcnvrt@fmt:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x44
   502  000045                     	ds	2
   503  000047                     vfpfcnvrt@ap:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x46
   507  000047                     	ds	2
   508  000049                     ??_vfpfcnvrt:
   509                           
   510                           ; 1 bytes @ 0x48
   511  000049                     	ds	4
   512  00004D                     vfpfcnvrt@llu:
   513                           	callstack 0
   514                           
   515                           ; 8 bytes @ 0x4C
   516  00004D                     	ds	8
   517  000055                     vfpfcnvrt@c:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x54
   521  000055                     	ds	1
   522  000056                     ?_vfprintf:
   523                           	callstack 0
   524  000056                     vfprintf@fp:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x55
   528  000056                     	ds	2
   529  000058                     vfprintf@fmt:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x57
   533  000058                     	ds	2
   534  00005A                     vfprintf@ap:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x59
   538  00005A                     	ds	2
   539  00005C                     vfprintf@cfmt:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x5B
   543  00005C                     	ds	2
   544  00005E                     ??_main:
   545                           
   546                           ; 1 bytes @ 0x5D
   547  00005E                     	ds	2
   548                           
   549 ;;
   550 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   551 ;;
   552 ;; *************** function _main *****************
   553 ;; Defined at:
   554 ;;		line 67 in file "uart_lm35.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  i               2   68[BANK0 ] int 
   559 ;;  hours          10   56[BANK0 ] unsigned char [10]
   560 ;;  mins           10   46[BANK0 ] unsigned char [10]
   561 ;;  year           10   36[BANK0 ] unsigned char [10]
   562 ;;  month          10   26[BANK0 ] unsigned char [10]
   563 ;;  date           10   16[BANK0 ] unsigned char [10]
   564 ;;  AM_PM           1    0        unsigned char 
   565 ;;  Clock_type      1    0        unsigned char 
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   575 ;;      Params:         0       0       0       0       0       0       0       0       0
   576 ;;      Locals:         0      54       0       0       0       0       0       0       0
   577 ;;      Temps:          2       0       0       0       0       0       0       0       0
   578 ;;      Totals:         2      54       0       0       0       0       0       0       0
   579 ;;Total ram usage:       56 bytes
   580 ;; Hardware stack levels required when called:    8
   581 ;; This function calls:
   582 ;;		_I2C_Init
   583 ;;		_I2C_Stop
   584 ;;		_RTC_Read_Calendar
   585 ;;		_RTC_Read_Clock
   586 ;;		_sprintf
   587 ;; This function is called by:
   588 ;;		Startup code after reset
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text0
   593  000CB6                     __ptext0:
   594                           	callstack 0
   595  000CB6                     _main:
   596                           	callstack 23
   597  000CB6                     
   598                           ;uart_lm35.c: 68:      I2C_Init();
   599  000CB6  ECDA  F009         	call	_I2C_Init	;wreg free
   600  000CBA                     
   601                           ;uart_lm35.c: 74:     OSCCONbits.IRCF = 0b111;
   602  000CBA  0E70               	movlw	112
   603  000CBC  12D3               	iorwf	211,f,c	;volatile
   604  000CBE                     
   605                           ;uart_lm35.c: 75:     OSCCONbits.SCS = 0b10;
   606  000CBE  50D3               	movf	211,w,c	;volatile
   607  000CC0  0BFC               	andlw	-4
   608  000CC2  0902               	iorlw	2
   609  000CC4  6ED3               	movwf	211,c	;volatile
   610  000CC6                     
   611                           ;uart_lm35.c: 78:     TRISCbits.RC6 = 0;
   612  000CC6  9C94               	bcf	148,6,c	;volatile
   613  000CC8                     
   614                           ;uart_lm35.c: 79:     TXSTAbits.TX9 = 0;
   615  000CC8  9CAC               	bcf	172,6,c	;volatile
   616  000CCA                     
   617                           ;uart_lm35.c: 80:     TXSTAbits.TXEN = 1;
   618  000CCA  8AAC               	bsf	172,5,c	;volatile
   619  000CCC                     
   620                           ;uart_lm35.c: 81:     TXSTAbits.SYNC = 0;
   621  000CCC  98AC               	bcf	172,4,c	;volatile
   622  000CCE                     
   623                           ;uart_lm35.c: 82:     TXSTAbits.BRGH = 0;
   624  000CCE  94AC               	bcf	172,2,c	;volatile
   625  000CD0                     
   626                           ;uart_lm35.c: 83:     BAUDCONbits.BRG16 = 0;
   627  000CD0  96B8               	bcf	184,3,c	;volatile
   628  000CD2                     
   629                           ;uart_lm35.c: 84:     RCSTAbits.SPEN = 1;
   630  000CD2  8EAB               	bsf	171,7,c	;volatile
   631  000CD4                     
   632                           ;uart_lm35.c: 85:     SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
   633  000CD4  0E0C               	movlw	12
   634  000CD6  6EAF               	movwf	175,c	;volatile
   635  000CD8                     
   636                           ;uart_lm35.c: 87:      TRISAbits.TRISA1 = 1;
   637  000CD8  8292               	bsf	146,1,c	;volatile
   638  000CDA                     
   639                           ;uart_lm35.c: 88:      TRISBbits.TRISB1 = 1;
   640  000CDA  8293               	bsf	147,1,c	;volatile
   641  000CDC                     
   642                           ;uart_lm35.c: 89:      TRISBbits.TRISB1 = 1;
   643  000CDC  8293               	bsf	147,1,c	;volatile
   644  000CDE                     
   645                           ;uart_lm35.c: 93:     ADCON1bits.PCFG = 0b1110;
   646  000CDE  50C1               	movf	193,w,c	;volatile
   647  000CE0  0BF0               	andlw	-16
   648  000CE2  090E               	iorlw	14
   649  000CE4  6EC1               	movwf	193,c	;volatile
   650  000CE6                     
   651                           ;uart_lm35.c: 94:     ADCON1bits.VCFG = 0b00;
   652  000CE6  0ECF               	movlw	-49
   653  000CE8  16C1               	andwf	193,f,c	;volatile
   654  000CEA                     
   655                           ;uart_lm35.c: 95:     ADCON0bits.CHS = 0b0000;
   656  000CEA  0EC3               	movlw	-61
   657  000CEC  16C2               	andwf	194,f,c	;volatile
   658  000CEE                     
   659                           ;uart_lm35.c: 96:     ADCON2bits.ACQT = 0b010;
   660  000CEE  50C0               	movf	192,w,c	;volatile
   661  000CF0  0BC7               	andlw	-57
   662  000CF2  0910               	iorlw	16
   663  000CF4  6EC0               	movwf	192,c	;volatile
   664  000CF6                     
   665                           ;uart_lm35.c: 97:     ADCON2bits.ADCS = 0b001;
   666  000CF6  50C0               	movf	192,w,c	;volatile
   667  000CF8  0BF8               	andlw	-8
   668  000CFA  0901               	iorlw	1
   669  000CFC  6EC0               	movwf	192,c	;volatile
   670  000CFE                     
   671                           ;uart_lm35.c: 98:     ADCON2bits.ADFM = 1;
   672  000CFE  8EC0               	bsf	192,7,c	;volatile
   673  000D00                     
   674                           ;uart_lm35.c: 99:     ADCON0bits.ADON = 1;
   675  000D00  80C2               	bsf	194,0,c	;volatile
   676  000D02                     
   677                           ;uart_lm35.c: 101:         RTC_Read_Clock(0);
   678  000D02  0E00               	movlw	0
   679  000D04  ECAB  F008         	call	_RTC_Read_Clock
   680  000D08                     
   681                           ;uart_lm35.c: 102:         I2C_Stop();
   682  000D08  ECE7  F009         	call	_I2C_Stop	;wreg free
   683  000D0C                     
   684                           ;uart_lm35.c: 103:             hour = hour & (0x3f);
   685  000D0C  0E3F               	movlw	63
   686  000D0E  0100               	movlb	0	; () banked
   687  000D10  15BA               	andwf	_hour& (0+255),w,b
   688  000D12  6FBA               	movwf	_hour& (0+255),b
   689  000D14  6BBB               	clrf	(_hour+1)& (0+255),b
   690  000D16                     
   691                           ; BSR set to: 0
   692                           ;uart_lm35.c: 104:             sprintf(mins,"%x",min);
   693  000D16  0E8E               	movlw	low main@mins
   694  000D18  6F60               	movwf	sprintf@s& (0+255),b
   695  000D1A  0E00               	movlw	high main@mins
   696  000D1C  6F61               	movwf	(sprintf@s+1)& (0+255),b
   697  000D1E  0E09               	movlw	low STR_1
   698  000D20  6F62               	movwf	sprintf@fmt& (0+255),b
   699  000D22  0E08               	movlw	high STR_1
   700  000D24  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   701  000D26  C0BC  F064         	movff	_min,?_sprintf+4
   702  000D2A  C0BD  F065         	movff	_min+1,?_sprintf+5
   703  000D2E  EC82  F008         	call	_sprintf	;wreg free
   704  000D32                     
   705                           ;uart_lm35.c: 105:             sprintf(hours,"%x",hour);
   706  000D32  0E98               	movlw	low main@hours
   707  000D34  0100               	movlb	0	; () banked
   708  000D36  6F60               	movwf	sprintf@s& (0+255),b
   709  000D38  0E00               	movlw	high main@hours
   710  000D3A  6F61               	movwf	(sprintf@s+1)& (0+255),b
   711  000D3C  0E09               	movlw	low STR_1
   712  000D3E  6F62               	movwf	sprintf@fmt& (0+255),b
   713  000D40  0E08               	movlw	high STR_1
   714  000D42  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   715  000D44  C0BA  F064         	movff	_hour,?_sprintf+4
   716  000D48  C0BB  F065         	movff	_hour+1,?_sprintf+5
   717  000D4C  EC82  F008         	call	_sprintf	;wreg free
   718  000D50                     
   719                           ;uart_lm35.c: 106:             buffer_TX[10] = hours[0];
   720  000D50  C098  F0ED         	movff	main@hours,_buffer_TX+10
   721  000D54                     
   722                           ;uart_lm35.c: 107:             buffer_TX[11] = hours[1];
   723  000D54  C099  F0EE         	movff	main@hours+1,_buffer_TX+11
   724  000D58                     
   725                           ;uart_lm35.c: 108:              buffer_TX[12] = ':';
   726  000D58  0E3A               	movlw	58
   727  000D5A  0100               	movlb	0	; () banked
   728  000D5C  6FEF               	movwf	(_buffer_TX+12)& (0+255),b
   729  000D5E                     
   730                           ; BSR set to: 0
   731                           ;uart_lm35.c: 109:              buffer_TX[13] = mins[0];
   732  000D5E  C08E  F0F0         	movff	main@mins,_buffer_TX+13
   733  000D62                     
   734                           ; BSR set to: 0
   735                           ;uart_lm35.c: 110:             buffer_TX[14] = mins[1];
   736  000D62  C08F  F0F1         	movff	main@mins+1,_buffer_TX+14
   737  000D66                     
   738                           ; BSR set to: 0
   739                           ;uart_lm35.c: 113:         RTC_Read_Calendar(3);
   740  000D66  0E03               	movlw	3
   741  000D68  EC55  F008         	call	_RTC_Read_Calendar
   742  000D6C                     
   743                           ;uart_lm35.c: 114:         I2C_Stop();
   744  000D6C  ECE7  F009         	call	_I2C_Stop	;wreg free
   745  000D70                     
   746                           ;uart_lm35.c: 115:         sprintf(date,"%x-",Date);
   747  000D70  0E70               	movlw	low main@date
   748  000D72  0100               	movlb	0	; () banked
   749  000D74  6F60               	movwf	sprintf@s& (0+255),b
   750  000D76  0E00               	movlw	high main@date
   751  000D78  6F61               	movwf	(sprintf@s+1)& (0+255),b
   752  000D7A  0E05               	movlw	low STR_3
   753  000D7C  6F62               	movwf	sprintf@fmt& (0+255),b
   754  000D7E  0E08               	movlw	high STR_3
   755  000D80  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   756  000D82  C0B6  F064         	movff	_Date,?_sprintf+4
   757  000D86  C0B7  F065         	movff	_Date+1,?_sprintf+5
   758  000D8A  EC82  F008         	call	_sprintf	;wreg free
   759  000D8E                     
   760                           ;uart_lm35.c: 116:          sprintf(month,"%x-",Month);
   761  000D8E  0E7A               	movlw	low main@month
   762  000D90  0100               	movlb	0	; () banked
   763  000D92  6F60               	movwf	sprintf@s& (0+255),b
   764  000D94  0E00               	movlw	high main@month
   765  000D96  6F61               	movwf	(sprintf@s+1)& (0+255),b
   766  000D98  0E05               	movlw	low STR_3
   767  000D9A  6F62               	movwf	sprintf@fmt& (0+255),b
   768  000D9C  0E08               	movlw	high STR_3
   769  000D9E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   770  000DA0  C0B4  F064         	movff	_Month,?_sprintf+4
   771  000DA4  C0B5  F065         	movff	_Month+1,?_sprintf+5
   772  000DA8  EC82  F008         	call	_sprintf	;wreg free
   773  000DAC                     
   774                           ;uart_lm35.c: 117:         sprintf(year,"%x ",Year);
   775  000DAC  0E84               	movlw	low main@year
   776  000DAE  0100               	movlb	0	; () banked
   777  000DB0  6F60               	movwf	sprintf@s& (0+255),b
   778  000DB2  0E00               	movlw	high main@year
   779  000DB4  6F61               	movwf	(sprintf@s+1)& (0+255),b
   780  000DB6  0E01               	movlw	low STR_5
   781  000DB8  6F62               	movwf	sprintf@fmt& (0+255),b
   782  000DBA  0E08               	movlw	high STR_5
   783  000DBC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   784  000DBE  C0B2  F064         	movff	_Year,?_sprintf+4
   785  000DC2  C0B3  F065         	movff	_Year+1,?_sprintf+5
   786  000DC6  EC82  F008         	call	_sprintf	;wreg free
   787  000DCA                     
   788                           ;uart_lm35.c: 118:         buffer_TX[0] = date[0];
   789  000DCA  C070  F0E3         	movff	main@date,_buffer_TX
   790  000DCE                     
   791                           ;uart_lm35.c: 119:          buffer_TX[1] = date[1];
   792  000DCE  C071  F0E4         	movff	main@date+1,_buffer_TX+1
   793  000DD2                     
   794                           ;uart_lm35.c: 120:         buffer_TX[3] = month[0];
   795  000DD2  C07A  F0E6         	movff	main@month,_buffer_TX+3
   796  000DD6                     
   797                           ;uart_lm35.c: 121:         buffer_TX[4] = month[1];
   798  000DD6  C07B  F0E7         	movff	main@month+1,_buffer_TX+4
   799  000DDA                     
   800                           ;uart_lm35.c: 122:         buffer_TX[6] = year[0];
   801  000DDA  C084  F0E9         	movff	main@year,_buffer_TX+6
   802  000DDE                     
   803                           ;uart_lm35.c: 123:         buffer_TX[7] = year[1];
   804  000DDE  C085  F0EA         	movff	main@year+1,_buffer_TX+7
   805  000DE2                     l1803:
   806                           
   807                           ;uart_lm35.c: 138:             if (PORTAbits.RA1) {
   808  000DE2  A280               	btfss	128,1,c	;volatile
   809  000DE4  EFF6  F006         	goto	u1111
   810  000DE8  EFF8  F006         	goto	u1110
   811  000DEC                     u1111:
   812  000DEC  EFF1  F006         	goto	l1803
   813  000DF0                     u1110:
   814  000DF0                     
   815                           ;uart_lm35.c: 140:         for (int i = 0; i < 17; i++) {
   816  000DF0  0E00               	movlw	0
   817  000DF2  0100               	movlb	0	; () banked
   818  000DF4  6FA5               	movwf	(main@i+1)& (0+255),b
   819  000DF6  0E00               	movlw	0
   820  000DF8  6FA4               	movwf	main@i& (0+255),b
   821  000DFA                     l79:
   822                           
   823                           ;uart_lm35.c: 142:             while (!TXSTAbits.TRMT) {
   824  000DFA  A2AC               	btfss	172,1,c	;volatile
   825  000DFC  EF02  F007         	goto	u1121
   826  000E00  EF04  F007         	goto	u1120
   827  000E04                     u1121:
   828  000E04  EFFD  F006         	goto	l79
   829  000E08                     u1120:
   830  000E08                     
   831                           ;uart_lm35.c: 145:             TXREG = buffer_TX[i];
   832  000E08  0EE3               	movlw	low _buffer_TX
   833  000E0A  0100               	movlb	0	; () banked
   834  000E0C  25A4               	addwf	main@i& (0+255),w,b
   835  000E0E  6ED9               	movwf	fsr2l,c
   836  000E10  0E00               	movlw	high _buffer_TX
   837  000E12  21A5               	addwfc	(main@i+1)& (0+255),w,b
   838  000E14  6EDA               	movwf	fsr2h,c
   839  000E16  50DF               	movf	indf2,w,c
   840  000E18  6EAD               	movwf	173,c	;volatile
   841  000E1A                     
   842                           ; BSR set to: 0
   843                           ;uart_lm35.c: 147:         }
   844  000E1A  4BA4               	infsnz	main@i& (0+255),f,b
   845  000E1C  2BA5               	incf	(main@i+1)& (0+255),f,b
   846  000E1E                     
   847                           ; BSR set to: 0
   848  000E1E  BFA5               	btfsc	(main@i+1)& (0+255),7,b
   849  000E20  EF1B  F007         	goto	u1131
   850  000E24  51A5               	movf	(main@i+1)& (0+255),w,b
   851  000E26  E109               	bnz	u1130
   852  000E28  0E11               	movlw	17
   853  000E2A  5DA4               	subwf	main@i& (0+255),w,b
   854  000E2C  A0D8               	btfss	status,0,c
   855  000E2E  EF1B  F007         	goto	u1131
   856  000E32  EF1D  F007         	goto	u1130
   857  000E36                     u1131:
   858  000E36  EFFD  F006         	goto	l79
   859  000E3A                     u1130:
   860  000E3A                     
   861                           ; BSR set to: 0
   862                           ;uart_lm35.c: 148:         _delay((unsigned long)((100)*(8000000L/4000.0)));
   863  000E3A  0E02               	movlw	2
   864  000E3C  6E5F               	movwf	(??_main+1)^0,c
   865  000E3E  0E04               	movlw	4
   866  000E40  6E5E               	movwf	??_main^0,c
   867  000E42  0EBA               	movlw	186
   868  000E44                     u1177:
   869  000E44  2EE8               	decfsz	wreg,f,c
   870  000E46  D7FE               	bra	u1177
   871  000E48  2E5E               	decfsz	??_main^0,f,c
   872  000E4A  D7FC               	bra	u1177
   873  000E4C  2E5F               	decfsz	(??_main+1)^0,f,c
   874  000E4E  D7FA               	bra	u1177
   875  000E50  D000               	nop2	
   876  000E52  EFF1  F006         	goto	l1803
   877  000E56  EF00  F000         	goto	start
   878  000E5A                     __end_of_main:
   879                           	callstack 0
   880                           
   881 ;; *************** function _sprintf *****************
   882 ;; Defined at:
   883 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  s               2    0[BANK0 ] PTR unsigned char 
   886 ;;		 -> main@year(10), main@month(10), main@date(10), main@hours(10), 
   887 ;;		 -> main@mins(10), 
   888 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   889 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(3), 
   890 ;;		 -> STR_1(3), 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  f               6   10[BANK0 ] struct _IO_FILE
   893 ;;  ap              2    8[BANK0 ] PTR void [1]
   894 ;;		 -> ?_sprintf(2), 
   895 ;;  ret             2    0        int 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  2    0[BANK0 ] int 
   898 ;; Registers used:
   899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   905 ;;      Params:         0       6       0       0       0       0       0       0       0
   906 ;;      Locals:         0      10       0       0       0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0
   908 ;;      Totals:         0      16       0       0       0       0       0       0       0
   909 ;;Total ram usage:       16 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    7
   912 ;; This function calls:
   913 ;;		_vfprintf
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text1
   920  001104                     __ptext1:
   921                           	callstack 0
   922  001104                     _sprintf:
   923                           	callstack 23
   924  001104  0E64               	movlw	low (?_sprintf+4)
   925  001106  0100               	movlb	0	; () banked
   926  001108  6F68               	movwf	sprintf@ap& (0+255),b
   927  00110A  0E00               	movlw	high (?_sprintf+4)
   928  00110C  6F69               	movwf	(sprintf@ap+1)& (0+255),b
   929  00110E  C060  F06A         	movff	sprintf@s,sprintf@f
   930  001112  C061  F06B         	movff	sprintf@s+1,sprintf@f+1
   931  001116                     
   932                           ; BSR set to: 0
   933  001116  0E00               	movlw	0
   934  001118  6F6D               	movwf	(sprintf@f+3)& (0+255),b
   935  00111A  0E00               	movlw	0
   936  00111C  6F6C               	movwf	(sprintf@f+2)& (0+255),b
   937  00111E                     
   938                           ; BSR set to: 0
   939  00111E  0E00               	movlw	0
   940  001120  6F6F               	movwf	(sprintf@f+5)& (0+255),b
   941  001122  0E00               	movlw	0
   942  001124  6F6E               	movwf	(sprintf@f+4)& (0+255),b
   943  001126                     
   944                           ; BSR set to: 0
   945  001126  0E6A               	movlw	low sprintf@f
   946  001128  6E56               	movwf	vfprintf@fp^0,c
   947  00112A  0E00               	movlw	high sprintf@f
   948  00112C  6E57               	movwf	(vfprintf@fp+1)^0,c
   949  00112E  C062  F058         	movff	sprintf@fmt,vfprintf@fmt
   950  001132  C063  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
   951  001136  0E68               	movlw	low sprintf@ap
   952  001138  6E5A               	movwf	vfprintf@ap^0,c
   953  00113A  0E00               	movlw	high sprintf@ap
   954  00113C  6E5B               	movwf	(vfprintf@ap+1)^0,c
   955  00113E  ECF5  F007         	call	_vfprintf	;wreg free
   956  001142  0100               	movlb	0	; () banked
   957  001144  516C               	movf	(sprintf@f+2)& (0+255),w,b
   958  001146  2560               	addwf	sprintf@s& (0+255),w,b
   959  001148  6ED9               	movwf	fsr2l,c
   960  00114A  516D               	movf	(sprintf@f+3)& (0+255),w,b
   961  00114C  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
   962  00114E  6EDA               	movwf	fsr2h,c
   963  001150  0E00               	movlw	0
   964  001152  6EDF               	movwf	indf2,c
   965  001154                     
   966                           ; BSR set to: 0
   967  001154  0012               	return		;funcret
   968  001156                     __end_of_sprintf:
   969                           	callstack 0
   970                           
   971 ;; *************** function _vfprintf *****************
   972 ;; Defined at:
   973 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
   976 ;;		 -> sprintf@f(6), 
   977 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
   978 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(3), 
   979 ;;		 -> STR_1(3), 
   980 ;;  ap              2   89[COMRAM] PTR PTR void 
   981 ;;		 -> sprintf@ap(2), 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
   984 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(3), 
   985 ;;		 -> STR_1(3), 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  2   85[COMRAM] int 
   988 ;; Registers used:
   989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   995 ;;      Params:         6       0       0       0       0       0       0       0       0
   996 ;;      Locals:         2       0       0       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0       0       0
   998 ;;      Totals:         8       0       0       0       0       0       0       0       0
   999 ;;Total ram usage:        8 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    6
  1002 ;; This function calls:
  1003 ;;		_vfpfcnvrt
  1004 ;; This function is called by:
  1005 ;;		_sprintf
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text2
  1010  000FEA                     __ptext2:
  1011                           	callstack 0
  1012  000FEA                     _vfprintf:
  1013                           	callstack 23
  1014  000FEA                     
  1015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1016  000FEA  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1017  000FEE  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1018  000FF2                     
  1019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1020  000FF2  0E00               	movlw	0
  1021  000FF4  0100               	movlb	0	; () banked
  1022  000FF6  6FAB               	movwf	(_nout+1)& (0+255),b
  1023  000FF8  0E00               	movlw	0
  1024  000FFA  6FAA               	movwf	_nout& (0+255),b
  1025                           
  1026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1027  000FFC  EF13  F008         	goto	l1673
  1028  001000                     l1671:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1032  001000  C056  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1033  001004  C057  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1034  001008  0E5C               	movlw	low vfprintf@cfmt
  1035  00100A  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1036  00100C  0E00               	movlw	high vfprintf@cfmt
  1037  00100E  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1038  001010  C05A  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1039  001014  C05B  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1040  001018  EC73  F005         	call	_vfpfcnvrt	;wreg free
  1041  00101C  5043               	movf	?_vfpfcnvrt^0,w,c
  1042  00101E  0100               	movlb	0	; () banked
  1043  001020  27AA               	addwf	_nout& (0+255),f,b
  1044  001022  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1045  001024  23AB               	addwfc	(_nout+1)& (0+255),f,b
  1046  001026                     l1673:
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1050  001026  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1051  00102A  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1052  00102E                     	if	0	;tblptru may be non-zero
  1053  00102E                     	endif
  1054  00102E                     	if	0	;tblptru may be non-zero
  1055  00102E                     	endif
  1056  00102E  0008               	tblrd		*
  1057  001030  50F5               	movf	tablat,w,c
  1058  001032  0900               	iorlw	0
  1059  001034  A4D8               	btfss	status,2,c
  1060  001036  EF1F  F008         	goto	u1101
  1061  00103A  EF21  F008         	goto	u1100
  1062  00103E                     u1101:
  1063  00103E  EF00  F008         	goto	l1671
  1064  001042                     u1100:
  1065  001042                     
  1066                           ; BSR set to: 0
  1067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1068  001042  C0AA  F056         	movff	_nout,?_vfprintf
  1069  001046  C0AB  F057         	movff	_nout+1,?_vfprintf+1
  1070  00104A                     
  1071                           ; BSR set to: 0
  1072  00104A  0012               	return		;funcret
  1073  00104C                     __end_of_vfprintf:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _vfpfcnvrt *****************
  1077 ;; Defined at:
  1078 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1081 ;;		 -> sprintf@f(6), 
  1082 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1083 ;;		 -> vfprintf@cfmt(2), 
  1084 ;;  ap              2   70[COMRAM] PTR PTR void 
  1085 ;;		 -> sprintf@ap(2), 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  llu             8   76[COMRAM] unsigned long long 
  1088 ;;  ll              8    0        long long 
  1089 ;;  f               4    0        long long 
  1090 ;;  vp              3    0        PTR void 
  1091 ;;  ct              3    0        unsigned char [3]
  1092 ;;  cp              3    0        PTR unsigned char 
  1093 ;;  i               2    0        int 
  1094 ;;  done            2    0        int 
  1095 ;;  c               1   84[COMRAM] unsigned char 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  2   66[COMRAM] int 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1105 ;;      Params:         6       0       0       0       0       0       0       0       0
  1106 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1107 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1108 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1109 ;;Total ram usage:       19 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    5
  1112 ;; This function calls:
  1113 ;;		_fputc
  1114 ;;		_xtoa
  1115 ;; This function is called by:
  1116 ;;		_vfprintf
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text3
  1121  000AE6                     __ptext3:
  1122                           	callstack 0
  1123  000AE6                     _vfpfcnvrt:
  1124                           	callstack 23
  1125  000AE6                     
  1126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1127  000AE6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1128  000AEA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1129  000AEE  CFDE FFF6          	movff	postinc2,tblptrl
  1130  000AF2  CFDD FFF7          	movff	postdec2,tblptrh
  1131  000AF6                     	if	0	;tblptru may be non-zero
  1132  000AF6                     	endif
  1133  000AF6                     	if	0	;tblptru may be non-zero
  1134  000AF6                     	endif
  1135  000AF6  0008               	tblrd		*
  1136  000AF8  50F5               	movf	tablat,w,c
  1137  000AFA  0A25               	xorlw	37
  1138  000AFC  A4D8               	btfss	status,2,c
  1139  000AFE  EF83  F005         	goto	u991
  1140  000B02  EF85  F005         	goto	u990
  1141  000B06                     u991:
  1142  000B06  EF3F  F006         	goto	l1625
  1143  000B0A                     u990:
  1144  000B0A                     
  1145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1146  000B0A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1147  000B0E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1148  000B12  2ADE               	incf	postinc2,f,c
  1149  000B14  0E00               	movlw	0
  1150  000B16  22DD               	addwfc	postdec2,f,c
  1151  000B18                     
  1152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1153  000B18  0E00               	movlw	0
  1154  000B1A  0100               	movlb	0	; () banked
  1155  000B1C  6FAD               	movwf	(_width+1)& (0+255),b
  1156  000B1E  0E00               	movlw	0
  1157  000B20  6FAC               	movwf	_width& (0+255),b
  1158  000B22  C0AC  F0B0         	movff	_width,_flags
  1159  000B26  C0AD  F0B1         	movff	_width+1,_flags+1
  1160  000B2A                     
  1161                           ; BSR set to: 0
  1162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1163  000B2A  69AE               	setf	_prec& (0+255),b
  1164  000B2C  69AF               	setf	(_prec+1)& (0+255),b
  1165  000B2E                     
  1166                           ; BSR set to: 0
  1167                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1168  000B2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1169  000B32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1170  000B36  CFDE FFF6          	movff	postinc2,tblptrl
  1171  000B3A  CFDD FFF7          	movff	postdec2,tblptrh
  1172  000B3E                     	if	0	;tblptru may be non-zero
  1173  000B3E                     	endif
  1174  000B3E                     	if	0	;tblptru may be non-zero
  1175  000B3E                     	endif
  1176  000B3E  0008               	tblrd		*
  1177  000B40  50F5               	movf	tablat,w,c
  1178  000B42  0A78               	xorlw	120
  1179  000B44  B4D8               	btfsc	status,2,c
  1180  000B46  EFA7  F005         	goto	u1001
  1181  000B4A  EFA9  F005         	goto	u1000
  1182  000B4E                     u1001:
  1183  000B4E  EFBB  F005         	goto	l1599
  1184  000B52                     u1000:
  1185  000B52                     
  1186                           ; BSR set to: 0
  1187  000B52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1188  000B56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1189  000B5A  CFDE FFF6          	movff	postinc2,tblptrl
  1190  000B5E  CFDD FFF7          	movff	postdec2,tblptrh
  1191  000B62                     	if	0	;tblptru may be non-zero
  1192  000B62                     	endif
  1193  000B62                     	if	0	;tblptru may be non-zero
  1194  000B62                     	endif
  1195  000B62  0008               	tblrd		*
  1196  000B64  50F5               	movf	tablat,w,c
  1197  000B66  0A58               	xorlw	88
  1198  000B68  A4D8               	btfss	status,2,c
  1199  000B6A  EFB9  F005         	goto	u1011
  1200  000B6E  EFBB  F005         	goto	u1010
  1201  000B72                     u1011:
  1202  000B72  EF09  F006         	goto	l1609
  1203  000B76                     u1010:
  1204  000B76                     l1599:
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1208  000B76  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1209  000B7A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1210  000B7E  CFDE FFF6          	movff	postinc2,tblptrl
  1211  000B82  CFDD FFF7          	movff	postdec2,tblptrh
  1212  000B86                     	if	0	;tblptru may be non-zero
  1213  000B86                     	endif
  1214  000B86                     	if	0	;tblptru may be non-zero
  1215  000B86                     	endif
  1216  000B86  0008               	tblrd		*
  1217  000B88  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1218  000B8C                     
  1219                           ; BSR set to: 0
  1220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1221  000B8C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1222  000B90  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1223  000B94  2ADE               	incf	postinc2,f,c
  1224  000B96  0E00               	movlw	0
  1225  000B98  22DD               	addwfc	postdec2,f,c
  1226  000B9A                     
  1227                           ; BSR set to: 0
  1228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1229  000B9A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1230  000B9E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1231  000BA2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1232  000BA6  0E02               	movlw	2
  1233  000BA8  26DE               	addwf	postinc2,f,c
  1234  000BAA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1235  000BAE  0E00               	movlw	0
  1236  000BB0  22DD               	addwfc	postdec2,f,c
  1237  000BB2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1238  000BB6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1239  000BBA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  1240  000BBE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  1241  000BC2  C04B  F04D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1242  000BC6  C04C  F04E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1243  000BCA  6A4F               	clrf	(vfpfcnvrt@llu+2)^0,c
  1244  000BCC  6A50               	clrf	(vfpfcnvrt@llu+3)^0,c
  1245  000BCE  6A51               	clrf	(vfpfcnvrt@llu+4)^0,c
  1246  000BD0  6A52               	clrf	(vfpfcnvrt@llu+5)^0,c
  1247  000BD2  6A53               	clrf	(vfpfcnvrt@llu+6)^0,c
  1248  000BD4  6A54               	clrf	(vfpfcnvrt@llu+7)^0,c
  1249  000BD6                     
  1250                           ; BSR set to: 0
  1251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1252  000BD6  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1253  000BDA  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1254  000BDE  C04D  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1255  000BE2  C04E  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1256  000BE6  C04F  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1257  000BEA  C050  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1258  000BEE  C051  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1259  000BF2  C052  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1260  000BF6  C053  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1261  000BFA  C054  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1262  000BFE  C055  F026         	movff	vfpfcnvrt@c,xtoa@x
  1263  000C02  EC07  F004         	call	_xtoa	;wreg free
  1264  000C06  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  1265  000C0A  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1266  000C0E  EF5A  F006         	goto	l950
  1267  000C12                     l1609:
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1271  000C12  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1272  000C16  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1273  000C1A  CFDE FFF6          	movff	postinc2,tblptrl
  1274  000C1E  CFDD FFF7          	movff	postdec2,tblptrh
  1275  000C22                     	if	0	;tblptru may be non-zero
  1276  000C22                     	endif
  1277  000C22                     	if	0	;tblptru may be non-zero
  1278  000C22                     	endif
  1279  000C22  0008               	tblrd		*
  1280  000C24  50F5               	movf	tablat,w,c
  1281  000C26  0A25               	xorlw	37
  1282  000C28  A4D8               	btfss	status,2,c
  1283  000C2A  EF19  F006         	goto	u1021
  1284  000C2E  EF1B  F006         	goto	u1020
  1285  000C32                     u1021:
  1286  000C32  EF32  F006         	goto	l1619
  1287  000C36                     u1020:
  1288  000C36                     
  1289                           ; BSR set to: 0
  1290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1291  000C36  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1292  000C3A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1293  000C3E  2ADE               	incf	postinc2,f,c
  1294  000C40  0E00               	movlw	0
  1295  000C42  22DD               	addwfc	postdec2,f,c
  1296  000C44                     
  1297                           ; BSR set to: 0
  1298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1299  000C44  0E00               	movlw	0
  1300  000C46  6E02               	movwf	(fputc@c+1)^0,c
  1301  000C48  0E25               	movlw	37
  1302  000C4A  6E01               	movwf	fputc@c^0,c
  1303  000C4C  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1304  000C50  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1305  000C54  EC2D  F007         	call	_fputc	;wreg free
  1306  000C58                     l1615:
  1307                           
  1308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1309  000C58  0E00               	movlw	0
  1310  000C5A  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1311  000C5C  0E01               	movlw	1
  1312  000C5E  6E43               	movwf	?_vfpfcnvrt^0,c
  1313  000C60  EF5A  F006         	goto	l950
  1314  000C64                     l1619:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1318  000C64  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1319  000C68  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1320  000C6C  2ADE               	incf	postinc2,f,c
  1321  000C6E  0E00               	movlw	0
  1322  000C70  22DD               	addwfc	postdec2,f,c
  1323  000C72                     
  1324                           ; BSR set to: 0
  1325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1326  000C72  0E00               	movlw	0
  1327  000C74  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1328  000C76  0E00               	movlw	0
  1329  000C78  6E43               	movwf	?_vfpfcnvrt^0,c
  1330  000C7A  EF5A  F006         	goto	l950
  1331  000C7E                     l1625:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1334  000C7E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1335  000C82  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1336  000C86  CFDE FFF6          	movff	postinc2,tblptrl
  1337  000C8A  CFDD FFF7          	movff	postdec2,tblptrh
  1338  000C8E                     	if	0	;tblptru may be non-zero
  1339  000C8E                     	endif
  1340  000C8E                     	if	0	;tblptru may be non-zero
  1341  000C8E                     	endif
  1342  000C8E  0008               	tblrd		*
  1343  000C90  50F5               	movf	tablat,w,c
  1344  000C92  6E01               	movwf	fputc@c^0,c
  1345  000C94  6A02               	clrf	(fputc@c+1)^0,c
  1346  000C96  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1347  000C9A  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1348  000C9E  EC2D  F007         	call	_fputc	;wreg free
  1349  000CA2                     
  1350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1351  000CA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1352  000CA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1353  000CAA  2ADE               	incf	postinc2,f,c
  1354  000CAC  0E00               	movlw	0
  1355  000CAE  22DD               	addwfc	postdec2,f,c
  1356  000CB0  EF2C  F006         	goto	l1615
  1357  000CB4                     l950:
  1358  000CB4  0012               	return		;funcret
  1359  000CB6                     __end_of_vfpfcnvrt:
  1360                           	callstack 0
  1361                           
  1362 ;; *************** function _xtoa *****************
  1363 ;; Defined at:
  1364 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1367 ;;		 -> sprintf@f(6), 
  1368 ;;  d               8   29[COMRAM] unsigned long long 
  1369 ;;  x               1   37[COMRAM] unsigned char 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  n               8   54[COMRAM] unsigned long long 
  1372 ;;  c               2   64[COMRAM] int 
  1373 ;;  i               2   62[COMRAM] int 
  1374 ;;  w               2   52[COMRAM] int 
  1375 ;;  p               2   50[COMRAM] int 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  2   27[COMRAM] int 
  1378 ;; Registers used:
  1379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1385 ;;      Params:        11       0       0       0       0       0       0       0       0
  1386 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1387 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1388 ;;      Totals:        39       0       0       0       0       0       0       0       0
  1389 ;;Total ram usage:       39 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    4
  1392 ;; This function calls:
  1393 ;;		_isalpha
  1394 ;;		_isupper
  1395 ;;		_pad
  1396 ;;		_toupper
  1397 ;; This function is called by:
  1398 ;;		_vfpfcnvrt
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text4
  1403  00080E                     __ptext4:
  1404                           	callstack 0
  1405  00080E                     _xtoa:
  1406                           	callstack 23
  1407  00080E                     
  1408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  1409  00080E  0100               	movlb	0	; () banked
  1410  000810  BFAF               	btfsc	(_prec+1)& (0+255),7,b
  1411  000812  EF0D  F004         	goto	u791
  1412  000816  EF0F  F004         	goto	u790
  1413  00081A                     u791:
  1414  00081A  EF10  F004         	goto	l1505
  1415  00081E                     u790:
  1416  00081E                     
  1417                           ; BSR set to: 0
  1418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  1419  00081E  93B0               	bcf	_flags& (0+255),1,b
  1420  000820                     l1505:
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  1424  000820  BFAF               	btfsc	(_prec+1)& (0+255),7,b
  1425  000822  EF1D  F004         	goto	u800
  1426  000826  51AF               	movf	(_prec+1)& (0+255),w,b
  1427  000828  E106               	bnz	u801
  1428  00082A  05AE               	decf	_prec& (0+255),w,b
  1429  00082C  B0D8               	btfsc	status,0,c
  1430  00082E  EF1B  F004         	goto	u801
  1431  000832  EF1D  F004         	goto	u800
  1432  000836                     u801:
  1433  000836  EF23  F004         	goto	l918
  1434  00083A                     u800:
  1435  00083A                     
  1436                           ; BSR set to: 0
  1437  00083A  0E00               	movlw	0
  1438  00083C  6E34               	movwf	(xtoa@p+1)^0,c
  1439  00083E  0E01               	movlw	1
  1440  000840  6E33               	movwf	xtoa@p^0,c
  1441  000842  EF27  F004         	goto	l920
  1442  000846                     l918:
  1443                           
  1444                           ; BSR set to: 0
  1445  000846  C0AE  F033         	movff	_prec,xtoa@p
  1446  00084A  C0AF  F034         	movff	_prec+1,xtoa@p+1
  1447  00084E                     l920:
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  1451  00084E  C0AC  F035         	movff	_width,xtoa@w
  1452  000852  C0AD  F036         	movff	_width+1,xtoa@w+1
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  1455  000856  A9B0               	btfss	_flags& (0+255),4,b
  1456  000858  EF30  F004         	goto	u811
  1457  00085C  EF32  F004         	goto	u810
  1458  000860                     u811:
  1459  000860  EF36  F004         	goto	l1511
  1460  000864                     u810:
  1461  000864                     
  1462                           ; BSR set to: 0
  1463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  1464  000864  0EFE               	movlw	254
  1465  000866  2635               	addwf	xtoa@w^0,f,c
  1466  000868  0EFF               	movlw	255
  1467  00086A  2236               	addwfc	(xtoa@w+1)^0,f,c
  1468  00086C                     l1511:
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  1472  00086C  C01E  F037         	movff	xtoa@d,xtoa@n
  1473  000870  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  1474  000874  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  1475  000878  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  1476  00087C  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  1477  000880  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  1478  000884  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  1479  000888  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  1480  00088C                     
  1481                           ; BSR set to: 0
  1482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  1483  00088C  0E00               	movlw	0
  1484  00088E  6E40               	movwf	(xtoa@i+1)^0,c
  1485  000890  0E1F               	movlw	31
  1486  000892  6E3F               	movwf	xtoa@i^0,c
  1487  000894                     
  1488                           ; BSR set to: 0
  1489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  1490  000894  0E00               	movlw	0
  1491  000896  6FE2               	movwf	(_dbuf+31)& (0+255),b
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1494  000898  EF01  F005         	goto	l1547
  1495  00089C                     l1517:
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  1498  00089C  063F               	decf	xtoa@i^0,f,c
  1499  00089E  A0D8               	btfss	status,0,c
  1500  0008A0  0640               	decf	(xtoa@i+1)^0,f,c
  1501  0008A2                     
  1502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  1503  0008A2  0E0F               	movlw	15
  1504  0008A4  1437               	andwf	xtoa@n^0,w,c
  1505  0008A6  6E41               	movwf	xtoa@c^0,c
  1506  0008A8  6A42               	clrf	(xtoa@c+1)^0,c
  1507  0008AA                     
  1508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  1509  0008AA  BE42               	btfsc	(xtoa@c+1)^0,7,c
  1510  0008AC  EF61  F004         	goto	u821
  1511  0008B0  5042               	movf	(xtoa@c+1)^0,w,c
  1512  0008B2  E109               	bnz	u820
  1513  0008B4  0E0A               	movlw	10
  1514  0008B6  5C41               	subwf	xtoa@c^0,w,c
  1515  0008B8  A0D8               	btfss	status,0,c
  1516  0008BA  EF61  F004         	goto	u821
  1517  0008BE  EF63  F004         	goto	u820
  1518  0008C2                     u821:
  1519  0008C2  EF6B  F004         	goto	l1525
  1520  0008C6                     u820:
  1521  0008C6  0E57               	movlw	87
  1522  0008C8  2441               	addwf	xtoa@c^0,w,c
  1523  0008CA  6E41               	movwf	xtoa@c^0,c
  1524  0008CC  0E00               	movlw	0
  1525  0008CE  2042               	addwfc	(xtoa@c+1)^0,w,c
  1526  0008D0  6E42               	movwf	(xtoa@c+1)^0,c
  1527  0008D2  EF71  F004         	goto	l927
  1528  0008D6                     l1525:
  1529  0008D6  0E30               	movlw	48
  1530  0008D8  2441               	addwf	xtoa@c^0,w,c
  1531  0008DA  6E41               	movwf	xtoa@c^0,c
  1532  0008DC  0E00               	movlw	0
  1533  0008DE  2042               	addwfc	(xtoa@c+1)^0,w,c
  1534  0008E0  6E42               	movwf	(xtoa@c+1)^0,c
  1535  0008E2                     l927:
  1536  0008E2  0EBF               	movlw	191
  1537  0008E4  6E27               	movwf	??_xtoa^0,c
  1538  0008E6  0EFF               	movlw	255
  1539  0008E8  6E28               	movwf	(??_xtoa+1)^0,c
  1540  0008EA  5026               	movf	xtoa@x^0,w,c
  1541  0008EC  6E29               	movwf	(??_xtoa+2)^0,c
  1542  0008EE  6A2A               	clrf	(??_xtoa+3)^0,c
  1543  0008F0  5027               	movf	??_xtoa^0,w,c
  1544  0008F2  2629               	addwf	(??_xtoa+2)^0,f,c
  1545  0008F4  5028               	movf	(??_xtoa+1)^0,w,c
  1546  0008F6  222A               	addwfc	(??_xtoa+3)^0,f,c
  1547  0008F8  502A               	movf	(??_xtoa+3)^0,w,c
  1548  0008FA  E10A               	bnz	u830
  1549  0008FC  0E1A               	movlw	26
  1550  0008FE  5C29               	subwf	(??_xtoa+2)^0,w,c
  1551  000900  A0D8               	btfss	status,0,c
  1552  000902  EF85  F004         	goto	u831
  1553  000906  EF88  F004         	goto	u830
  1554  00090A                     u831:
  1555  00090A  0E01               	movlw	1
  1556  00090C  EF89  F004         	goto	u840
  1557  000910                     u830:
  1558  000910  0E00               	movlw	0
  1559  000912                     u840:
  1560  000912  6E2F               	movwf	_xtoa$1395^0,c
  1561  000914  6A30               	clrf	(_xtoa$1395+1)^0,c
  1562  000916  502F               	movf	_xtoa$1395^0,w,c
  1563  000918  1030               	iorwf	(_xtoa$1395+1)^0,w,c
  1564  00091A  B4D8               	btfsc	status,2,c
  1565  00091C  EF92  F004         	goto	u851
  1566  000920  EF94  F004         	goto	u850
  1567  000924                     u851:
  1568  000924  EFC4  F004         	goto	l1539
  1569  000928                     u850:
  1570  000928  0E9F               	movlw	159
  1571  00092A  6E27               	movwf	??_xtoa^0,c
  1572  00092C  0EFF               	movlw	255
  1573  00092E  6E28               	movwf	(??_xtoa+1)^0,c
  1574  000930  0E20               	movlw	32
  1575  000932  1041               	iorwf	xtoa@c^0,w,c
  1576  000934  6E29               	movwf	(??_xtoa+2)^0,c
  1577  000936  0E00               	movlw	0
  1578  000938  1042               	iorwf	(xtoa@c+1)^0,w,c
  1579  00093A  6E2A               	movwf	(??_xtoa+3)^0,c
  1580  00093C  5027               	movf	??_xtoa^0,w,c
  1581  00093E  2629               	addwf	(??_xtoa+2)^0,f,c
  1582  000940  5028               	movf	(??_xtoa+1)^0,w,c
  1583  000942  222A               	addwfc	(??_xtoa+3)^0,f,c
  1584  000944  502A               	movf	(??_xtoa+3)^0,w,c
  1585  000946  E10A               	bnz	u860
  1586  000948  0E1A               	movlw	26
  1587  00094A  5C29               	subwf	(??_xtoa+2)^0,w,c
  1588  00094C  A0D8               	btfss	status,0,c
  1589  00094E  EFAB  F004         	goto	u861
  1590  000952  EFAE  F004         	goto	u860
  1591  000956                     u861:
  1592  000956  0E01               	movlw	1
  1593  000958  EFAF  F004         	goto	u870
  1594  00095C                     u860:
  1595  00095C  0E00               	movlw	0
  1596  00095E                     u870:
  1597  00095E  6E31               	movwf	_xtoa$1396^0,c
  1598  000960  6A32               	clrf	(_xtoa$1396+1)^0,c
  1599  000962  5031               	movf	_xtoa$1396^0,w,c
  1600  000964  1032               	iorwf	(_xtoa$1396+1)^0,w,c
  1601  000966  B4D8               	btfsc	status,2,c
  1602  000968  EFB8  F004         	goto	u881
  1603  00096C  EFBA  F004         	goto	u880
  1604  000970                     u881:
  1605  000970  EFC4  F004         	goto	l1539
  1606  000974                     u880:
  1607  000974                     
  1608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  1609  000974  C041  F007         	movff	xtoa@c,toupper@c
  1610  000978  C042  F008         	movff	xtoa@c+1,toupper@c+1
  1611  00097C  EC26  F008         	call	_toupper	;wreg free
  1612  000980  C007  F041         	movff	?_toupper,xtoa@c
  1613  000984  C008  F042         	movff	?_toupper+1,xtoa@c+1
  1614  000988                     l1539:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  1617  000988  0EC3               	movlw	low _dbuf
  1618  00098A  243F               	addwf	xtoa@i^0,w,c
  1619  00098C  6ED9               	movwf	fsr2l,c
  1620  00098E  0E00               	movlw	high _dbuf
  1621  000990  2040               	addwfc	(xtoa@i+1)^0,w,c
  1622  000992  6EDA               	movwf	fsr2h,c
  1623  000994  C041  FFDF         	movff	xtoa@c,indf2
  1624  000998                     
  1625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  1626  000998  0633               	decf	xtoa@p^0,f,c
  1627  00099A  A0D8               	btfss	status,0,c
  1628  00099C  0634               	decf	(xtoa@p+1)^0,f,c
  1629  00099E                     
  1630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  1631  00099E  0635               	decf	xtoa@w^0,f,c
  1632  0009A0  A0D8               	btfss	status,0,c
  1633  0009A2  0636               	decf	(xtoa@w+1)^0,f,c
  1634  0009A4                     
  1635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  1636  0009A4  C037  F027         	movff	xtoa@n,??_xtoa
  1637  0009A8  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  1638  0009AC  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  1639  0009B0  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  1640  0009B4  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  1641  0009B8  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  1642  0009BC  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  1643  0009C0  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  1644  0009C4  0E05               	movlw	5
  1645  0009C6  EFEE  F004         	goto	u890
  1646  0009CA                     u895:
  1647  0009CA  90D8               	bcf	status,0,c
  1648  0009CC  322E               	rrcf	(??_xtoa+7)^0,f,c
  1649  0009CE  322D               	rrcf	(??_xtoa+6)^0,f,c
  1650  0009D0  322C               	rrcf	(??_xtoa+5)^0,f,c
  1651  0009D2  322B               	rrcf	(??_xtoa+4)^0,f,c
  1652  0009D4  322A               	rrcf	(??_xtoa+3)^0,f,c
  1653  0009D6  3229               	rrcf	(??_xtoa+2)^0,f,c
  1654  0009D8  3228               	rrcf	(??_xtoa+1)^0,f,c
  1655  0009DA  3227               	rrcf	??_xtoa^0,f,c
  1656  0009DC                     u890:
  1657  0009DC  2EE8               	decfsz	wreg,f,c
  1658  0009DE  EFE5  F004         	goto	u895
  1659  0009E2  C027  F037         	movff	??_xtoa,xtoa@n
  1660  0009E6  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  1661  0009EA  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  1662  0009EE  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  1663  0009F2  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  1664  0009F6  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  1665  0009FA  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  1666  0009FE  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  1667  000A02                     l1547:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1670  000A02  BE40               	btfsc	(xtoa@i+1)^0,7,c
  1671  000A04  EF0D  F005         	goto	u901
  1672  000A08  5040               	movf	(xtoa@i+1)^0,w,c
  1673  000A0A  E109               	bnz	u900
  1674  000A0C  0E02               	movlw	2
  1675  000A0E  5C3F               	subwf	xtoa@i^0,w,c
  1676  000A10  A0D8               	btfss	status,0,c
  1677  000A12  EF0D  F005         	goto	u901
  1678  000A16  EF0F  F005         	goto	u900
  1679  000A1A                     u901:
  1680  000A1A  EF40  F005         	goto	l941
  1681  000A1E                     u900:
  1682  000A1E  5037               	movf	xtoa@n^0,w,c
  1683  000A20  1038               	iorwf	(xtoa@n+1)^0,w,c
  1684  000A22  1039               	iorwf	(xtoa@n+2)^0,w,c
  1685  000A24  103A               	iorwf	(xtoa@n+3)^0,w,c
  1686  000A26  103B               	iorwf	(xtoa@n+4)^0,w,c
  1687  000A28  103C               	iorwf	(xtoa@n+5)^0,w,c
  1688  000A2A  103D               	iorwf	(xtoa@n+6)^0,w,c
  1689  000A2C  103E               	iorwf	(xtoa@n+7)^0,w,c
  1690  000A2E  A4D8               	btfss	status,2,c
  1691  000A30  EF1C  F005         	goto	u911
  1692  000A34  EF1E  F005         	goto	u910
  1693  000A38                     u911:
  1694  000A38  EF4E  F004         	goto	l1517
  1695  000A3C                     u910:
  1696  000A3C  BE34               	btfsc	(xtoa@p+1)^0,7,c
  1697  000A3E  EF2B  F005         	goto	u920
  1698  000A42  5034               	movf	(xtoa@p+1)^0,w,c
  1699  000A44  E106               	bnz	u921
  1700  000A46  0433               	decf	xtoa@p^0,w,c
  1701  000A48  B0D8               	btfsc	status,0,c
  1702  000A4A  EF29  F005         	goto	u921
  1703  000A4E  EF2B  F005         	goto	u920
  1704  000A52                     u921:
  1705  000A52  EF4E  F004         	goto	l1517
  1706  000A56                     u920:
  1707  000A56  BE36               	btfsc	(xtoa@w+1)^0,7,c
  1708  000A58  EF36  F005         	goto	u931
  1709  000A5C  5036               	movf	(xtoa@w+1)^0,w,c
  1710  000A5E  E108               	bnz	u930
  1711  000A60  0435               	decf	xtoa@w^0,w,c
  1712  000A62  A0D8               	btfss	status,0,c
  1713  000A64  EF36  F005         	goto	u931
  1714  000A68  EF38  F005         	goto	u930
  1715  000A6C                     u931:
  1716  000A6C  EF40  F005         	goto	l941
  1717  000A70                     u930:
  1718  000A70  0100               	movlb	0	; () banked
  1719  000A72  B3B0               	btfsc	_flags& (0+255),1,b
  1720  000A74  EF3E  F005         	goto	u941
  1721  000A78  EF40  F005         	goto	u940
  1722  000A7C                     u941:
  1723  000A7C  EF4E  F004         	goto	l1517
  1724  000A80                     u940:
  1725  000A80                     l941:
  1726                           
  1727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  1728  000A80  0100               	movlb	0	; () banked
  1729  000A82  A9B0               	btfss	_flags& (0+255),4,b
  1730  000A84  EF46  F005         	goto	u951
  1731  000A88  EF48  F005         	goto	u950
  1732  000A8C                     u951:
  1733  000A8C  EF5E  F005         	goto	l1563
  1734  000A90                     u950:
  1735  000A90                     
  1736                           ; BSR set to: 0
  1737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  1738  000A90  063F               	decf	xtoa@i^0,f,c
  1739  000A92  A0D8               	btfss	status,0,c
  1740  000A94  0640               	decf	(xtoa@i+1)^0,f,c
  1741  000A96                     
  1742                           ; BSR set to: 0
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  1744  000A96  0EC3               	movlw	low _dbuf
  1745  000A98  243F               	addwf	xtoa@i^0,w,c
  1746  000A9A  6ED9               	movwf	fsr2l,c
  1747  000A9C  0E00               	movlw	high _dbuf
  1748  000A9E  2040               	addwfc	(xtoa@i+1)^0,w,c
  1749  000AA0  6EDA               	movwf	fsr2h,c
  1750  000AA2  C026  FFDF         	movff	xtoa@x,indf2
  1751  000AA6                     
  1752                           ; BSR set to: 0
  1753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  1754  000AA6  063F               	decf	xtoa@i^0,f,c
  1755  000AA8  A0D8               	btfss	status,0,c
  1756  000AAA  0640               	decf	(xtoa@i+1)^0,f,c
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  1759  000AAC  0EC3               	movlw	low _dbuf
  1760  000AAE  243F               	addwf	xtoa@i^0,w,c
  1761  000AB0  6ED9               	movwf	fsr2l,c
  1762  000AB2  0E00               	movlw	high _dbuf
  1763  000AB4  2040               	addwfc	(xtoa@i+1)^0,w,c
  1764  000AB6  6EDA               	movwf	fsr2h,c
  1765  000AB8  0E30               	movlw	48
  1766  000ABA  6EDF               	movwf	indf2,c
  1767  000ABC                     l1563:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  1771  000ABC  C01C  F011         	movff	xtoa@fp,pad@fp
  1772  000AC0  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  1773  000AC4  0EC3               	movlw	low _dbuf
  1774  000AC6  243F               	addwf	xtoa@i^0,w,c
  1775  000AC8  6E13               	movwf	pad@buf^0,c
  1776  000ACA  0E00               	movlw	high _dbuf
  1777  000ACC  2040               	addwfc	(xtoa@i+1)^0,w,c
  1778  000ACE  6E14               	movwf	(pad@buf+1)^0,c
  1779  000AD0  C035  F015         	movff	xtoa@w,pad@p
  1780  000AD4  C036  F016         	movff	xtoa@w+1,pad@p+1
  1781  000AD8  EC92  F007         	call	_pad	;wreg free
  1782  000ADC  C011  F01C         	movff	?_pad,?_xtoa
  1783  000AE0  C012  F01D         	movff	?_pad+1,?_xtoa+1
  1784  000AE4  0012               	return		;funcret
  1785  000AE6                     __end_of_xtoa:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function _toupper *****************
  1789 ;; Defined at:
  1790 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  c               2    6[COMRAM] int 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2    6[COMRAM] int 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1804 ;;      Params:         2       0       0       0       0       0       0       0       0
  1805 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1806 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1807 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1808 ;;Total ram usage:        8 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    1
  1811 ;; This function calls:
  1812 ;;		_islower
  1813 ;; This function is called by:
  1814 ;;		_xtoa
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text5
  1819  00104C                     __ptext5:
  1820                           	callstack 0
  1821  00104C                     _toupper:
  1822                           	callstack 25
  1823  00104C  0E9F               	movlw	159
  1824  00104E  6E09               	movwf	??_toupper^0,c
  1825  001050  0EFF               	movlw	255
  1826  001052  6E0A               	movwf	(??_toupper+1)^0,c
  1827  001054  C007  F00B         	movff	toupper@c,??_toupper+2
  1828  001058  C008  F00C         	movff	toupper@c+1,??_toupper+3
  1829  00105C  5009               	movf	??_toupper^0,w,c
  1830  00105E  260B               	addwf	(??_toupper+2)^0,f,c
  1831  001060  500A               	movf	(??_toupper+1)^0,w,c
  1832  001062  220C               	addwfc	(??_toupper+3)^0,f,c
  1833  001064  500C               	movf	(??_toupper+3)^0,w,c
  1834  001066  E10A               	bnz	u750
  1835  001068  0E1A               	movlw	26
  1836  00106A  5C0B               	subwf	(??_toupper+2)^0,w,c
  1837  00106C  A0D8               	btfss	status,0,c
  1838  00106E  EF3B  F008         	goto	u751
  1839  001072  EF3E  F008         	goto	u750
  1840  001076                     u751:
  1841  001076  0E01               	movlw	1
  1842  001078  EF3F  F008         	goto	u760
  1843  00107C                     u750:
  1844  00107C  0E00               	movlw	0
  1845  00107E                     u760:
  1846  00107E  6E0D               	movwf	_toupper$1478^0,c
  1847  001080  6A0E               	clrf	(_toupper$1478+1)^0,c
  1848  001082  500D               	movf	_toupper$1478^0,w,c
  1849  001084  100E               	iorwf	(_toupper$1478+1)^0,w,c
  1850  001086  B4D8               	btfsc	status,2,c
  1851  001088  EF48  F008         	goto	u771
  1852  00108C  EF4A  F008         	goto	u770
  1853  001090                     u771:
  1854  001090  EF50  F008         	goto	l1003
  1855  001094                     u770:
  1856  001094  0E5F               	movlw	95
  1857  001096  1407               	andwf	toupper@c^0,w,c
  1858  001098  6E07               	movwf	?_toupper^0,c
  1859  00109A  6A08               	clrf	(?_toupper+1)^0,c
  1860  00109C  EF54  F008         	goto	l1008
  1861  0010A0                     l1003:
  1862  0010A0  C007  F007         	movff	toupper@c,?_toupper
  1863  0010A4  C008  F008         	movff	toupper@c+1,?_toupper+1
  1864  0010A8                     l1008:
  1865  0010A8  0012               	return		;funcret
  1866  0010AA                     __end_of_toupper:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _islower *****************
  1870 ;; Defined at:
  1871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  c               2    0[COMRAM] int 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2    0[COMRAM] int 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1885 ;;      Params:         2       0       0       0       0       0       0       0       0
  1886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1887 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1888 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1889 ;;Total ram usage:        6 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_toupper
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text6
  1899  001290                     __ptext6:
  1900                           	callstack 0
  1901  001290                     _islower:
  1902                           	callstack 25
  1903  001290  0E9F               	movlw	159
  1904  001292  6E03               	movwf	??_islower^0,c
  1905  001294  0EFF               	movlw	255
  1906  001296  6E04               	movwf	(??_islower+1)^0,c
  1907  001298  C001  F005         	movff	islower@c,??_islower+2
  1908  00129C  C002  F006         	movff	islower@c+1,??_islower+3
  1909  0012A0  5003               	movf	??_islower^0,w,c
  1910  0012A2  2605               	addwf	(??_islower+2)^0,f,c
  1911  0012A4  5004               	movf	(??_islower+1)^0,w,c
  1912  0012A6  2206               	addwfc	(??_islower+3)^0,f,c
  1913  0012A8  5006               	movf	(??_islower+3)^0,w,c
  1914  0012AA  E10A               	bnz	u650
  1915  0012AC  0E1A               	movlw	26
  1916  0012AE  5C05               	subwf	(??_islower+2)^0,w,c
  1917  0012B0  A0D8               	btfss	status,0,c
  1918  0012B2  EF5D  F009         	goto	u651
  1919  0012B6  EF60  F009         	goto	u650
  1920  0012BA                     u651:
  1921  0012BA  0E01               	movlw	1
  1922  0012BC  EF61  F009         	goto	u660
  1923  0012C0                     u650:
  1924  0012C0  0E00               	movlw	0
  1925  0012C2                     u660:
  1926  0012C2  6E01               	movwf	?_islower^0,c
  1927  0012C4  6A02               	clrf	(?_islower+1)^0,c
  1928  0012C6  0012               	return		;funcret
  1929  0012C8                     __end_of_islower:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _pad *****************
  1933 ;; Defined at:
  1934 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1937 ;;		 -> sprintf@f(6), 
  1938 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1939 ;;		 -> dbuf(32), 
  1940 ;;  p               2   20[COMRAM] int 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  w               2   25[COMRAM] int 
  1943 ;;  i               2   23[COMRAM] int 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  2   16[COMRAM] int 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1953 ;;      Params:         6       0       0       0       0       0       0       0       0
  1954 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1955 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1956 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1957 ;;Total ram usage:       11 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    3
  1960 ;; This function calls:
  1961 ;;		_fputc
  1962 ;;		_fputs
  1963 ;;		_strlen
  1964 ;; This function is called by:
  1965 ;;		_xtoa
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text7
  1970  000F24                     __ptext7:
  1971                           	callstack 0
  1972  000F24                     _pad:
  1973                           	callstack 23
  1974  000F24                     
  1975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1976  000F24  0100               	movlb	0	; () banked
  1977  000F26  A1B0               	btfss	_flags& (0+255),0,b
  1978  000F28  EF98  F007         	goto	u671
  1979  000F2C  EF9A  F007         	goto	u670
  1980  000F30                     u671:
  1981  000F30  EFA4  F007         	goto	l1463
  1982  000F34                     u670:
  1983  000F34                     
  1984                           ; BSR set to: 0
  1985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1986  000F34  C013  F00A         	movff	pad@buf,fputs@s
  1987  000F38  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1988  000F3C  C011  F00C         	movff	pad@fp,fputs@fp
  1989  000F40  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1990  000F44  ECCE  F008         	call	_fputs	;wreg free
  1991  000F48                     l1463:
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1994  000F48  BE16               	btfsc	(pad@p+1)^0,7,c
  1995  000F4A  EFA9  F007         	goto	u681
  1996  000F4E  EFAB  F007         	goto	u680
  1997  000F52                     u681:
  1998  000F52  EFB1  F007         	goto	l1467
  1999  000F56                     u680:
  2000  000F56  C015  F01A         	movff	pad@p,pad@w
  2001  000F5A  C016  F01B         	movff	pad@p+1,pad@w+1
  2002  000F5E  EFB5  F007         	goto	l908
  2003  000F62                     l1467:
  2004  000F62  0E00               	movlw	0
  2005  000F64  6E1B               	movwf	(pad@w+1)^0,c
  2006  000F66  0E00               	movlw	0
  2007  000F68  6E1A               	movwf	pad@w^0,c
  2008  000F6A                     l908:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2011  000F6A  0E00               	movlw	0
  2012  000F6C  6E19               	movwf	(pad@i+1)^0,c
  2013  000F6E  0E00               	movlw	0
  2014  000F70  6E18               	movwf	pad@i^0,c
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2017  000F72  EFC7  F007         	goto	l1473
  2018  000F76                     l1469:
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2021  000F76  0E00               	movlw	0
  2022  000F78  6E02               	movwf	(fputc@c+1)^0,c
  2023  000F7A  0E20               	movlw	32
  2024  000F7C  6E01               	movwf	fputc@c^0,c
  2025  000F7E  C011  F003         	movff	pad@fp,fputc@fp
  2026  000F82  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2027  000F86  EC2D  F007         	call	_fputc	;wreg free
  2028  000F8A                     
  2029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2030  000F8A  4A18               	infsnz	pad@i^0,f,c
  2031  000F8C  2A19               	incf	(pad@i+1)^0,f,c
  2032  000F8E                     l1473:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2035  000F8E  501A               	movf	pad@w^0,w,c
  2036  000F90  5C18               	subwf	pad@i^0,w,c
  2037  000F92  5019               	movf	(pad@i+1)^0,w,c
  2038  000F94  0A80               	xorlw	128
  2039  000F96  6E17               	movwf	??_pad^0,c
  2040  000F98  501B               	movf	(pad@w+1)^0,w,c
  2041  000F9A  0A80               	xorlw	128
  2042  000F9C  5817               	subwfb	??_pad^0,w,c
  2043  000F9E  A0D8               	btfss	status,0,c
  2044  000FA0  EFD4  F007         	goto	u691
  2045  000FA4  EFD6  F007         	goto	u690
  2046  000FA8                     u691:
  2047  000FA8  EFBB  F007         	goto	l1469
  2048  000FAC                     u690:
  2049  000FAC                     
  2050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2051  000FAC  0100               	movlb	0	; () banked
  2052  000FAE  B1B0               	btfsc	_flags& (0+255),0,b
  2053  000FB0  EFDC  F007         	goto	u701
  2054  000FB4  EFDE  F007         	goto	u700
  2055  000FB8                     u701:
  2056  000FB8  EFE8  F007         	goto	l1477
  2057  000FBC                     u700:
  2058  000FBC                     
  2059                           ; BSR set to: 0
  2060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2061  000FBC  C013  F00A         	movff	pad@buf,fputs@s
  2062  000FC0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2063  000FC4  C011  F00C         	movff	pad@fp,fputs@fp
  2064  000FC8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2065  000FCC  ECCE  F008         	call	_fputs	;wreg free
  2066  000FD0                     l1477:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2069  000FD0  C013  F001         	movff	pad@buf,strlen@s
  2070  000FD4  C014  F002         	movff	pad@buf+1,strlen@s+1
  2071  000FD8  EC80  F009         	call	_strlen	;wreg free
  2072  000FDC  501A               	movf	pad@w^0,w,c
  2073  000FDE  2401               	addwf	?_strlen^0,w,c
  2074  000FE0  6E11               	movwf	?_pad^0,c
  2075  000FE2  501B               	movf	(pad@w+1)^0,w,c
  2076  000FE4  2002               	addwfc	(?_strlen+1)^0,w,c
  2077  000FE6  6E12               	movwf	(?_pad+1)^0,c
  2078  000FE8  0012               	return		;funcret
  2079  000FEA                     __end_of_pad:
  2080                           	callstack 0
  2081                           
  2082 ;; *************** function _strlen *****************
  2083 ;; Defined at:
  2084 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2087 ;;		 -> dbuf(32), 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2090 ;;		 -> dbuf(32), 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  2    0[COMRAM] unsigned int 
  2093 ;; Registers used:
  2094 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2100 ;;      Params:         2       0       0       0       0       0       0       0       0
  2101 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2103 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2104 ;;Total ram usage:        4 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_pad
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text8
  2114  001300                     __ptext8:
  2115                           	callstack 0
  2116  001300                     _strlen:
  2117                           	callstack 25
  2118  001300  C001  F003         	movff	strlen@s,strlen@a
  2119  001304  C002  F004         	movff	strlen@s+1,strlen@a+1
  2120  001308  EF88  F009         	goto	l1449
  2121  00130C                     l1447:
  2122  00130C  4A01               	infsnz	strlen@s^0,f,c
  2123  00130E  2A02               	incf	(strlen@s+1)^0,f,c
  2124  001310                     l1449:
  2125  001310  C001  FFD9         	movff	strlen@s,fsr2l
  2126  001314  C002  FFDA         	movff	strlen@s+1,fsr2h
  2127  001318  50DF               	movf	indf2,w,c
  2128  00131A  A4D8               	btfss	status,2,c
  2129  00131C  EF92  F009         	goto	u641
  2130  001320  EF94  F009         	goto	u640
  2131  001324                     u641:
  2132  001324  EF86  F009         	goto	l1447
  2133  001328                     u640:
  2134  001328  5003               	movf	strlen@a^0,w,c
  2135  00132A  5C01               	subwf	strlen@s^0,w,c
  2136  00132C  6E01               	movwf	?_strlen^0,c
  2137  00132E  5004               	movf	(strlen@a+1)^0,w,c
  2138  001330  5802               	subwfb	(strlen@s+1)^0,w,c
  2139  001332  6E02               	movwf	(?_strlen+1)^0,c
  2140  001334  0012               	return		;funcret
  2141  001336                     __end_of_strlen:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _fputs *****************
  2145 ;; Defined at:
  2146 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2149 ;;		 -> dbuf(32), 
  2150 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2151 ;;		 -> sprintf@f(6), 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  i               2   14[COMRAM] int 
  2154 ;;  c               1   13[COMRAM] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  2    9[COMRAM] int 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2164 ;;      Params:         4       0       0       0       0       0       0       0       0
  2165 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2167 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2168 ;;Total ram usage:        7 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    2
  2171 ;; This function calls:
  2172 ;;		_fputc
  2173 ;; This function is called by:
  2174 ;;		_pad
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text9
  2179  00119C                     __ptext9:
  2180                           	callstack 0
  2181  00119C                     _fputs:
  2182                           	callstack 23
  2183  00119C  0E00               	movlw	0
  2184  00119E  6E10               	movwf	(fputs@i+1)^0,c
  2185  0011A0  0E00               	movlw	0
  2186  0011A2  6E0F               	movwf	fputs@i^0,c
  2187  0011A4  EFDF  F008         	goto	l1443
  2188  0011A8                     l1439:
  2189  0011A8  C00E  F001         	movff	fputs@c,fputc@c
  2190  0011AC  6A02               	clrf	(fputc@c+1)^0,c
  2191  0011AE  C00C  F003         	movff	fputs@fp,fputc@fp
  2192  0011B2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2193  0011B6  EC2D  F007         	call	_fputc	;wreg free
  2194  0011BA  4A0F               	infsnz	fputs@i^0,f,c
  2195  0011BC  2A10               	incf	(fputs@i+1)^0,f,c
  2196  0011BE                     l1443:
  2197  0011BE  500F               	movf	fputs@i^0,w,c
  2198  0011C0  240A               	addwf	fputs@s^0,w,c
  2199  0011C2  6ED9               	movwf	fsr2l,c
  2200  0011C4  5010               	movf	(fputs@i+1)^0,w,c
  2201  0011C6  200B               	addwfc	(fputs@s+1)^0,w,c
  2202  0011C8  6EDA               	movwf	fsr2h,c
  2203  0011CA  50DF               	movf	indf2,w,c
  2204  0011CC  6E0E               	movwf	fputs@c^0,c
  2205  0011CE  500E               	movf	fputs@c^0,w,c
  2206  0011D0  A4D8               	btfss	status,2,c
  2207  0011D2  EFED  F008         	goto	u631
  2208  0011D6  EFEF  F008         	goto	u630
  2209  0011DA                     u631:
  2210  0011DA  EFD4  F008         	goto	l1439
  2211  0011DE                     u630:
  2212  0011DE  0012               	return		;funcret
  2213  0011E0                     __end_of_fputs:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _fputc *****************
  2217 ;; Defined at:
  2218 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  c               2    0[COMRAM] int 
  2221 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2222 ;;		 -> sprintf@f(6), 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2    0[COMRAM] int 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2234 ;;      Params:         4       0       0       0       0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2236 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2237 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2238 ;;Total ram usage:        9 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    1
  2241 ;; This function calls:
  2242 ;;		_putch
  2243 ;; This function is called by:
  2244 ;;		_pad
  2245 ;;		_vfpfcnvrt
  2246 ;;		_fputs
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text10
  2251  000E5A                     __ptext10:
  2252                           	callstack 0
  2253  000E5A                     _fputc:
  2254                           	callstack 23
  2255  000E5A  5003               	movf	fputc@fp^0,w,c
  2256  000E5C  1004               	iorwf	(fputc@fp+1)^0,w,c
  2257  000E5E  B4D8               	btfsc	status,2,c
  2258  000E60  EF34  F007         	goto	u591
  2259  000E64  EF36  F007         	goto	u590
  2260  000E68                     u591:
  2261  000E68  EF3F  F007         	goto	l1427
  2262  000E6C                     u590:
  2263  000E6C  5003               	movf	fputc@fp^0,w,c
  2264  000E6E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2265  000E70  A4D8               	btfss	status,2,c
  2266  000E72  EF3D  F007         	goto	u601
  2267  000E76  EF3F  F007         	goto	u600
  2268  000E7A                     u601:
  2269  000E7A  EF44  F007         	goto	l1429
  2270  000E7E                     u600:
  2271  000E7E                     l1427:
  2272  000E7E  5001               	movf	fputc@c^0,w,c
  2273  000E80  EC17  F00A         	call	_putch
  2274  000E84  EF91  F007         	goto	l981
  2275  000E88                     l1429:
  2276  000E88  EE20 F004          	lfsr	2,4
  2277  000E8C  5003               	movf	fputc@fp^0,w,c
  2278  000E8E  26D9               	addwf	fsr2l,f,c
  2279  000E90  5004               	movf	(fputc@fp+1)^0,w,c
  2280  000E92  22DA               	addwfc	fsr2h,f,c
  2281  000E94  50DE               	movf	postinc2,w,c
  2282  000E96  10DE               	iorwf	postinc2,w,c
  2283  000E98  B4D8               	btfsc	status,2,c
  2284  000E9A  EF51  F007         	goto	u611
  2285  000E9E  EF53  F007         	goto	u610
  2286  000EA2                     u611:
  2287  000EA2  EF6E  F007         	goto	l1433
  2288  000EA6                     u610:
  2289  000EA6  EE20 F004          	lfsr	2,4
  2290  000EAA  5003               	movf	fputc@fp^0,w,c
  2291  000EAC  26D9               	addwf	fsr2l,f,c
  2292  000EAE  5004               	movf	(fputc@fp+1)^0,w,c
  2293  000EB0  22DA               	addwfc	fsr2h,f,c
  2294  000EB2  EE10 F002          	lfsr	1,2
  2295  000EB6  5003               	movf	fputc@fp^0,w,c
  2296  000EB8  26E1               	addwf	fsr1l,f,c
  2297  000EBA  5004               	movf	(fputc@fp+1)^0,w,c
  2298  000EBC  22E2               	addwfc	fsr1h,f,c
  2299  000EBE  50DE               	movf	postinc2,w,c
  2300  000EC0  5CE6               	subwf	postinc1,w,c
  2301  000EC2  50E6               	movf	postinc1,w,c
  2302  000EC4  0A80               	xorlw	128
  2303  000EC6  6E09               	movwf	(??_fputc+4)^0,c
  2304  000EC8  50DE               	movf	postinc2,w,c
  2305  000ECA  0A80               	xorlw	128
  2306  000ECC  5809               	subwfb	(??_fputc+4)^0,w,c
  2307  000ECE  B0D8               	btfsc	status,0,c
  2308  000ED0  EF6C  F007         	goto	u621
  2309  000ED4  EF6E  F007         	goto	u620
  2310  000ED8                     u621:
  2311  000ED8  EF91  F007         	goto	l981
  2312  000EDC                     u620:
  2313  000EDC                     l1433:
  2314  000EDC  EE20 F002          	lfsr	2,2
  2315  000EE0  5003               	movf	fputc@fp^0,w,c
  2316  000EE2  26D9               	addwf	fsr2l,f,c
  2317  000EE4  5004               	movf	(fputc@fp+1)^0,w,c
  2318  000EE6  22DA               	addwfc	fsr2h,f,c
  2319  000EE8  CFDE F005          	movff	postinc2,??_fputc
  2320  000EEC  CFDD F006          	movff	postdec2,??_fputc+1
  2321  000EF0  C003  FFD9         	movff	fputc@fp,fsr2l
  2322  000EF4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2323  000EF8  CFDE F007          	movff	postinc2,??_fputc+2
  2324  000EFC  CFDD F008          	movff	postdec2,??_fputc+3
  2325  000F00  5005               	movf	??_fputc^0,w,c
  2326  000F02  2407               	addwf	(??_fputc+2)^0,w,c
  2327  000F04  6ED9               	movwf	fsr2l,c
  2328  000F06  5006               	movf	(??_fputc+1)^0,w,c
  2329  000F08  2008               	addwfc	(??_fputc+3)^0,w,c
  2330  000F0A  6EDA               	movwf	fsr2h,c
  2331  000F0C  C001  FFDF         	movff	fputc@c,indf2
  2332  000F10  EE20 F002          	lfsr	2,2
  2333  000F14  5003               	movf	fputc@fp^0,w,c
  2334  000F16  26D9               	addwf	fsr2l,f,c
  2335  000F18  5004               	movf	(fputc@fp+1)^0,w,c
  2336  000F1A  22DA               	addwfc	fsr2h,f,c
  2337  000F1C  2ADE               	incf	postinc2,f,c
  2338  000F1E  0E00               	movlw	0
  2339  000F20  22DD               	addwfc	postdec2,f,c
  2340  000F22                     l981:
  2341  000F22  0012               	return		;funcret
  2342  000F24                     __end_of_fputc:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _putch *****************
  2346 ;; Defined at:
  2347 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  c               1    wreg     unsigned char 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  c               1    0[COMRAM] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2361 ;;      Params:         0       0       0       0       0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2364 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2365 ;;Total ram usage:        0 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_fputc
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text11
  2375  00142E                     __ptext11:
  2376                           	callstack 0
  2377  00142E                     _putch:
  2378                           	callstack 23
  2379  00142E  0012               	return		;funcret
  2380  001430                     __end_of_putch:
  2381                           	callstack 0
  2382                           
  2383 ;; *************** function _isupper *****************
  2384 ;; Defined at:
  2385 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  c               2    0[COMRAM] int 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  2    0[COMRAM] int 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2399 ;;      Params:         2       0       0       0       0       0       0       0       0
  2400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2401 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2402 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2403 ;;Total ram usage:        6 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; This function calls:
  2406 ;;		Nothing
  2407 ;; This function is called by:
  2408 ;;		_xtoa
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text12
  2413  0012C8                     __ptext12:
  2414                           	callstack 0
  2415  0012C8                     _isupper:
  2416                           	callstack 26
  2417  0012C8  0EBF               	movlw	191
  2418  0012CA  6E03               	movwf	??_isupper^0,c
  2419  0012CC  0EFF               	movlw	255
  2420  0012CE  6E04               	movwf	(??_isupper+1)^0,c
  2421  0012D0  C001  F005         	movff	isupper@c,??_isupper+2
  2422  0012D4  C002  F006         	movff	isupper@c+1,??_isupper+3
  2423  0012D8  5003               	movf	??_isupper^0,w,c
  2424  0012DA  2605               	addwf	(??_isupper+2)^0,f,c
  2425  0012DC  5004               	movf	(??_isupper+1)^0,w,c
  2426  0012DE  2206               	addwfc	(??_isupper+3)^0,f,c
  2427  0012E0  5006               	movf	(??_isupper+3)^0,w,c
  2428  0012E2  E10A               	bnz	u710
  2429  0012E4  0E1A               	movlw	26
  2430  0012E6  5C05               	subwf	(??_isupper+2)^0,w,c
  2431  0012E8  A0D8               	btfss	status,0,c
  2432  0012EA  EF79  F009         	goto	u711
  2433  0012EE  EF7C  F009         	goto	u710
  2434  0012F2                     u711:
  2435  0012F2  0E01               	movlw	1
  2436  0012F4  EF7D  F009         	goto	u720
  2437  0012F8                     u710:
  2438  0012F8  0E00               	movlw	0
  2439  0012FA                     u720:
  2440  0012FA  6E01               	movwf	?_isupper^0,c
  2441  0012FC  6A02               	clrf	(?_isupper+1)^0,c
  2442  0012FE  0012               	return		;funcret
  2443  001300                     __end_of_isupper:
  2444                           	callstack 0
  2445                           
  2446 ;; *************** function _isalpha *****************
  2447 ;; Defined at:
  2448 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  c               2    0[COMRAM] int 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  2    0[COMRAM] int 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2462 ;;      Params:         2       0       0       0       0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2464 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2465 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2466 ;;Total ram usage:        6 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_xtoa
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text13
  2476  0011E0                     __ptext13:
  2477                           	callstack 0
  2478  0011E0                     _isalpha:
  2479                           	callstack 26
  2480  0011E0  0E9F               	movlw	159
  2481  0011E2  6E03               	movwf	??_isalpha^0,c
  2482  0011E4  0EFF               	movlw	255
  2483  0011E6  6E04               	movwf	(??_isalpha+1)^0,c
  2484  0011E8  0E20               	movlw	32
  2485  0011EA  1001               	iorwf	isalpha@c^0,w,c
  2486  0011EC  6E05               	movwf	(??_isalpha+2)^0,c
  2487  0011EE  0E00               	movlw	0
  2488  0011F0  1002               	iorwf	(isalpha@c+1)^0,w,c
  2489  0011F2  6E06               	movwf	(??_isalpha+3)^0,c
  2490  0011F4  5003               	movf	??_isalpha^0,w,c
  2491  0011F6  2605               	addwf	(??_isalpha+2)^0,f,c
  2492  0011F8  5004               	movf	(??_isalpha+1)^0,w,c
  2493  0011FA  2206               	addwfc	(??_isalpha+3)^0,f,c
  2494  0011FC  5006               	movf	(??_isalpha+3)^0,w,c
  2495  0011FE  E10A               	bnz	u730
  2496  001200  0E1A               	movlw	26
  2497  001202  5C05               	subwf	(??_isalpha+2)^0,w,c
  2498  001204  A0D8               	btfss	status,0,c
  2499  001206  EF07  F009         	goto	u731
  2500  00120A  EF0A  F009         	goto	u730
  2501  00120E                     u731:
  2502  00120E  0E01               	movlw	1
  2503  001210  EF0B  F009         	goto	u740
  2504  001214                     u730:
  2505  001214  0E00               	movlw	0
  2506  001216                     u740:
  2507  001216  6E01               	movwf	?_isalpha^0,c
  2508  001218  6A02               	clrf	(?_isalpha+1)^0,c
  2509  00121A  0012               	return		;funcret
  2510  00121C                     __end_of_isalpha:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _RTC_Read_Clock *****************
  2514 ;; Defined at:
  2515 ;;		line 43 in file "uart_lm35.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  read_clock_a    1    wreg     unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2529 ;;      Params:         0       0       0       0       0       0       0       0       0
  2530 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2531 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2532 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2533 ;;Total ram usage:        2 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    3
  2536 ;; This function calls:
  2537 ;;		_I2C_Read
  2538 ;;		_I2C_Repeated_Start
  2539 ;;		_I2C_Start
  2540 ;;		_I2C_Write
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text14
  2547  001156                     __ptext14:
  2548                           	callstack 0
  2549  001156                     _RTC_Read_Clock:
  2550                           	callstack 27
  2551                           
  2552                           ;incstack = 0
  2553                           ;RTC_Read_Clock@read_clock_address stored from wreg
  2554  001156  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  2555  001158                     
  2556                           ;uart_lm35.c: 43: void RTC_Read_Clock(char read_clock_address);uart_lm35.c: 44: {;uart_l
      +                          m35.c: 45:     I2C_Start(0xD0);
  2557  001158  0ED0               	movlw	208
  2558  00115A  EC9B  F009         	call	_I2C_Start
  2559                           
  2560                           ;uart_lm35.c: 46:     I2C_Write(read_clock_address);
  2561  00115E  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  2562  001160  ECC9  F009         	call	_I2C_Write
  2563                           
  2564                           ;uart_lm35.c: 47:     I2C_Repeated_Start(0xD1);
  2565  001164  0ED1               	movlw	209
  2566  001166  ECB2  F009         	call	_I2C_Repeated_Start
  2567  00116A                     
  2568                           ;uart_lm35.c: 48:     sec = I2C_Read(0);
  2569  00116A  0E00               	movlw	0
  2570  00116C  EC2B  F009         	call	_I2C_Read
  2571  001170  6E03               	movwf	??_RTC_Read_Clock^0,c
  2572  001172  5003               	movf	??_RTC_Read_Clock^0,w,c
  2573  001174  0100               	movlb	0	; () banked
  2574  001176  6FBE               	movwf	_sec& (0+255),b
  2575  001178  6BBF               	clrf	(_sec+1)& (0+255),b
  2576  00117A                     
  2577                           ; BSR set to: 0
  2578                           ;uart_lm35.c: 49:     min = I2C_Read(0);
  2579  00117A  0E00               	movlw	0
  2580  00117C  EC2B  F009         	call	_I2C_Read
  2581  001180  6E03               	movwf	??_RTC_Read_Clock^0,c
  2582  001182  5003               	movf	??_RTC_Read_Clock^0,w,c
  2583  001184  0100               	movlb	0	; () banked
  2584  001186  6FBC               	movwf	_min& (0+255),b
  2585  001188  6BBD               	clrf	(_min+1)& (0+255),b
  2586  00118A                     
  2587                           ; BSR set to: 0
  2588                           ;uart_lm35.c: 50:     hour= I2C_Read(1);
  2589  00118A  0E01               	movlw	1
  2590  00118C  EC2B  F009         	call	_I2C_Read
  2591  001190  6E03               	movwf	??_RTC_Read_Clock^0,c
  2592  001192  5003               	movf	??_RTC_Read_Clock^0,w,c
  2593  001194  0100               	movlb	0	; () banked
  2594  001196  6FBA               	movwf	_hour& (0+255),b
  2595  001198  6BBB               	clrf	(_hour+1)& (0+255),b
  2596  00119A                     
  2597                           ; BSR set to: 0
  2598  00119A  0012               	return		;funcret
  2599  00119C                     __end_of_RTC_Read_Clock:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _RTC_Read_Calendar *****************
  2603 ;; Defined at:
  2604 ;;		line 54 in file "uart_lm35.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  read_calenda    1    wreg     unsigned char 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  read_calenda    1    3[COMRAM] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2618 ;;      Params:         0       0       0       0       0       0       0       0       0
  2619 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2620 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2621 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2622 ;;Total ram usage:        2 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    3
  2625 ;; This function calls:
  2626 ;;		_I2C_Read
  2627 ;;		_I2C_Repeated_Start
  2628 ;;		_I2C_Start
  2629 ;;		_I2C_Stop
  2630 ;;		_I2C_Write
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text15
  2637  0010AA                     __ptext15:
  2638                           	callstack 0
  2639  0010AA                     _RTC_Read_Calendar:
  2640                           	callstack 27
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;incstack = 0
  2644                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  2645  0010AA  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  2646  0010AC                     
  2647                           ;uart_lm35.c: 54: void RTC_Read_Calendar(char read_calendar_address);uart_lm35.c: 55: {;
      +                          uart_lm35.c: 56:     I2C_Start(0xD0);
  2648  0010AC  0ED0               	movlw	208
  2649  0010AE  EC9B  F009         	call	_I2C_Start
  2650                           
  2651                           ;uart_lm35.c: 57:     I2C_Write(read_calendar_address);
  2652  0010B2  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  2653  0010B4  ECC9  F009         	call	_I2C_Write
  2654                           
  2655                           ;uart_lm35.c: 58:     I2C_Repeated_Start(0xD1);
  2656  0010B8  0ED1               	movlw	209
  2657  0010BA  ECB2  F009         	call	_I2C_Repeated_Start
  2658  0010BE                     
  2659                           ;uart_lm35.c: 59:     Day = I2C_Read(0);
  2660  0010BE  0E00               	movlw	0
  2661  0010C0  EC2B  F009         	call	_I2C_Read
  2662  0010C4  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2663  0010C6  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2664  0010C8  0100               	movlb	0	; () banked
  2665  0010CA  6FB8               	movwf	_Day& (0+255),b
  2666  0010CC  6BB9               	clrf	(_Day+1)& (0+255),b
  2667  0010CE                     
  2668                           ; BSR set to: 0
  2669                           ;uart_lm35.c: 60:     Date = I2C_Read(0);
  2670  0010CE  0E00               	movlw	0
  2671  0010D0  EC2B  F009         	call	_I2C_Read
  2672  0010D4  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2673  0010D6  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2674  0010D8  0100               	movlb	0	; () banked
  2675  0010DA  6FB6               	movwf	_Date& (0+255),b
  2676  0010DC  6BB7               	clrf	(_Date+1)& (0+255),b
  2677  0010DE                     
  2678                           ; BSR set to: 0
  2679                           ;uart_lm35.c: 61:     Month = I2C_Read(0);
  2680  0010DE  0E00               	movlw	0
  2681  0010E0  EC2B  F009         	call	_I2C_Read
  2682  0010E4  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2683  0010E6  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2684  0010E8  0100               	movlb	0	; () banked
  2685  0010EA  6FB4               	movwf	_Month& (0+255),b
  2686  0010EC  6BB5               	clrf	(_Month+1)& (0+255),b
  2687  0010EE                     
  2688                           ; BSR set to: 0
  2689                           ;uart_lm35.c: 62:     Year = I2C_Read(1);
  2690  0010EE  0E01               	movlw	1
  2691  0010F0  EC2B  F009         	call	_I2C_Read
  2692  0010F4  6E03               	movwf	??_RTC_Read_Calendar^0,c
  2693  0010F6  5003               	movf	??_RTC_Read_Calendar^0,w,c
  2694  0010F8  0100               	movlb	0	; () banked
  2695  0010FA  6FB2               	movwf	_Year& (0+255),b
  2696  0010FC  6BB3               	clrf	(_Year+1)& (0+255),b
  2697  0010FE                     
  2698                           ; BSR set to: 0
  2699                           ;uart_lm35.c: 63:     I2C_Stop();
  2700  0010FE  ECE7  F009         	call	_I2C_Stop	;wreg free
  2701  001102  0012               	return		;funcret
  2702  001104                     __end_of_RTC_Read_Calendar:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _I2C_Stop *****************
  2706 ;; Defined at:
  2707 ;;		line 93 in file "PIC18F4550_I2C_Source_File.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      unsigned char 
  2714 ;; Registers used:
  2715 ;;		wreg
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_RTC_Read_Calendar
  2731 ;;		_main
  2732 ;;		_I2C_Start_Wait
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text16
  2737  0013CE                     __ptext16:
  2738                           	callstack 0
  2739  0013CE                     _I2C_Stop:
  2740                           	callstack 29
  2741  0013CE                     
  2742                           ;PIC18F4550_I2C_Source_File.c: 95:     PEN = 1;
  2743  0013CE  84C5               	bsf	4037,2,c	;volatile
  2744  0013D0                     l175:
  2745  0013D0  B4C5               	btfsc	4037,2,c	;volatile
  2746  0013D2  EFED  F009         	goto	u1091
  2747  0013D6  EFEF  F009         	goto	u1090
  2748  0013DA                     u1091:
  2749  0013DA  EFE8  F009         	goto	l175
  2750  0013DE                     u1090:
  2751  0013DE                     
  2752                           ;PIC18F4550_I2C_Source_File.c: 97:     if(!SSPSTATbits.P);
  2753  0013DE  50C7               	movf	199,w,c	;volatile
  2754  0013E0  0012               	return		;funcret
  2755  0013E2                     __end_of_I2C_Stop:
  2756                           	callstack 0
  2757                           
  2758 ;; *************** function _I2C_Start *****************
  2759 ;; Defined at:
  2760 ;;		line 68 in file "PIC18F4550_I2C_Source_File.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  slave_write_    1    wreg     unsigned char 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  slave_write_    1    1[COMRAM] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      unsigned char 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0
  2775 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2777 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2778 ;;Total ram usage:        1 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    2
  2781 ;; This function calls:
  2782 ;;		_I2C_Write
  2783 ;; This function is called by:
  2784 ;;		_RTC_Read_Clock
  2785 ;;		_RTC_Read_Calendar
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text17
  2790  001336                     __ptext17:
  2791                           	callstack 0
  2792  001336                     _I2C_Start:
  2793                           	callstack 27
  2794                           
  2795                           ;incstack = 0
  2796                           ;I2C_Start@slave_write_address stored from wreg
  2797  001336  6E02               	movwf	I2C_Start@slave_write_address^0,c
  2798  001338                     
  2799                           ;PIC18F4550_I2C_Source_File.c: 68: char I2C_Start(char slave_write_address);PIC18F4550_I
      +                          2C_Source_File.c: 69: {;PIC18F4550_I2C_Source_File.c: 70:     SSPCON2bits.SEN=1;
  2800  001338  80C5               	bsf	197,0,c	;volatile
  2801  00133A                     l159:
  2802  00133A  B0C5               	btfsc	197,0,c	;volatile
  2803  00133C  EFA2  F009         	goto	u1031
  2804  001340  EFA4  F009         	goto	u1030
  2805  001344                     u1031:
  2806  001344  EF9D  F009         	goto	l159
  2807  001348                     u1030:
  2808  001348                     
  2809                           ;PIC18F4550_I2C_Source_File.c: 72:  SSPIF=0;
  2810  001348  969E               	bcf	3998,3,c	;volatile
  2811                           
  2812                           ;PIC18F4550_I2C_Source_File.c: 73:     if(!SSPSTATbits.S)
  2813  00134A  B6C7               	btfsc	199,3,c	;volatile
  2814  00134C  EFAA  F009         	goto	u1041
  2815  001350  EFAC  F009         	goto	u1040
  2816  001354                     u1041:
  2817  001354  EFAE  F009         	goto	l1637
  2818  001358                     u1040:
  2819  001358  EFB1  F009         	goto	l163
  2820  00135C                     l1637:
  2821                           
  2822                           ;PIC18F4550_I2C_Source_File.c: 75:     return (I2C_Write(slave_write_address));;	Return 
      +                          value of _I2C_Start is never used
  2823  00135C  5002               	movf	I2C_Start@slave_write_address^0,w,c
  2824  00135E  ECC9  F009         	call	_I2C_Write
  2825  001362                     l163:
  2826  001362  0012               	return		;funcret
  2827  001364                     __end_of_I2C_Start:
  2828                           	callstack 0
  2829                           
  2830 ;; *************** function _I2C_Repeated_Start *****************
  2831 ;; Defined at:
  2832 ;;		line 79 in file "PIC18F4550_I2C_Source_File.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  slave_read_a    1    wreg     unsigned char 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      unsigned char 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2846 ;;      Params:         0       0       0       0       0       0       0       0       0
  2847 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2849 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2850 ;;Total ram usage:        1 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    2
  2853 ;; This function calls:
  2854 ;;		_I2C_Write
  2855 ;; This function is called by:
  2856 ;;		_RTC_Read_Clock
  2857 ;;		_RTC_Read_Calendar
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text18
  2862  001364                     __ptext18:
  2863                           	callstack 0
  2864  001364                     _I2C_Repeated_Start:
  2865                           	callstack 27
  2866                           
  2867                           ;incstack = 0
  2868                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  2869  001364  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  2870  001366                     
  2871                           ;PIC18F4550_I2C_Source_File.c: 79: char I2C_Repeated_Start(char slave_read_address);PIC1
      +                          8F4550_I2C_Source_File.c: 80: {;PIC18F4550_I2C_Source_File.c: 81:     RSEN = 1;
  2872  001366  82C5               	bsf	4037,1,c	;volatile
  2873  001368                     l166:
  2874  001368  B2C5               	btfsc	4037,1,c	;volatile
  2875  00136A  EFB9  F009         	goto	u1051
  2876  00136E  EFBB  F009         	goto	u1050
  2877  001372                     u1051:
  2878  001372  EFB4  F009         	goto	l166
  2879  001376                     u1050:
  2880  001376                     
  2881                           ;PIC18F4550_I2C_Source_File.c: 83:     SSPIF = 0;
  2882  001376  969E               	bcf	3998,3,c	;volatile
  2883                           
  2884                           ;PIC18F4550_I2C_Source_File.c: 84:  if(!SSPSTATbits.S)
  2885  001378  B6C7               	btfsc	199,3,c	;volatile
  2886  00137A  EFC1  F009         	goto	u1061
  2887  00137E  EFC3  F009         	goto	u1060
  2888  001382                     u1061:
  2889  001382  EFC5  F009         	goto	l1645
  2890  001386                     u1060:
  2891  001386  EFC8  F009         	goto	l170
  2892  00138A                     l1645:
  2893                           
  2894                           ;PIC18F4550_I2C_Source_File.c: 86:     I2C_Write(slave_read_address);
  2895  00138A  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  2896  00138C  ECC9  F009         	call	_I2C_Write
  2897  001390                     l170:
  2898  001390  0012               	return		;funcret
  2899  001392                     __end_of_I2C_Repeated_Start:
  2900                           	callstack 0
  2901                           
  2902 ;; *************** function _I2C_Write *****************
  2903 ;; Defined at:
  2904 ;;		line 101 in file "PIC18F4550_I2C_Source_File.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  data            1    wreg     unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  data            1    0[COMRAM] unsigned char 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      unsigned char 
  2911 ;; Registers used:
  2912 ;;		wreg, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2918 ;;      Params:         0       0       0       0       0       0       0       0       0
  2919 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2920 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2921 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2922 ;;Total ram usage:        1 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:    1
  2925 ;; This function calls:
  2926 ;;		_I2C_Ready
  2927 ;; This function is called by:
  2928 ;;		_RTC_Read_Clock
  2929 ;;		_RTC_Read_Calendar
  2930 ;;		_I2C_Start
  2931 ;;		_I2C_Repeated_Start
  2932 ;;		_I2C_Start_Wait
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text19
  2937  001392                     __ptext19:
  2938                           	callstack 0
  2939  001392                     _I2C_Write:
  2940                           	callstack 28
  2941                           
  2942                           ;incstack = 0
  2943                           ;I2C_Write@data stored from wreg
  2944  001392  6E01               	movwf	I2C_Write@data^0,c
  2945  001394                     
  2946                           ;PIC18F4550_I2C_Source_File.c: 101: char I2C_Write(unsigned char data);PIC18F4550_I2C_So
      +                          urce_File.c: 102: {;PIC18F4550_I2C_Source_File.c: 103:       SSPBUF = data;
  2947  001394  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  2948  001398                     
  2949                           ;PIC18F4550_I2C_Source_File.c: 104:       I2C_Ready();
  2950  001398  EC0E  F00A         	call	_I2C_Ready	;wreg free
  2951  00139C                     
  2952                           ;PIC18F4550_I2C_Source_File.c: 105:       if (ACKSTAT)
  2953  00139C  ACC5               	btfss	4037,6,c	;volatile
  2954  00139E  EFD3  F009         	goto	u961
  2955  0013A2  EFD5  F009         	goto	u960
  2956  0013A6                     u961:
  2957  0013A6  EFD8  F009         	goto	l1579
  2958  0013AA                     u960:
  2959  0013AA                     
  2960                           ;PIC18F4550_I2C_Source_File.c: 106:         return 1;
  2961  0013AA  0E01               	movlw	1
  2962  0013AC  EFD9  F009         	goto	l183
  2963  0013B0                     l1579:
  2964                           
  2965                           ;PIC18F4550_I2C_Source_File.c: 108:         return 2;
  2966  0013B0  0E02               	movlw	2
  2967  0013B2                     l183:
  2968  0013B2  0012               	return		;funcret
  2969  0013B4                     __end_of_I2C_Write:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _I2C_Read *****************
  2973 ;; Defined at:
  2974 ;;		line 12 in file "PIC18F4550_I2C_Source_File.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  flag            1    wreg     unsigned char 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  flag            1    0[COMRAM] unsigned char 
  2979 ;;  buffer          1    1[COMRAM] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      unsigned char 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2989 ;;      Params:         0       0       0       0       0       0       0       0       0
  2990 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2992 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2993 ;;Total ram usage:        2 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    1
  2996 ;; This function calls:
  2997 ;;		_I2C_Ack
  2998 ;;		_I2C_Nack
  2999 ;;		_I2C_Ready
  3000 ;; This function is called by:
  3001 ;;		_RTC_Read_Clock
  3002 ;;		_RTC_Read_Calendar
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text20
  3007  001256                     __ptext20:
  3008                           	callstack 0
  3009  001256                     _I2C_Read:
  3010                           	callstack 28
  3011                           
  3012                           ;incstack = 0
  3013                           ;I2C_Read@flag stored from wreg
  3014  001256  6E01               	movwf	I2C_Read@flag^0,c
  3015  001258                     
  3016                           ;PIC18F4550_I2C_Source_File.c: 12: char I2C_Read(char flag);PIC18F4550_I2C_Source_File.c
      +                          : 14: {;PIC18F4550_I2C_Source_File.c: 15:         char buffer;;PIC18F4550_I2C_Source_Fil
      +                          e.c: 16:         RCEN = 1;
  3017  001258  86C5               	bsf	4037,3,c	;volatile
  3018  00125A                     l131:
  3019  00125A  A0C7               	btfss	199,0,c	;volatile
  3020  00125C  EF32  F009         	goto	u1071
  3021  001260  EF34  F009         	goto	u1070
  3022  001264                     u1071:
  3023  001264  EF2D  F009         	goto	l131
  3024  001268                     u1070:
  3025  001268                     
  3026                           ;PIC18F4550_I2C_Source_File.c: 19:         buffer = SSPBUF;
  3027  001268  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  3028  00126C                     
  3029                           ;PIC18F4550_I2C_Source_File.c: 21:         if(flag==0)
  3030  00126C  5001               	movf	I2C_Read@flag^0,w,c
  3031  00126E  A4D8               	btfss	status,2,c
  3032  001270  EF3C  F009         	goto	u1081
  3033  001274  EF3E  F009         	goto	u1080
  3034  001278                     u1081:
  3035  001278  EF42  F009         	goto	l1659
  3036  00127C                     u1080:
  3037  00127C                     
  3038                           ;PIC18F4550_I2C_Source_File.c: 22:             I2C_Ack();
  3039  00127C  ECFB  F009         	call	_I2C_Ack	;wreg free
  3040  001280  EF44  F009         	goto	l135
  3041  001284                     l1659:
  3042                           
  3043                           ;PIC18F4550_I2C_Source_File.c: 24:             I2C_Nack();
  3044  001284  ECF1  F009         	call	_I2C_Nack	;wreg free
  3045  001288                     l135:
  3046                           
  3047                           ;PIC18F4550_I2C_Source_File.c: 25:         I2C_Ready();
  3048  001288  EC0E  F00A         	call	_I2C_Ready	;wreg free
  3049  00128C                     
  3050                           ;PIC18F4550_I2C_Source_File.c: 26:         return(buffer);
  3051  00128C  5002               	movf	I2C_Read@buffer^0,w,c
  3052  00128E  0012               	return		;funcret
  3053  001290                     __end_of_I2C_Read:
  3054                           	callstack 0
  3055                           
  3056 ;; *************** function _I2C_Ready *****************
  3057 ;; Defined at:
  3058 ;;		line 43 in file "PIC18F4550_I2C_Source_File.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;		None
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		None
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3072 ;;      Params:         0       0       0       0       0       0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3075 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_I2C_Read
  3082 ;;		_I2C_Write
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text21
  3087  00141C                     __ptext21:
  3088                           	callstack 0
  3089  00141C                     _I2C_Ready:
  3090                           	callstack 28
  3091  00141C                     l142:
  3092  00141C  A69E               	btfss	3998,3,c	;volatile
  3093  00141E  EF13  F00A         	goto	u781
  3094  001422  EF15  F00A         	goto	u780
  3095  001426                     u781:
  3096  001426  EF0E  F00A         	goto	l142
  3097  00142A                     u780:
  3098  00142A                     
  3099                           ;PIC18F4550_I2C_Source_File.c: 46:     SSPIF=0;
  3100  00142A  969E               	bcf	3998,3,c	;volatile
  3101  00142C  0012               	return		;funcret
  3102  00142E                     __end_of_I2C_Ready:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _I2C_Nack *****************
  3106 ;; Defined at:
  3107 ;;		line 118 in file "PIC18F4550_I2C_Source_File.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		None
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; This function calls:
  3128 ;;		Nothing
  3129 ;; This function is called by:
  3130 ;;		_I2C_Read
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text22
  3135  0013E2                     __ptext22:
  3136                           	callstack 0
  3137  0013E2                     _I2C_Nack:
  3138                           	callstack 28
  3139  0013E2                     
  3140                           ;PIC18F4550_I2C_Source_File.c: 120:     ACKDT=1;
  3141  0013E2  8AC5               	bsf	4037,5,c	;volatile
  3142                           
  3143                           ;PIC18F4550_I2C_Source_File.c: 121:  ACKEN=1;
  3144  0013E4  88C5               	bsf	4037,4,c	;volatile
  3145  0013E6                     l193:
  3146  0013E6  B8C5               	btfsc	4037,4,c	;volatile
  3147  0013E8  EFF8  F009         	goto	u981
  3148  0013EC  EFFA  F009         	goto	u980
  3149  0013F0                     u981:
  3150  0013F0  EFF3  F009         	goto	l193
  3151  0013F4                     u980:
  3152  0013F4  0012               	return		;funcret
  3153  0013F6                     __end_of_I2C_Nack:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _I2C_Ack *****************
  3157 ;; Defined at:
  3158 ;;		line 111 in file "PIC18F4550_I2C_Source_File.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		None
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3175 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_I2C_Read
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text23
  3186  0013F6                     __ptext23:
  3187                           	callstack 0
  3188  0013F6                     _I2C_Ack:
  3189                           	callstack 28
  3190  0013F6                     
  3191                           ;PIC18F4550_I2C_Source_File.c: 113:     ACKDT=0;
  3192  0013F6  9AC5               	bcf	4037,5,c	;volatile
  3193                           
  3194                           ;PIC18F4550_I2C_Source_File.c: 114:  ACKEN=1;
  3195  0013F8  88C5               	bsf	4037,4,c	;volatile
  3196  0013FA                     l187:
  3197  0013FA  B8C5               	btfsc	4037,4,c	;volatile
  3198  0013FC  EF02  F00A         	goto	u971
  3199  001400  EF04  F00A         	goto	u970
  3200  001404                     u971:
  3201  001404  EFFD  F009         	goto	l187
  3202  001408                     u970:
  3203  001408  0012               	return		;funcret
  3204  00140A                     __end_of_I2C_Ack:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _I2C_Init *****************
  3208 ;; Defined at:
  3209 ;;		line 29 in file "PIC18F4550_I2C_Source_File.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3223 ;;      Params:         0       0       0       0       0       0       0       0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3226 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3227 ;;Total ram usage:        0 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text24
  3237  0013B4                     __ptext24:
  3238                           	callstack 0
  3239  0013B4                     _I2C_Init:
  3240                           	callstack 30
  3241  0013B4                     
  3242                           ;PIC18F4550_I2C_Source_File.c: 31:     TRISB0=1;
  3243  0013B4  8093               	bsf	3987,0,c	;volatile
  3244                           
  3245                           ;PIC18F4550_I2C_Source_File.c: 32:  TRISB1=1;
  3246  0013B6  8293               	bsf	3987,1,c	;volatile
  3247  0013B8                     
  3248                           ;PIC18F4550_I2C_Source_File.c: 33:  SSPSTAT=80;
  3249  0013B8  0E50               	movlw	80
  3250  0013BA  6EC7               	movwf	199,c	;volatile
  3251                           
  3252                           ;PIC18F4550_I2C_Source_File.c: 34:     SSPCON1=0x28;
  3253  0013BC  0E28               	movlw	40
  3254  0013BE  6EC6               	movwf	198,c	;volatile
  3255                           
  3256                           ;PIC18F4550_I2C_Source_File.c: 36:  SSPCON2=0;
  3257  0013C0  0E00               	movlw	0
  3258  0013C2  6EC5               	movwf	197,c	;volatile
  3259                           
  3260                           ;PIC18F4550_I2C_Source_File.c: 37:     SSPADD=((8000000/(4*100000))-1);
  3261  0013C4  0E13               	movlw	19
  3262  0013C6  6EC8               	movwf	200,c	;volatile
  3263  0013C8                     
  3264                           ;PIC18F4550_I2C_Source_File.c: 38:     SSPIE=1;
  3265  0013C8  869D               	bsf	3997,3,c	;volatile
  3266  0013CA                     
  3267                           ;PIC18F4550_I2C_Source_File.c: 39:     SSPIF=0;
  3268  0013CA  969E               	bcf	3998,3,c	;volatile
  3269  0013CC  0012               	return		;funcret
  3270  0013CE                     __end_of_I2C_Init:
  3271                           	callstack 0
  3272                           
  3273                           	psect	rparam
  3274  0000                     
  3275                           	psect	idloc
  3276                           
  3277                           ;Config register IDLOC0 @ 0x200000
  3278                           ;	unspecified, using default values
  3279  200000                     	org	2097152
  3280  200000  FF                 	db	255
  3281                           
  3282                           ;Config register IDLOC1 @ 0x200001
  3283                           ;	unspecified, using default values
  3284  200001                     	org	2097153
  3285  200001  FF                 	db	255
  3286                           
  3287                           ;Config register IDLOC2 @ 0x200002
  3288                           ;	unspecified, using default values
  3289  200002                     	org	2097154
  3290  200002  FF                 	db	255
  3291                           
  3292                           ;Config register IDLOC3 @ 0x200003
  3293                           ;	unspecified, using default values
  3294  200003                     	org	2097155
  3295  200003  FF                 	db	255
  3296                           
  3297                           ;Config register IDLOC4 @ 0x200004
  3298                           ;	unspecified, using default values
  3299  200004                     	org	2097156
  3300  200004  FF                 	db	255
  3301                           
  3302                           ;Config register IDLOC5 @ 0x200005
  3303                           ;	unspecified, using default values
  3304  200005                     	org	2097157
  3305  200005  FF                 	db	255
  3306                           
  3307                           ;Config register IDLOC6 @ 0x200006
  3308                           ;	unspecified, using default values
  3309  200006                     	org	2097158
  3310  200006  FF                 	db	255
  3311                           
  3312                           ;Config register IDLOC7 @ 0x200007
  3313                           ;	unspecified, using default values
  3314  200007                     	org	2097159
  3315  200007  FF                 	db	255
  3316                           
  3317                           	psect	config
  3318                           
  3319                           ;Config register CONFIG1L @ 0x300000
  3320                           ;	PLL Prescaler Selection bits
  3321                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3322                           ;	System Clock Postscaler Selection bits
  3323                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3324                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3325                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3326  300000                     	org	3145728
  3327  300000  00                 	db	0
  3328                           
  3329                           ;Config register CONFIG1H @ 0x300001
  3330                           ;	Oscillator Selection bits
  3331                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  3332                           ;	Fail-Safe Clock Monitor Enable bit
  3333                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3334                           ;	Internal/External Oscillator Switchover bit
  3335                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3336  300001                     	org	3145729
  3337  300001  08                 	db	8
  3338                           
  3339                           ;Config register CONFIG2L @ 0x300002
  3340                           ;	Power-up Timer Enable bit
  3341                           ;	PWRT = ON, PWRT enabled
  3342                           ;	Brown-out Reset Enable bits
  3343                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3344                           ;	Brown-out Reset Voltage bits
  3345                           ;	BORV = 3, Minimum setting 2.05V
  3346                           ;	USB Voltage Regulator Enable bit
  3347                           ;	VREGEN = OFF, USB voltage regulator disabled
  3348  300002                     	org	3145730
  3349  300002  18                 	db	24
  3350                           
  3351                           ;Config register CONFIG2H @ 0x300003
  3352                           ;	Watchdog Timer Enable bit
  3353                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3354                           ;	Watchdog Timer Postscale Select bits
  3355                           ;	WDTPS = 32768, 1:32768
  3356  300003                     	org	3145731
  3357  300003  1E                 	db	30
  3358                           
  3359                           ; Padding undefined space
  3360  300004                     	org	3145732
  3361  300004  FF                 	db	255
  3362                           
  3363                           ;Config register CONFIG3H @ 0x300005
  3364                           ;	CCP2 MUX bit
  3365                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3366                           ;	PORTB A/D Enable bit
  3367                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3368                           ;	Low-Power Timer 1 Oscillator Enable bit
  3369                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3370                           ;	MCLR Pin Enable bit
  3371                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3372  300005                     	org	3145733
  3373  300005  01                 	db	1
  3374                           
  3375                           ;Config register CONFIG4L @ 0x300006
  3376                           ;	Stack Full/Underflow Reset Enable bit
  3377                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3378                           ;	Single-Supply ICSP Enable bit
  3379                           ;	LVP = OFF, Single-Supply ICSP disabled
  3380                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3381                           ;	ICPRT = OFF, ICPORT disabled
  3382                           ;	Extended Instruction Set Enable bit
  3383                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3384                           ;	Background Debugger Enable bit
  3385                           ;	DEBUG = 0x1, unprogrammed default
  3386  300006                     	org	3145734
  3387  300006  81                 	db	129
  3388                           
  3389                           ; Padding undefined space
  3390  300007                     	org	3145735
  3391  300007  FF                 	db	255
  3392                           
  3393                           ;Config register CONFIG5L @ 0x300008
  3394                           ;	Code Protection bit
  3395                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3396                           ;	Code Protection bit
  3397                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3398                           ;	Code Protection bit
  3399                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3400                           ;	Code Protection bit
  3401                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3402  300008                     	org	3145736
  3403  300008  0F                 	db	15
  3404                           
  3405                           ;Config register CONFIG5H @ 0x300009
  3406                           ;	Boot Block Code Protection bit
  3407                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3408                           ;	Data EEPROM Code Protection bit
  3409                           ;	CPD = OFF, Data EEPROM is not code-protected
  3410  300009                     	org	3145737
  3411  300009  C0                 	db	192
  3412                           
  3413                           ;Config register CONFIG6L @ 0x30000A
  3414                           ;	Write Protection bit
  3415                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3416                           ;	Write Protection bit
  3417                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3418                           ;	Write Protection bit
  3419                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3420                           ;	Write Protection bit
  3421                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3422  30000A                     	org	3145738
  3423  30000A  0F                 	db	15
  3424                           
  3425                           ;Config register CONFIG6H @ 0x30000B
  3426                           ;	Configuration Register Write Protection bit
  3427                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3428                           ;	Boot Block Write Protection bit
  3429                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3430                           ;	Data EEPROM Write Protection bit
  3431                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3432  30000B                     	org	3145739
  3433  30000B  E0                 	db	224
  3434                           
  3435                           ;Config register CONFIG7L @ 0x30000C
  3436                           ;	Table Read Protection bit
  3437                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3438                           ;	Table Read Protection bit
  3439                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3440                           ;	Table Read Protection bit
  3441                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3442                           ;	Table Read Protection bit
  3443                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3444  30000C                     	org	3145740
  3445  30000C  0F                 	db	15
  3446                           
  3447                           ;Config register CONFIG7H @ 0x30000D
  3448                           ;	Boot Block Table Read Protection bit
  3449                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3450  30000D                     	org	3145741
  3451  30000D  40                 	db	64
  3452                           tosu	equ	0xFFF
  3453                           tosh	equ	0xFFE
  3454                           tosl	equ	0xFFD
  3455                           stkptr	equ	0xFFC
  3456                           pclatu	equ	0xFFB
  3457                           pclath	equ	0xFFA
  3458                           pcl	equ	0xFF9
  3459                           tblptru	equ	0xFF8
  3460                           tblptrh	equ	0xFF7
  3461                           tblptrl	equ	0xFF6
  3462                           tablat	equ	0xFF5
  3463                           prodh	equ	0xFF4
  3464                           prodl	equ	0xFF3
  3465                           indf0	equ	0xFEF
  3466                           postinc0	equ	0xFEE
  3467                           postdec0	equ	0xFED
  3468                           preinc0	equ	0xFEC
  3469                           plusw0	equ	0xFEB
  3470                           fsr0h	equ	0xFEA
  3471                           fsr0l	equ	0xFE9
  3472                           wreg	equ	0xFE8
  3473                           indf1	equ	0xFE7
  3474                           postinc1	equ	0xFE6
  3475                           postdec1	equ	0xFE5
  3476                           preinc1	equ	0xFE4
  3477                           plusw1	equ	0xFE3
  3478                           fsr1h	equ	0xFE2
  3479                           fsr1l	equ	0xFE1
  3480                           bsr	equ	0xFE0
  3481                           indf2	equ	0xFDF
  3482                           postinc2	equ	0xFDE
  3483                           postdec2	equ	0xFDD
  3484                           preinc2	equ	0xFDC
  3485                           plusw2	equ	0xFDB
  3486                           fsr2h	equ	0xFDA
  3487                           fsr2l	equ	0xFD9
  3488                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    0
    Data        18
    BSS         61
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     70     149
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@year(BANK0[10]), main@month(BANK0[10]), main@date(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@year(BANK0[10]), main@month(BANK0[10]), main@date(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1311_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@year(BANK0[10]), main@month(BANK0[10]), main@date(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@year(BANK0[10]), main@month(BANK0[10]), main@date(BANK0[10]), main@hours(BANK0[10]), 
		 -> main@mins(BANK0[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    7794
                                             93 COMRAM     2     2      0
                                             16 BANK0     54    54      0
                           _I2C_Init
                           _I2C_Stop
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    7015
                                              0 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6056
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5701
                                             66 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4263
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Stop
   _RTC_Read_Calendar
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Stop
     _I2C_Write
       _I2C_Ready
   _RTC_Read_Clock
     _I2C_Read
       _I2C_Ack
       _I2C_Nack
       _I2C_Ready
     _I2C_Repeated_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Write
       _I2C_Ready
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F4      20        0.0%
DATA                 0      0      F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Dec 13 21:09:33 2020

                    __size_of_I2C_Ready 0012                      __size_of_I2C_Start 002E  
                           _SSPSTATbits 000FC7                      __size_of_I2C_Write 0022  
                                    l70 1102                                      l67 119A  
                                    l79 0DFA  RTC_Read_Calendar@read_calendar_address 0004  
                                   l131 125A                                     l133 1268  
                                   l142 141C                                     l135 1288  
                                   l144 142A                                     l136 128E  
                                   l145 142C                                     l161 1348  
                                   l170 1390                                     l139 13CC  
                                   l163 1362                                     l190 1408  
                                   l166 1368                                     l183 13B2  
                                   l159 133A                                     l175 13D0  
                                   l168 1376                                     l193 13E6  
                                   l177 13DE                                     l187 13FA  
                                   l179 13E0                                     l196 13F4  
                                   l911 0FAC                                     l920 084E  
                                   l913 0FE8                                     l908 0F6A  
                                   l941 0A80                                     l918 0846  
                                   l950 0CB4                                     l943 0AE4  
                                   l927 08E2                                     l960 121A  
                                   l956 1042                                     l981 0F22  
                                   l957 104A                                     l877 1154  
                                   l966 12FE                                     l992 142E  
                                   l989 11DE                                     l998 1334  
                                   u600 0E7E                                     _PEN 007E2A  
                                   u601 0E7A                                     u610 0EA6  
                                   u611 0EA2                                     u620 0EDC  
                                   u700 0FBC                                     u621 0ED8  
                                   u701 0FB8                                     u710 12F8  
                                   u630 11DE                                     u711 12F2  
                                   u631 11DA                                     u720 12FA  
                                   u640 1328                                     u800 083A  
                                   u641 1324                                     u801 0836  
                                   u730 1214                                     u650 12C0  
                                   u810 0864                                     u731 120E  
                                   u651 12BA                                     u811 0860  
                                   u740 1216                                     u660 12C2  
                                   u900 0A1E                                     u820 08C6  
                                   u901 0A1A                                     u821 08C2  
                                   u590 0E6C                                     u670 0F34  
                                   u750 107C                                     u910 0A3C  
                                   u830 0910                                     u591 0E68  
                                   u671 0F30                                     u751 1076  
                                   u911 0A38                                     u831 090A  
                                   u680 0F56                                     u760 107E  
                                   u920 0A56                                     u840 0912  
                                   u681 0F52                                     u921 0A52  
                                   u690 0FAC                                     u770 1094  
                                   u930 0A70                                     u850 0928  
                                   u691 0FA8                                     u771 1090  
                                   u931 0A6C                                     u851 0924  
                                   u780 142A                                     u940 0A80  
                                   u860 095C                                     u781 1426  
                                   u941 0A7C                                     u861 0956  
                                   u950 0A90                                     u870 095E  
                                   u790 081E                                     u951 0A8C  
                                   u791 081A                                     u960 13AA  
                                   u880 0974                                     u961 13A6  
                                   u881 0970                                     u970 1408  
                                   u890 09DC                                     u971 1404  
                                   u980 13F4                                     u981 13F0  
                                   u990 0B0A                                     u895 09CA  
                                   u991 0B06                                     _Day 00B8  
                       __end_of_I2C_Ack 140A                                     _pad 0F24  
                                   _min 00BC                                     _sec 00BE  
                                   wreg 000FE8                                    l1003 10A0  
                                  l1014 12C6                                    l1008 10A8  
                                  l1501 080E                                    l1431 0EA6  
                                  l1423 0E5A                                    l1511 086C  
                                  l1503 081E                                    l1433 0EDC  
                                  l1425 0E6C                                    l1441 11BA  
                                  l1521 08AA                                    l1513 088C  
                                  l1505 0820                                    l1601 0B8C  
                                  l1427 0E7E                                    l1443 11BE  
                                  l1451 1328                                    l1531 0928  
                                  l1523 08C6                                    l1515 0894  
                                  l1507 083A                                    l1611 0C36  
                                  l1603 0B9A                                    l1701 13CA  
                                  l1429 0E88                                    l1437 119C  
                                  l1445 1300                                    l1461 0F34  
                                  l1541 0998                                    l1525 08D6  
                                  l1517 089C                                    l1509 0864  
                                  l1621 0C72                                    l1613 0C44  
                                  l1605 0BD6                                    l1439 11A8  
                                  l1447 130C                                    l1471 0F8A  
                                  l1463 0F48                                    l1455 1290  
                                  l1551 0A3C                                    l1543 099E  
                                  l1535 0962                                    l1519 08A2  
                                  l1615 0C58                                    l1711 1142  
                                  l1703 1104                                    l1641 1366  
                                  l1633 1338                                    l1481 12C8  
                                  l1449 1310                                    l1473 0F8E  
                                  l1465 0F56                                    l1561 0AA6  
                                  l1553 0A56                                    l1545 09A4  
                                  l1537 0974                                    l1529 0916  
                                  l1609 0C12                                    l1625 0C7E  
                                  l1705 1116                                    l1801 0DDE  
                                  l1721 0CBA                                    l1571 139C  
                                  l1475 0FBC                                    l1467 0F62  
                                  l1459 0F24                                    l1563 0ABC  
                                  l1555 0A70                                    l1539 0988  
                                  l1547 0A02                                    l1627 0CA2  
                                  l1619 0C64                                    l1707 111E  
                                  l1811 0E08                                    l1803 0DE2  
                                  l1731 0CCC                                    l1723 0CBE  
                                  l1715 0CB6                                    l1661 128C  
                                  l1653 1258                                    l1573 13AA  
                                  l1645 138A                                    l1637 135C  
                                  l1485 11E0                                    l1477 0FD0  
                                  l1469 0F76                                    l1493 1082  
                                  l1557 0A90                                    l1549 0A1E  
                                  l1709 1126                                    l1813 0E1A  
                                  l1805 0DF0                                    l1741 0CD8  
                                  l1733 0CCE                                    l1725 0CC6  
                                  l1717 0CBA                                    l1583 13F6  
                                  l1655 126C                                    l1567 1394  
                                  l1647 1390                                    l1495 1094  
                                  l1559 0A96                                    l1591 0B18  
                                  l1671 1000                                    l1815 0E1E  
                                  l1751 0CEA                                    l1743 0CDA  
                                  l1735 0CD0                                    l1727 0CC8  
                                  l1719 0CBA                                    l1585 13E2  
                                  l1657 127C                                    l1569 1398  
                                  l1665 13CE                                    l1681 118A  
                                  l1489 104C                                    l1593 0B2A  
                                  l1673 1026                                    l1817 0E3A  
                                  l1761 0D02                                    l1753 0CEE  
                                  l1745 0CDC                                    l1737 0CD2  
                                  l1729 0CCA                                    l1499 141C  
                                  l1659 1284                                    l1579 13B0  
                                  l1691 10EE                                    l1683 10AC  
                                  l1675 1158                                    l1595 0B2E  
                                  l1587 0AE6                                    l1667 0FEA  
                                  l1771 0D50                                    l1763 0D08  
                                  l1755 0CF6                                    l1747 0CDE  
                                  l1739 0CD4                                    l1693 10FE  
                                  l1685 10BE                                    l1677 116A  
                                  l1597 0B52                                    l1589 0B0A  
                                  l1669 0FF2                                    l1781 0D66  
                                  l1773 0D54                                    l1765 0D0C  
                                  l1757 0CFE                                    l1749 0CE6  
                                  l1695 13B4                                    l1687 10CE  
                                  l1679 117A                                    l1599 0B76  
                                  l1791 0DCA                                    l1783 0D6C  
                                  l1775 0D58                                    l1767 0D16  
                                  l1759 0D00                                    l1697 13B8  
                                  l1689 10DE                                    l1793 0DCE  
                                  l1785 0D70                                    l1777 0D5E  
                                  l1769 0D32                                    l1699 13C8  
                                  l1795 0DD2                                    l1787 0D8E  
                                  l1779 0D62                                    l1797 0DD6  
                                  l1789 0DAC                                    ?_pad 0011  
                                  l1799 0DDA                                    STR_1 0809  
                                  STR_2 0809                                    STR_3 0805  
                                  STR_4 0805                                    STR_5 0801  
                                  u1000 0B52                                    u1001 0B4E  
                                  u1010 0B76                                    u1011 0B72  
                                  u1020 0C36                                    u1100 1042  
                                  u1021 0C32                                    u1101 103E  
                                  u1030 1348                                    u1110 0DF0  
                                  u1031 1344                                    u1111 0DEC  
                                  u1040 1358                                    u1120 0E08  
                                  u1041 1354                                    u1121 0E04  
                                  u1050 1376                                    u1130 0E3A  
                                  u1051 1372                                    u1131 0E36  
                                  u1060 1386                                    u1061 1382  
                                  u1070 1268                                    u1071 1264  
                                  u1080 127C                                    u1081 1278  
                                  u1090 13DE                                    u1091 13DA  
                                  u1177 0E44                                    _RCEN 007E2B  
                                  _RSEN 007E29                                    _Date 00B6  
                                  _Year 00B2                                    _lm35 00C2  
                                  _dbuf 00C3                                    _main 0CB6  
                       ?_RTC_Read_Clock 0001                                    _hour 00BA  
                      __end_of_I2C_Nack 13F6                                    _prec 00AE  
                      __end_of_I2C_Init 13CE                                    _temp 00A6  
                      __end_of_I2C_Read 1290                                    _nout 00AA  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
                                  _xtoa 080E                        __end_of_I2C_Stop 13E2  
                                  start 0000                            ___param_bank 000000  
      RTC_Read_Clock@read_clock_address 0004                                   ??_pad 0017  
                                 ?_main 0001                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                                   ?_xtoa 001C  
                          vfpfcnvrt@fmt 0045                            vfpfcnvrt@llu 004D  
                                 _SPBRG 000FAF                                   _SSPIE 007CEB  
                                 _SSPIF 007CF3                                   _TXREG 000FAD  
                                 _Month 00B4                                   _flags 00B0  
                                 _fputc 0E5A                         __end_of_isalpha 121C  
                                 _fputs 119C                       __end_of_I2C_Ready 142E  
                                 pad@fp 0011                                   _width 00AC  
                                 _putch 142E                                   main@i 00A4  
                       __end_of_islower 12C8                       __end_of_I2C_Start 1364  
                     __end_of_I2C_Write 13B4                         __end_of_isupper 1300  
                                 tablat 000FF5                                   status 000FD8  
                       __end_of_sprintf 1156                                   xtoa@c 0041  
                                 xtoa@d 001E                                   xtoa@i 003F  
                                 xtoa@n 0037                                   xtoa@p 0033  
                                 xtoa@w 0035                                   xtoa@x 0026  
                       __end_of_toupper 10AA                            _toupper$1478 000D  
                       __initialization 121C                            __end_of_main 0E5A  
                          __end_of_xtoa 0AE6                               ??_I2C_Ack 0001  
                                ??_main 005E                                  ??_xtoa 0027  
                         __activetblptr 000001                                  ?_fputc 0001  
                                ?_fputs 000A                                  ?_putch 0001  
                                _SSPADD 000FC8                                  _TRISB0 007C98  
                                _TRISB1 007C99                                  _SSPBUF 000FC9  
                          vfprintf@cfmt 005C                                  clear_0 1242  
                    _I2C_Repeated_Start 1364                                  pad@buf 0013  
                                _strlen 1300                                  fputc@c 0001  
                                fputs@c 000E                                  fputs@i 000F  
                             ?_I2C_Nack 0001                                  fputs@s 000A  
                             ??_isalpha 0003                               ?_I2C_Init 0001  
                             ?_I2C_Read 0001                               ?_I2C_Stop 0001  
                             ??_islower 0003                            __mediumconst 0000  
                                tblptrh 000FF7                               ??_isupper 0003  
                                tblptrl 000FF6                                  tblptru 000FF8  
                   ?_I2C_Repeated_Start 0001                                  putch@c 0001  
                      __end_of_vfprintf 104C                               ??_sprintf 005E  
                                xtoa@fp 001C                               ??_toupper 0009  
                            __accesstop 0060                 __end_of__initialization 1248  
                         ___rparam_used 000001                    ??_I2C_Repeated_Start 0002  
                        __pcstackCOMRAM 0001                            __pidataBANK0 140A  
                         __end_of_fputc 0F24                           __end_of_fputs 11E0  
                         __end_of_putch 1430                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                        ??_RTC_Read_Clock 0003  
                               ??_fputc 0005                                 ??_fputs 000E  
                               ??_putch 0001                              __pbssBANK0 00A6  
                          I2C_Read@flag 0001                          I2C_Read@buffer 0002  
                               _I2C_Ack 13F6                                 _ACKSTAT 007E2E  
                               ?_strlen 0001                      __size_of_vfpfcnvrt 01D0  
                               _SSPCON1 000FC6                                 _SSPCON2 000FC5  
                               _SSPSTAT 000FC7                               _I2C_Ready 141C  
                             _I2C_Start 1336                               _I2C_Write 1392  
                               __Hparam 0000                                 __Lparam 0000  
                     _RTC_Read_Calendar 10AA                               ?_vfprintf 0056  
                          __psmallconst 0800                      ?_RTC_Read_Calendar 0001  
                               __pcinit 121C                                 __ramtop 0800  
                               __ptext0 0CB6                                 __ptext1 1104  
                               __ptext2 0FEA                                 __ptext3 0AE6  
                               __ptext4 080E                                 __ptext5 104C  
                               __ptext6 1290                                 __ptext7 0F24  
                               __ptext8 1300                                 __ptext9 119C  
                       __size_of_strlen 0036                            __size_of_pad 00C6  
                               _isalpha 11E0                     ??_RTC_Read_Calendar 0003  
                               _islower 1290                                 _isupper 12C8  
                               _sprintf 1104                                 _toupper 104C  
                  end_of_initialization 1248                                 fputc@fp 0003  
                               fputs@fp 000C                              ?_I2C_Ready 0001  
                            ?_I2C_Start 0001                              ?_I2C_Write 0001  
             __end_of_RTC_Read_Calendar 1104                       __end_of_vfpfcnvrt 0CB6  
                             _RCSTAbits 000FAB                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                            ??_vfprintf 005C                                 strlen@a 0003  
                               strlen@s 0001                               _PORTAbits 000F80  
                             _TRISAbits 000F92                               _TRISBbits 000F93  
                             _TRISCbits 000F94                       __size_of_I2C_Nack 0014  
                     __size_of_I2C_Init 001A                       __size_of_I2C_Read 003A  
                     __size_of_I2C_Stop 0014                               _TXSTAbits 000FAC  
                           vfpfcnvrt@ap 0047                             vfpfcnvrt@fp 0043  
                           _BAUDCONbits 000FB8                          __end_of_strlen 1336  
                   start_initialization 121C                             __end_of_pad 0FEA  
  I2C_Repeated_Start@slave_read_address 0002                             ??_I2C_Ready 0001  
                           ??_I2C_Start 0002                             ??_I2C_Write 0001  
            __size_of_RTC_Read_Calendar 005A                             vfprintf@fmt 0058  
           __size_of_I2C_Repeated_Start 002E                             __pdataBANK0 00E3  
                              ?_I2C_Ack 0001                                ??_strlen 0003  
                         __pcstackBANK0 0060                               _buffer_TX 00E3  
                     __size_of_vfprintf 0062                             __smallconst 0800  
                              _I2C_Nack 13E2                                ?_isalpha 0001  
                              _I2C_Init 13B4                                _I2C_Read 1256  
                              _I2C_Stop 13CE                                ?_islower 0001  
                              ?_isupper 0001                                ?_sprintf 0060  
                        __size_of_fputc 00CA                          __size_of_fputs 0044  
                              ?_toupper 0007                          __size_of_putch 0002  
               __size_of_RTC_Read_Clock 0046                               _value_adc 00C0  
                             _vfpfcnvrt 0AE6                               _xtoa$1395 002F  
                             _xtoa$1396 0031                        __size_of_I2C_Ack 0014  
                            _ADCON0bits 000FC2                              _ADCON1bits 000FC1  
                            _ADCON2bits 000FC0                               main@hours 0098  
                             main@month 007A                              vfpfcnvrt@c 0055  
                             copy_data0 1230            I2C_Start@slave_write_address 0002  
                              __Hrparam 0000                              vfprintf@ap 005A  
                              __Lrparam 0000                              vfprintf@fp 0056  
                          __Lsmallconst 0800                           I2C_Write@data 0001  
                            ?_vfpfcnvrt 0043                              sprintf@fmt 0062  
                      __size_of_isalpha 003C                        __size_of_islower 0038  
                              __ptext10 0E5A                                __ptext11 142E  
                              __ptext20 1256                                __ptext12 12C8  
                              __ptext21 141C                                __ptext13 11E0  
                              __ptext22 13E2                                __ptext14 1156  
                              __ptext23 13F6                                __ptext15 10AA  
                              __ptext24 13B4                                __ptext16 13CE  
                              __ptext17 1336                                __ptext18 1364  
                              __ptext19 1392                        __size_of_isupper 0038  
                      __size_of_sprintf 0052                        __size_of_toupper 005E  
                         __size_of_main 01A4                           __size_of_xtoa 02D8  
                              _vfprintf 0FEA                                main@date 0070  
                              main@mins 008E                                main@year 0084  
                              isalpha@c 0001                               sprintf@ap 0068  
                              islower@c 0001              __end_of_I2C_Repeated_Start 1392  
                              isupper@c 0001                          _RTC_Read_Clock 1156  
                            _OSCCONbits 000FD3                             ??_vfpfcnvrt 0049  
                              sprintf@f 006A                                sprintf@s 0060  
                              toupper@c 0007                             _SSPCON2bits 000FC5  
                __end_of_RTC_Read_Clock 119C  
